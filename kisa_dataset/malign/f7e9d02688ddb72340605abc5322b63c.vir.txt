cmp
jz
mov
cmp
jnz
inc
mov
add
add
mov
push
mov
call
mov
mov
add
mov
add
add
mov
cmp
jz
mov
add
movzx
mov
dec
cmp
jz
mov
imul
push
mov
add
movzx
add
add
mov
push
push
mov
call
pop
cmp
jnz
mov
mov
add
mov
mov
add
mov
mov
xor
mov
xor
inc
cmp
jnz
xor
inc
cmp
jnz
cmp
jz
mov
add
mov
mov
mov
mov
add
mov
push
push
push
push
mov
call
mov
xor
cmp
jz
cmp
jz
mov
xor
inc
cmp
jnz
xor
jmp
add
xor
jmp
inc
jmp
push
push
push
push
mov
call
call
retn
cmp
inc
cmp
xchg
push
setalc
xchg
cmc
pushf
repne
sbb
cmp
call
mov
setalc
int
das
pop
sbb
test
mov
daa
setalc
adc
stosd
jp
push
mov
or
or
pop
jle
add
push
mov
add
setalc
int
sub
adc
stosb
inc
jp
popf
xor
push
jle
sbb
test
push
inc
imul
inc
adc
arpl
in
inc
jnz
inc
mov
cmc
pushf
std
inc
sbb
sbb
int
cdq
xor
scasd
xor
stosd
dec
mov
mov
mov
loop
push
mov
or
clc
add
inc
or
retf
inc
dec
pop
xor
pushf
std
xchg
pop
dec
and
enter
and
add
wait
sub
add
or
xor
add
mov
dec
mov
call
inc
test
mov
cmp
nop
scasb
dec
adc
outsb
and
neg
test
inc
add
or
adc
test
mov
push
cmp
xlat
pop
mov
add
imul
pop
mov
push
add
xchg
ht
adc
xor
adc
imul
add
or
xchg
sar
nop
pop
dec
jns
insb
pop
mov
daa
jnb
cmp
or
mov
mov
and
out
mov
xchg
js
xchg
adc
movsb
mov
dec
inc
insd
in
bound
cwde
inc
aas
pop
nop
call
jno
pushf
cmpsd
repne
push
dec
test
jnp
xchg
jge
xchg
jle
jbe
push
add
int
bound
jg
xchg
jbe
add
enter
cmp
sub
cmc
nop
push
push
scasb
mov
add
dec
retf
leave
jz
sbb
test
pop
aad
imul
xor
int
call
in
mov
aad
mov
push
push
or
xor
push
push
add
or
retf
iret
outsb
mov
inc
push
xchg
and
stc
pop
mov
and
mov
and
xchg
and
enter
jge
dec
jl
imul
nop
cmpsb
push
inc
call
and
stc
pop
mov
jo
scasb
mov
iret
lodsd
add
push
cmp
xlat
pop
adc
sub
and
clc
int
jle
icebp
dec
test
test
clc
xor
imul
pop
push
cmp
push
test
pushf
jg
jbe
rol
int
aam
daa
add
mov
pop
push
mov
stosd
call
mov
pop
retn
jbe
add
retn
xchg
test
sahf
cmp
jnb
inc
sub
jge
lock
stosd
and
push
mov
cli
sub
pop
mov
scasb
xchg
jmp
inc
or
clc
xor
push
sbb
xchg
jbe
mov
sbb
int
cdq
mov
cmc
adc
and
mul
clc
xchg
push
xor
pop
cmp
adc
iret
int
loopne
cmp
std
mov
xor
and
std
scasd
xor
push
adc
lodsb
jns
xchg
imul
push
mov
stosd
and
rcl
stosb
shl
pop
mov
xchg
sub
xor
push
sbb
nop
mov
int
loopne
cmp
std
mov
xor
and
or
mov
jno
cmpsb
or
int
xchg
aas
std
sbb
int
bound
fist
jns
cmp
or
xor
icebp
loopne
inc
mov
stc
sbb
sbb
test
pop
mov
cmp
push
sbb
int
retf
xor
sahf
xor
inc
scasd
mov
nop
pop
dec
and
xor
push
cmp
xlat
pop
int
loopne
inc
mov
adc
pop
inc
push
mov
test
popa
add
pop
mov
js
mov
pop
js
and
push
int
loopne
inc
mov
adc
out
inc
push
mov
inc
inc
mul
mov
scasd
lodsd
mov
xor
push
cmp
xlat
pop
mov
int
mov
jo
jle
fst
into
dec
dec
and
test
or
mov
jo
scasb
or
cmp
ja
loope
sbb
mov
mov
xor
sahf
xor
inc
dec
into
mov
stosb
cmp
xlat
cmp
cmc
retf
sahf
inc
mov
icebp
nop
leave
retf
retf
push
xor
rcr
ror
mov
retf
pop
test
movsb
fist
or
out
or
int
push
and
push
xor
jno
lodsd
add
push
cmp
xlat
pop
mov
xor
das
mul
shr
int
sub
push
sahf
inc
iret
mov
dec
xor
stc
pop
mov
jo
scasb
fild
fldcw
push
loope
sbb
mov
mov
jmp
cmpsd
adc
pop
inc
push
mov
test
popa
add
pop
mov
adc
xor
and
push
int
loopne
inc
mov
adc
das
inc
push
mov
inc
xor
stosd
or
scasd
in
mov
xor
push
cmp
xlat
pop
mov
int
mov
pop
js
adc
inc
mov
loopne
inc
mov
adc
out
inc
push
mov
test
popa
add
pop
mov
loopne
inc
mov
adc
iret
jle
fst
into
dec
dec
and
stosb
or
jp
inc
cmp
cmp
xlat
pop
mov
loopne
inc
mov
adc
jg
push
mov
test
popa
add
pop
mov
loopne
inc
mov
adc
pop
inc
push
mov
test
popa
add
pop
mov
sub
js
sbb
adc
loopne
inc
mov
adc
das
inc
push
mov
test
popa
add
pop
mov
loopne
inc
mov
adc
cmova
loopne
test
inc
mov
pop
mov
sub
jle
fst
into
dec
dec
and
stosd
or
mov
add
push
cmp
xlat
pop
mov
xor
das
mul
shr
int
sub
push
inc
and
pop
bound
test
cwde
push
sbb
mov
or
push
push
cmp
xlat
pop
mov
and
pop
pop
js
sbb
push
int
loopne
inc
mov
adc
outsd
inc
push
mov
test
popa
add
pop
mov
loopne
inc
mov
adc
dec
inc
push
mov
test
popa
add
pop
mov
sbb
inc
jz
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
mov
outsd
push
loope
sbb
and
cdq
int
in
movsd
cmc
mov
sub
pop
mov
or
xlat
pop
mov
sub
imul
enter
dec
dec
and
push
popa
or
pop
aaa
inc
cmp
cmp
xlat
pop
mov
sbb
aaa
ja
jle
fst
into
dec
dec
and
push
popa
or
mov
jo
scasb
sub
push
loope
sbb
mov
mov
lock
pop
ja
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
sti
mov
push
loope
sbb
mov
mov
jmp
cmpsd
adc
aas
mov
retn
int
loopne
inc
mov
adc
ud2
push
mov
test
popa
add
pop
mov
dec
and
cmpsb
inc
stosd
icebp
pusha
and
cdq
int
in
jle
fst
into
dec
dec
and
push
popa
or
dec
inc
cmp
cmp
xlat
pop
mov
loopne
inc
mov
adc
int
loopne
inc
mov
adc
outsd
mov
retn
jecxz
js
inc
dec
sub
pop
dec
inc
add
dec
add
jmp
retn
scasd
or
scasd
std
mov
xor
push
cmp
xlat
pop
mov
sub
jle
fst
into
dec
dec
and
imul
or
mov
inc
cmp
cmp
xlat
pop
mov
xor
daa
sub
enter
dec
dec
and
push
popa
or
dec
sub
lodsd
add
push
cmp
xlat
pop
mov
loopne
inc
mov
adc
int
loopne
inc
mov
adc
outsd
mov
mov
xor
test
inc
aas
mov
xchg
push
fisubr
jmp
jz
aas
sahf
inc
mov
aad
cmc
jle
fst
into
dec
dec
and
push
popa
or
mov
jo
scasb
pop
mov
push
loope
sbb
xchg
out
retf
int
loopne
inc
mov
adc
iret
jbe
add
jmp
int
loopne
inc
mov
adc
aas
mov
retn
int
loopne
inc
mov
adc
pop
mov
mov
add
pop
mov
mov
xor
inc
jg
imul
pop
dec
and
xchg
push
or
lodsd
add
push
cmp
xlat
pop
mov
and
jle
fst
into
dec
dec
and
imul
or
ja
or
mov
call
std
repne
mov
sub
push
jnb
push
arpl
retf
enter
retf
test
cwde
push
sbb
mov
add
push
push
cmp
xlat
pop
mov
pop
sub
push
shl
arpl
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
test
cwde
push
sbb
mov
add
push
push
cmp
xlat
pop
mov
pop
sub
push
retn
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
test
cwde
push
sbb
mov
add
cmpsd
or
push
xor
pop
mov
pop
sub
push
retn
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
test
cwde
push
sbb
mov
sbb
push
push
cmp
xlat
pop
mov
pop
sub
push
retn
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
test
cwde
push
sbb
mov
sbb
push
push
cmp
xlat
pop
mov
sub
push
inc
push
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
enter
retf
test
cwde
push
sbb
mov
sbb
mov
push
push
cmp
xlat
pop
mov
sub
push
rep
enter
retf
test
cwde
push
sbb
mov
sbb
mov
push
push
cmp
xlat
pop
mov
xor
out
push
jle
fst
into
dec
dec
and
inc
popa
or
scasb
or
scasd
stosb
inc
cmp
cmp
xlat
pop
mov
loopne
inc
mov
adc
scasd
stosd
push
mov
test
popa
add
pop
mov
push
lahf
xor
inc
mov
into
inc
mov
push
aaa
or
xlat
dec
jnz
jz
cmc
retf
and
rcr
mov
mov
inc
mov
icebp
nop
leave
sahf
mov
mov
setalc
add
mov
add
inc
jl
jp
stosd
jnb
retn
nop
pop
dec
and
out
or
push
adc
and
imul
or
scasb
or
scasd
mov
inc
cmp
cmp
xlat
pop
mov
or
ja
pop
js
and
push
int
loopne
inc
mov
adc
mov
mov
sbb
mov
scasd
pop
call
push
xor
pop
mov
sbb
daa
cwde
pop
jle
fst
into
dec
dec
and
inc
popa
or
mov
jo
scasb
fld
inc
loope
sbb
mov
int
xor
push
setalc
inc
das
wait
imul
pop
dec
and
cmp
arpl
jo
in
dec
lock
push
mov
push
cmp
xlat
pop
mov
sub
jle
fst
into
dec
dec
and
inc
popa
or
lodsd
or
scasd
cli
sbb
lodsd
add
push
cmp
xlat
pop
mov
xor
push
repne
jg
add
add
dec
sub
lds
pop
ja
in
xchg
lock
push
fstp
xor
push
cmp
xlat
pop
mov
lock
cwde
pop
js
sbb
xchg
mov
loop
mul
shr
retf
jb
adc
pop
mov
jnz
sahf
cli
sbb
sbb
add
nop
pop
dec
and
add
arpl
ja
in
inc
wait
mov
mov
adc
setalc
std
repne
push
mov
sahf
xor
inc
scasd
cmp
cmp
cwde
imul
into
jp
push
mov
or
into
rcl
cld
mov
push
mov
push
arpl
mov
push
aas
sahf
ja
sbb
cmc
jnz
inc
mov
mov
and
cmpsb
inc
fild
add
sahf
movsd
setalc
and
sbb
icebp
mov
jmp
int
loopne
inc
mov
adc
mov
push
setalc
test
inc
jo
popa
add
pop
mov
loopne
inc
mov
adc
lahf
lodsb
push
mov
test
popa
add
pop
mov
dec
and
cmpsb
inc
pop
sbb
cwde
xchg
test
or
or
mov
int
mov
or
xchg
sbb
dec
fadd
inc
jecxz
hlt
add
in
int
loopne
inc
mov
adc
shrd
fld
popa
add
pop
mov
int
xor
retf
test
mov
sal
enter
retf
test
cwde
push
sbb
mov
adc
push
push
cmp
xlat
pop
mov
sub
jle
fst
into
dec
dec
and
inc
popa
or
jp
inc
cmp
cmp
xlat
pop
mov
sub
push
repne
out
and
push
push
jb
xor
sub
pop
adc
aaa
repne
mov
arpl
dec
leave
int
stosb
add
bound
pop
test
movsb
int
and
pop
push
xchg
jnb
arpl
cli
inc
inc
inc
aaa
out
sahf
add
push
cmp
xlat
pop
mov
sub
aaa
mov
jle
fst
into
dec
dec
and
imul
or
jmp
jle
fst
into
dec
dec
and
imul
or
mov
sbb
cmp
cmp
xlat
pop
mov
xor
ja
push
jle
or
adc
add
pop
fnstenv
inc
mov
add
bound
pop
mov
ror
inc
retf
and
cdq
int
in
adc
push
int
cmpsb
or
cmp
xlat
pop
int
loopne
inc
mov
adc
pop
scasb
push
mov
test
popa
add
pop
mov
ror
jle
fst
into
dec
dec
and
imul
or
mov
sbb
cmp
cmp
xlat
pop
mov
loopne
inc
mov
adc
iret
mov
retn
test
inc
pusha
lodsb
popa
add
pop
mov
sbb
jle
fst
into
dec
dec
and
imul
or
jp
inc
cmp
cmp
xlat
pop
mov
and
jle
fst
into
dec
dec
and
dec
popa
or
mov
pop
inc
cmp
cmp
xlat
pop
mov
loopne
inc
mov
adc
dec
mov
rol
add
pop
mov
int
mov
enter
dec
dec
and
imul
or
cli
pop
inc
cmp
cmp
xlat
pop
mov
add
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
dec
mov
dec
loope
sbb
movsb
out
retf
adc
shl
bnd
retf
jle
fst
into
dec
dec
and
imul
or
dec
push
inc
cmp
cmp
xlat
pop
mov
xor
aaa
adc
rcr
repne
int
loopne
inc
mov
adc
jg
push
mov
test
popa
add
pop
mov
xor
das
mul
shr
int
sub
push
mov
add
enter
push
cmp
inc
mov
add
mov
test
cwde
push
sbb
mov
adc
mov
push
push
cmp
xlat
pop
mov
sub
js
or
push
int
loopne
inc
mov
adc
jmp
and
cdq
int
in
inc
stosb
inc
cmp
cmp
inc
mov
icebp
nop
or
jnz
scasb
cmp
call
adc
adc
mov
mov
enter
dec
dec
and
imul
or
cmp
inc
cmp
cmp
xlat
pop
mov
adc
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
mov
dec
loope
sbb
stosb
out
jle
fst
into
dec
dec
and
dec
popa
or
cmpsb
or
scasd
call
push
cmp
xlat
pop
mov
movsb
sahf
xor
inc
dec
dec
and
stosd
or
push
adc
adc
mov
or
or
xlat
pop
mov
dec
and
cmpsb
inc
imul
cwde
xchg
test
adc
and
sbb
mov
sub
pop
pusha
int
or
xlat
pop
mov
adc
pop
nop
pop
jle
fst
into
dec
dec
and
dec
popa
or
mov
jo
scasb
retf
int
loopne
inc
mov
adc
das
mov
popf
cld
inc
adc
mov
test
in
xchg
pushf
xor
push
cmp
xlat
pop
mov
push
js
and
push
int
loopne
inc
mov
adc
out
movsd
push
mov
inc
inc
push
add
or
scasd
lodsd
xchg
pushf
xor
push
cmp
xlat
pop
mov
loopne
inc
mov
adc
mov
call
jo
popa
add
pop
mov
dec
and
cmpsb
inc
jnp
add
test
add
or
pushf
std
cwde
cli
mov
js
add
sal
repne
mov
int
loopne
inc
mov
adc
outsd
movsd
push
mov
test
popa
add
pop
mov
push
js
and
push
retf
int
loopne
inc
mov
adc
das
movsd
push
mov
inc
adc
mov
test
in
xchg
pushf
xor
push
cmp
xlat
pop
mov
sbb
js
and
push
iret
mov
retf
lock
adc
jle
fst
into
dec
dec
and
dec
popa
or
mov
add
push
cmp
xlat
pop
mov
mov
adc
jle
fst
into
dec
dec
and
dec
popa
or
mov
jo
scasb
or
loope
sbb
test
retf
pop
test
movsb
int
insb
push
pop
push
idiv
arpl
mov
pop
aas
sahf
ja
imul
jnz
dec
mov
xor
sahf
xor
inc
setno
xchg
into
inc
mov
add
shl
stosb
inc
call
jns
or
xor
push
mov
push
push
pop
mov
std
mov
cmp
in
add
mov
inc
dec
sub
pop
in
inc
arpl
and
int
mov
dec
sub
pop
popf
inc
arpl
add
jmp
nop
pop
dec
and
adc
push
cmp
xlat
pop
int
loopne
inc
mov
adc
aas
cmpsd
push
mov
test
popa
add
pop
mov
xor
ja
push
js
adc
mov
mov
imul
into
shr
add
inc
mov
pop
mov
sub
inc
aaa
push
js
or
push
int
and
das
mul
shr
retf
dec
sub
pop
in
pop
jbe
add
jmp
jle
fst
into
dec
dec
and
dec
popa
or
or
scasd
or
cmp
cmp
xlat
pop
mov
in
mov
pop
js
mov
push
retf
int
loopne
inc
mov
adc
pop
cmpsb
push
mov
imul
sti
mov
test
cmp
xlat
pop
mov
sbb
xchg
push
pop
js
cmp
push
int
loopne
inc
mov
adc
fistp
popf
cld
inc
push
sub
mov
scasd
mov
push
cmp
xlat
pop
mov
sbb
nop
inc
xor
arpl
inc
push
in
test
inc
push
imul
or
cmp
xlat
pop
mov
adc
das
mul
shr
int
add
adc
pop
mov
popa
retf
pop
test
movsb
int
add
pop
push
xchg
arpl
mov
bound
sahf
ja
push
dec
mov
lock
cmpsd
xchg
pop
jle
fst
into
dec
dec
and
jnz
or
fmul
or
lodsd
add
push
cmp
xlat
pop
mov
int
mov
pop
push
jle
adc
inc
mov
sub
push
mov
add
add
dec
sub
lds
dec
inc
push
in
fiadd
xor
or
cmp
xlat
pop
mov
sbb
inc
mov
retf
mov
cmp
mov
lds
dec
xor
stc
pop
mov
jo
scasb
fistp
xor
call
mov
loopne
inc
mov
adc
pop
cwde
push
mov
test
popa
add
pop
mov
int
mov
push
jle
fst
into
dec
dec
and
imul
or
fisttp
or
lodsd
add
push
cmp
xlat
pop
mov
aam
aaa
and
jle
fst
into
dec
dec
and
imul
or
call
push
cmp
xlat
pop
mov
aam
pop
and
jle
fst
into
dec
dec
and
imul
or
fimul
or
lodsd
add
push
cmp
xlat
pop
mov
aam
push
and
jle
fst
into
dec
dec
and
jbe
or
jp
inc
cmp
cmp
xlat
pop
mov
add
pop
test
and
push
int
loopne
inc
mov
adc
outsd
wait
push
mov
inc
shr
add
scasd
sub
push
cmp
xlat
pop
mov
dec
and
cmpsb
inc
sbb
add
test
adc
and
add
xlat
mov
sub
pop
lock
arpl
xlat
pop
mov
sbb
test
repne
adc
mov
pop
jle
fst
into
dec
dec
and
ja
or
mov
inc
cmp
cmp
xlat
pop
mov
loopne
inc
mov
adc
iret
jz
test
inc
pusha
mov
int
loopne
inc
mov
adc
scasd
call
test
popa
add
pop
mov
xor
jle
fst
into
dec
dec
and
imul
or
fisttp
or
lodsd
add
push
cmp
xlat
pop
mov
xor
push
inc
cmp
nop
push
cli
lds
push
outsb
aas
cmp
and
add
movsd
fistp
xlat
lock
int
loopne
inc
mov
adc
das
call
test
popa
add
pop
mov
pop
sub
push
rep
push
arpl
retf
enter
retf
test
cwde
push
sbb
mov
outsd
or
sub
push
cmp
xlat
pop
mov
sub
push
push
inc
push
arpl
retf
enter
retf
int
bound
loope
nop
pop
dec
and
pop
sbb
adc
and
imul
or
push
inc
cmp
cmp
xlat
pop
mov
add
pop
insd
pop
js
and
push
int
loopne
inc
mov
adc
pop
pushf
push
mov
inc
shr
add
or
scasd
cmp
push
cmp
xlat
pop
mov
les
js
int
retn
push
mov
retf
scasd
lds
dec
cmp
or
xchg
push
jb
cmc
sbb
in
or
xchg
push
jb
in
dec
cmp
or
xchg
push
push
xchg
sbb
in
or
xchg
push
push
test
dec
cmp
or
xchg
push
jb
mov
dec
cmp
or
xchg
push
jb
movsd
sbb
in
or
xchg
push
loop
lds
cmp
adc
xchg
push
jmp
or
mov
stosb
mov
pop
mov
inc
icebp
insd
or
jo
mov
and
sahf
inc
jnp
or
ficomp
mov
clc
xchg
add
sub
sbb
or
pop
js
add
mov
inc
dec
sub
pop
jbe
add
jmp
retn
or
cmp
xlat
pop
mov
insb
mov
shl
push
retf
bnd
mov
retf
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
or
cmp
mov
mov
lock
mov
outsb
pop
js
and
push
retf
int
loopne
inc
mov
adc
add
mov
push
sahf
inc
mov
movsd
int
mov
test
cmp
xlat
pop
mov
and
jle
fst
into
dec
dec
and
jl
or
retf
jle
fst
into
dec
dec
and
imul
or
xlat
or
scasd
call
push
cmp
xlat
pop
mov
sbb
js
and
mov
mov
retf
jle
fst
into
dec
dec
and
jge
or
pop
push
inc
cmp
cmp
xlat
pop
mov
sbb
js
and
rep
push
retf
jle
fst
into
dec
dec
and
jge
or
sbb
inc
cmp
cmp
xlat
pop
mov
sbb
js
and
xor
adc
jle
fst
into
dec
dec
and
jge
or
fimul
inc
cmp
cmp
xlat
pop
mov
sub
mov
push
jle
fst
into
dec
dec
and
jge
or
jmp
int
loopne
inc
mov
adc
fist
popf
cld
inc
push
and
mov
scasd
mov
push
cmp
xlat
pop
mov
xor
adc
push
int
mov
or
inc
and
dec
add
push
inc
jecxz
out
mov
cmp
cmp
xlat
pop
mov
adc
pop
mov
inc
repne
retf
jle
fst
into
dec
dec
and
jle
or
mov
jo
scasb
jmp
and
cdq
int
in
or
iret
int
loopne
inc
mov
adc
call
scasb
test
inc
mov
popa
add
pop
mov
or
cmpsd
push
pop
jle
fst
into
dec
dec
and
jg
or
mov
jo
scasb
imul
loope
sbb
mov
retf
lock
add
inc
aad
jle
fst
into
dec
dec
and
imul
or
aam
or
lodsd
add
push
cmp
xlat
pop
mov
jz
aam
jle
fst
into
dec
dec
and
jg
or
mov
jo
scasb
retf
xchg
inc
cmp
pop
cmp
call
mov
int
mov
shr
push
retf
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
mov
cmp
loope
sbb
mov
retf
xor
inc
pop
dec
nop
pop
dec
and
mov
push
adc
and
imul
or
pop
add
lodsd
add
push
cmp
xlat
pop
mov
js
aaa
mov
sub
jnb
mov
mov
mov
pop
repne
mov
push
int
loopne
inc
mov
adc
jg
push
mov
inc
icebp
add
or
scasd
sbb
push
cmp
xlat
pop
mov
insb
mov
pop
js
cmp
push
retf
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
mov
loope
sbb
mov
sub
dec
and
cmpsb
inc
retf
sub
adc
push
int
mov
and
dec
sub
jecxz
in
mov
cmp
cmp
xlat
pop
mov
adc
xlat
push
jle
fst
into
dec
dec
and
jns
or
pop
add
lodsd
add
push
cmp
xlat
pop
mov
jo
aaa
fst
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
sub
loope
sbb
mov
retf
jle
fst
into
dec
dec
and
jns
or
cmp
inc
cmp
cmp
xlat
pop
mov
xor
pop
imul
jbe
dec
pop
scasb
rcl
and
cdq
int
in
jle
fst
into
dec
dec
and
imul
or
mov
inc
cmp
cmp
xlat
pop
mov
xor
das
mul
shr
int
sub
push
fiadd
lahf
add
enter
retf
int
loopne
inc
mov
adc
jg
push
mov
test
popa
add
pop
mov
dec
and
cmpsb
inc
cmp
add
test
adc
and
add
mov
sub
pop
rcr
or
xlat
pop
mov
dec
and
cmpsb
inc
jmp
adc
push
int
scasb
inc
jecxz
jmp
add
push
cmp
xlat
pop
mov
test
les
nop
pop
dec
and
mov
push
nop
inc
inc
mov
icebp
nop
or
jnz
scasb
fcom
xor
dec
mov
idiv
loop
mul
shr
int
sub
push
xchg
inc
outsd
push
add
enter
xchg
push
adc
std
mov
in
retf
bnd
int
loopne
inc
mov
adc
out
mov
add
inc
xor
mov
adc
js
imul
int
loopne
inc
mov
adc
mov
mov
cmp
mov
scasd
pop
test
push
xor
pop
mov
or
ja
pop
js
xor
push
retf
jle
fst
into
dec
dec
and
popa
or
or
inc
cmp
cmp
xlat
pop
mov
adc
lahf
ja
mov
mov
or
pop
std
pop
jo
xchg
jecxz
mov
outsd
pop
sub
xchg
das
cmc
mov
cwde
xor
push
sbb
in
loop
xchg
jo
setalc
xchg
xchg
xor
mov
and
push
retf
jle
fst
into
dec
dec
and
xchg
cmp
pop
push
push
in
inc
mov
scasd
xor
adc
push
dec
mov
mov
enter
dec
dec
and
popa
or
mov
jo
scasb
sbb
and
call
mov
jl
xlat
dec
pop
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
sub
and
call
mov
push
mov
dec
pop
js
inc
repne
retf
jle
fst
into
dec
dec
and
sar
xor
arpl
push
push
in
inc
mov
scasd
xor
adc
setalc
std
repne
mov
sahf
xor
inc
cmovnp
xchg
push
mov
cmp
xor
dec
imul
push
retn
jmp
int
loopne
inc
mov
adc
mov
mov
cmp
mov
scasd
pop
sti
pushf
xor
push
cmp
xlat
pop
mov
lodsb
sahf
xor
inc
lahf
dec
imul
push
stosb
scasd
jnz
dec
cmp
inc
mov
jnz
cmpsb
mov
retf
and
rcl
cmp
sahf
ja
jge
cmc
jnz
and
cmc
mov
xor
das
mul
shr
int
sub
pop
test
movsb
int
sub
pop
push
mov
push
arpl
xchg
inc
inc
inc
pop
cmp
add
push
cmp
xlat
pop
mov
adc
push
rcl
jle
fst
into
dec
dec
and
imul
or
int
or
scasd
mov
cmp
cmp
xlat
pop
mov
sbb
js
and
inc
movsb
mov
mov
dec
pop
jle
fst
into
dec
dec
and
popa
or
dec
js
cmp
cmp
xlat
pop
mov
pop
mov
mov
jle
fst
into
dec
dec
and
imul
or
sbb
cmp
cmp
xlat
pop
mov
sub
jle
adc
push
sub
dec
and
cmpsb
inc
or
add
adc
and
adc
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
stosd
mov
fst
movsb
retn
int
loopne
inc
mov
adc
fisttp
mov
retf
popa
add
pop
mov
dec
and
cmpsb
inc
wait
and
add
or
dec
jnp
push
adc
push
int
mov
or
push
cmp
and
xchg
mov
cmp
cmp
xlat
pop
mov
xor
das
mul
shr
int
sub
push
fiadd
xchg
add
enter
mov
mov
icebp
nop
or
jnz
scasb
in
setp
dec
inc
inc
mov
idiv
mov
pop
lahf
adc
push
int
mov
or
sar
and
inc
jecxz
xchg
mov
cmp
cmp
xlat
pop
mov
cld
sahf
xor
inc
dec
dec
and
rep
push
adc
adc
mov
jmp
and
cdq
int
in
sub
push
stosb
inc
outsd
xchg
add
enter
push
inc
mov
icebp
nop
or
jnz
scasb
fmul
call
adc
jg
mov
mov
push
push
jle
fst
into
dec
dec
and
imul
or
fidivr
cmp
cmp
xlat
pop
mov
xor
arpl
jle
or
lds
dec
cmp
wait
shl
push
mov
mov
ja
sahf
ja
jno
cmc
jnz
daa
mov
fisttp
aas
cmpsb
inc
stosd
cmp
cwde
xchg
test
adc
and
add
mov
sub
pop
mov
xlat
pop
mov
sub
push
repne
das
cli
add
enter
wait
shl
push
cmp
inc
in
aas
sahf
ja
jno
cmc
jnz
and
clc
xor
das
mul
shr
int
sub
push
stosb
inc
outsd
xchg
add
enter
push
cmp
jnb
jmp
enter
retf
xor
pop
mov
int
xor
retf
test
mov
pop
test
movsb
int
and
push
mov
push
arpl
cdq
inc
inc
inc
pop
xchg
sahf
add
push
cmp
xlat
pop
mov
xor
ja
push
jle
fst
into
dec
dec
and
imul
or
ror
scasd
mov
cmp
cmp
xlat
pop
mov
sub
inc
mov
retf
pop
test
movsb
int
and
push
pop
push
push
arpl
cwde
inc
inc
inc
cmpsd
xchg
sahf
add
push
cmp
xlat
pop
mov
sbb
ja
pop
js
and
push
int
loopne
inc
mov
adc
jg
push
mov
test
popa
add
pop
mov
cld
sahf
xor
inc
outsd
jp
add
add
dec
jmp
pop
jle
cmp
or
cmp
wait
shl
push
cmp
inc
push
jnz
sahf
inc
mov
cmc
sar
test
cmp
xlat
pop
mov
and
cmpsd
dec
pop
jle
fst
into
dec
dec
and
insb
popa
or
mov
add
push
cmp
xlat
pop
mov
xor
das
mul
shr
int
int
mov
dec
pop
pop
test
movsb
int
sub
push
aaa
pop
push
arpl
sahf
inc
inc
inc
xchg
test
sahf
add
push
cmp
xlat
pop
mov
xor
das
mul
shr
int
int
mov
inc
pop
pop
test
movsb
int
and
push
neg
arpl
sahf
inc
inc
inc
xlat
test
sahf
add
push
cmp
xlat
pop
mov
loopne
inc
mov
adc
aas
adc
test
popa
add
pop
mov
add
inc
jle
js
inc
repne
mov
mov
xchg
add
sbb
add
push
push
sub
pop
jo
sti
jecxz
jnb
inc
dec
xor
stc
pop
mov
jo
scasb
dec
add
test
cwde
push
sbb
mov
jnz
mov
push
push
cmp
xlat
pop
mov
mov
jge
add
into
dec
cmp
xor
cmp
sbb
jge
add
ror
and
jb
add
mov
or
xlat
jnz
pushf
mov
retf
or
mov
stosb
mov
pop
mov
inc
sub
or
mov
stosb
movsd
rcr
dec
sbb
or
sbb
in
inc
setalc
inc
fidivr
xor
popa
sbb
in
inc
out
inc
retf
sahf
inc
jnp
or
call
sub
pop
mov
std
mov
sahf
xor
int
add
push
shl
sbb
mov
dec
sub
pop
std
sbb
cmp
mov
xchg
xor
pop
sbb
jp
mov
inc
cmp
js
insd
bnd
mov
retf
into
jb
push
mov
or
xlat
pop
jnz
pushf
mov
retf
and
rcl
nop
mov
push
xlat
pop
push
arpl
mov
js
sahf
ja
jnz
cmc
jnz
sub
cmc
mov
sbb
pop
jo
js
cmp
push
int
loopne
inc
mov
adc
add
mov
js
sahf
inc
mov
les
cmp
xlat
pop
mov
cmp
jnb
add
mov
or
pop
and
pop
mov
xchg
sub
iret
stosb
push
rcr
mov
or
mov
stosb
inc
rcr
dec
and
mov
or
into
inc
retf
pop
mov
xchg
pop
cmc
mov
xchg
xor
dec
sbb
jnp
mov
xor
or
shr
mov
xor
mov
scasd
or
push
cmp
xlat
pop
mov
sbb
pop
jnb
js
push
repne
mov
pop
jle
fst
into
dec
dec
and
outsd
popa
or
mov
jo
scasb
wait
add
dec
push
loope
sbb
retf
mov
int
bound
and
mov
mov
mov
lds
pop
pop
push
in
mov
loop
push
fist
or
cmp
xlat
pop
mov
adc
out
push
jle
fst
into
dec
dec
and
push
out
retn
int
loopne
inc
mov
adc
lahf
test
mov
add
or
scasd
jge
pushf
xor
push
cmp
xlat
pop
mov
sbb
inc
inc
push
js
aad
mov
dec
cmp
wait
shl
xchg
cmc
mov
or
push
and
retf
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
mov
das
pop
loope
sbb
enter
mov
xor
das
mul
shr
int
sub
pop
test
movsb
int
sub
pop
push
ja
push
arpl
mov
mov
sahf
add
push
cmp
xlat
pop
mov
and
mov
push
jle
fst
into
dec
dec
and
imul
or
lodsd
add
push
cmp
xlat
pop
mov
adc
xchg
add
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
fild
loope
sbb
leave
out
retf
push
inc
cmp
or
jo
mov
dec
cmp
inc
mov
icebp
nop
leave
dec
mov
mov
xor
jle
add
mov
push
push
inc
jl
sub
test
in
retf
int
loopne
inc
mov
adc
out
xchg
add
inc
add
add
pop
mov
dec
and
cmpsb
inc
mov
add
test
or
push
mov
push
int
scasb
jle
fst
into
dec
dec
and
push
or
clc
or
scasd
sbb
cmp
cmp
xlat
pop
mov
xor
das
mul
shr
int
sub
push
fiadd
lodsb
add
enter
jmp
and
cdq
int
in
sub
push
fiadd
lodsb
add
enter
retf
test
cwde
push
sbb
mov
dec
or
sub
push
cmp
xlat
pop
mov
xor
idiv
jle
fst
into
dec
dec
and
imul
or
dec
or
lodsd
add
push
cmp
xlat
pop
mov
adc
jle
fst
into
dec
dec
and
imul
or
or
lodsd
add
push
cmp
xlat
pop
mov
and
jle
fst
into
dec
dec
and
imul
cmp
jz
cmp
cmp
xlat
pop
mov
sub
jle
fst
into
dec
dec
and
imul
push
dec
or
lodsd
add
push
cmp
xlat
pop
mov
int
mov
lock
js
sbb
push
retf
jle
fst
into
dec
dec
and
imul
or
dec
or
lodsd
add
push
cmp
xlat
pop
mov
int
mov
push
jle
pop
repne
clc
mov
mov
add
js
and
or
stosb
push
or
push
mov
retf
sahf
push
push
and
or
xlat
xor
cmc
retf
push
inc
cmp
or
mov
stosb
movsd
pop
pop
mov
or
xlat
or
enter
retf
or
adc
push
int
push
inc
cmp
dec
add
jnz
scasb
or
call
adc
jnb
mov
imul
into
shr
add
inc
push
lds
xlat
pop
mov
and
aaa
call
jle
fst
into
dec
dec
and
adc
std
or
scasd
or
cmp
cmp
xlat
pop
mov
loopne
inc
mov
adc
dec
clc
push
mov
test
popa
add
pop
mov
sub
out
push
jle
fst
into
dec
dec
and
imul
or
cld
or
scasd
cli
jbe
cmp
cmp
xlat
pop
mov
xor
pop
sbb
js
or
push
int
loopne
inc
mov
adc
out
sti
push
mov
test
popa
add
pop
mov
or
add
fidivr
xchg
or
into
rcl
les
push
pop
daa
push
arpl
mov
add
sahf
ja
dec
sal
jnz
xor
cmc
mov
insb
mov
leave
pop
js
and
push
retf
aaa
or
pop
loope
add
stosb
aad
push
mov
and
adc
mov
xor
inc
jnp
or
mov
or
clc
lock
mov
int
push
inc
cmp
dec
add
jnz
scasb
pushf
jns
xor
jge
pushf
adc
insb
idiv
mov
enter
dec
dec
and
imul
or
mov
jo
scasb
pop
cli
inc
cmp
call
loope
sbb
shl
mov
clc
insb
loop
mul
shr
int
pop
mov
mov
adc
mov
lahf
sahf
inc
mov
pop
in
inc
test
sahf
inc
mov
icebp
nop
leave
jbe
push
mov
dec
push
jle
add
mov
rcl
mov
add
pop
mov
int
loop
repne
jg
imul
pop
dec
and
cmp
arpl
and
in
mov
pop
dec
xor
push
cmp
xlat
pop
mov
xor
das
mul
shr
int
sub
pop
test
movsb
int
sub
push
xchg
push
arpl
stosd
inc
inc
inc
daa
xchg
cmp
cmp
xlat
pop
mov
and
js
xor
xor
push
retf
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
dec
std
inc
cmp
iret
int
loopne
inc
mov
adc
iret
std
push
mov
test
popa
add
pop
mov
sbb
xlat
jle
fst
into
dec
dec
and
adc
pop
mov
jo
scasb
cmp
inc
cmp
daa
pop
loope
sbb
shl
mov
lock
jle
fst
into
dec
dec
and
adc
pop
mov
jo
scasb
retf
int
loopne
inc
mov
adc
aas
std
push
mov
inc
mov
add
or
scasd
fucomp
pushf
xor
push
cmp
xlat
pop
mov
jo
mov
pop
js
and
push
retf
jle
fst
into
dec
dec
and
adc
pop
mov
jo
scasb
dec
cld
inc
cmp
mov
test
out
retf
int
loopne
inc
mov
adc
mov
mov
dec
add
or
scasd
pop
call
push
cmp
xlat
pop
mov
and
ja
pop
js
sbb
push
int
loopne
inc
mov
adc
jg
push
mov
test
popa
add
jmp
cmc
int
bound
loope
nop
inc
jle
adc
push
and
in
inc
stosb
inc
scasb
cmp
xchg
js
icebp
nop
or
jnz
scasb
mov
jnp
mov
idiv
xchg
daa
lds
or
movsb
fmul
pop
bound
test
cwde
push
sbb
mov
inc
or
sub
pop
mov
std
mov
in
cmpsd
xchg
cmp
sub
std
mov
xor
stc
pop
mov
jo
scasb
sub
inc
cmp
arpl
loope
sbb
setalc
out
xchg
adc
jnp
jbe
mov
adc
mov
movsd
mov
stosd
test
lahf
test
outsb
stosd
loop
push
mov
jge
jb
das
push
in
mov
xor
test
mov
test
js
and
push
int
loopne
inc
mov
adc
mov
dec
add
or
scasd
adc
insd
inc
mov
and
fdiv
fst
jle
fst
into
dec
dec
and
imul
or
pop
insb
inc
cmp
sbb
pop
imul
push
shr
in
sub
pop
imul
push
retf
jmp
aas
sahf
inc
mov
test
mov
les
js
push
repne
lock
pop
jle
fst
into
dec
dec
and
adc
pop
mov
jo
scasb
wait
inc
fst
loope
sbb
xlat
out
pusha
jb
xor
add
or
jbe
add
jmp
add
nop
pop
dec
and
pop
lds
aas
sub
in
inc
mov
setalc
xor
adc
add
std
repne
mov
adc
push
pop
push
arpl
dec
xor
test
mov
test
lahf
xchg
add
loop
adc
inc
popf
cmp
mov
wait
mov
setalc
xor
adc
setalc
std
repne
mov
adc
push
or
push
arpl
lds
outsb
dec
cli
stosd
call
or
scasd
insw
xchg
xor
dec
mov
cmc
int
bound
loope
sbb
test
mov
xlat
dec
jnz
mov
cmc
test
or
or
push
adc
push
int
or
adc
dec
mov
push
cmp
fistp
mov
cmpsb
std
xchg
xor
repne
bnd
mov
retf
iret
jle
fst
into
dec
dec
and
loope
sahf
xor
arpl
sub
in
inc
mov
xlat
xor
adc
setalc
std
repne
mov
sahf
xor
inc
outsd
push
imul
push
mov
in
inc
mov
pop
mov
ficom
cmp
and
rcl
in
mov
push
out
push
arpl
mov
or
sahf
ja
pop
sal
jnz
xor
push
dec
pop
cmp
xlat
push
jnz
and
dec
and
jge
dec
arpl
sub
inc
dec
sub
lds
jmp
sti
xchg
mov
inc
push
sti
dec
xor
pop
movsd
arpl
in
loopne
mov
or
cmp
in
inc
out
inc
xchg
retf
add
inc
mov
insd
iret
sub
inc
cmp
adc
or
adc
push
int
jp
cmp
inc
add
jnz
scasb
pushf
jno
xor
bound
idiv
sahf
xor
sub
xchg
or
mov
xchg
xor
xor
mov
mov
pop
lds
stc
stosd
call
retf
pop
mov
sahf
inc
mov
sbb
or
adc
test
mov
xlat
sub
cmc
test
add
das
xchg
cmc
pushf
std
cwde
sub
pop
js
and
push
int
loopne
inc
mov
adc
add
mov
or
sahf
inc
mov
lds
mov
les
jle
fst
into
dec
dec
and
imul
or
cli
pusha
inc
cmp
wait
shl
push
int
bound
and
or
sub
inc
dec
sub
lds
das
das
push
in
pop
mov
inc
push
retf
inc
xor
and
rcl
lock
push
pop
sub
arpl
mov
push
aas
sahf
ja
pop
sal
jnz
mov
mov
and
jge
jb
push
adc
adc
inc
mov
cmp
aas
dec
xchg
int
sub
pop
push
xlat
sub
arpl
mov
inc
inc
neg
sbb
aas
or
into
inc
sahf
inc
adc
sahf
inc
mov
or
into
inc
xchg
mov
sahf
inc
mov
icebp
nop
or
ja
xor
stosb
xchg
in
mov
jno
insd
or
mov
stosb
test
pop
mov
xchg
sahf
insd
pop
test
movsb
int
push
pop
push
push
sub
arpl
mov
vpcext
sub
cmc
jnz
mov
enter
dec
push
lods
lds
nop
push
loop
in
dec
cmp
xchg
or
jb
xchg
inc
loopne
push
pop
imul
sub
not
lahf
les
outsb
stosd
loop
pop
mov
jge
jb
mov
add
push
sub
js
push
retn
lodsb
pop
jbe
add
jmp
xchg
nop
pop
dec
and
retn
pop
test
movsb
fcmovne
sahf
xor
cwde
push
sbb
or
jle
push
and
push
bound
xor
insd
or
test
movsb
int
jo
pop
push
pop
sub
arpl
mov
or
sahf
ja
pop
sal
jnz
cmp
push
push
cmp
and
rcl
sbb
sub
jle
push
adc
jg
push
mov
test
popa
add
out
cmp
wait
shl
push
idiv
mov
or
sahf
inc
mov
mov
mov
test
js
inc
rep
mov
int
loopne
inc
mov
adc
das
not
mov
inc
add
or
scasd
in
out
xor
push
sbb
pop
in
mov
dec
mov
xor
cmp
or
scasd
pop
mov
xor
sbb
pop
in
mov
xor
or
shr
mov
inc
add
or
scasd
mov
out
sbb
pop
in
mov
cmpsb
mov
xor
cmp
adc
insd
inc
jl
or
shr
mov
inc
add
or
scasd
or
out
sbb
pop
in
mov
xor
test
mov
test
js
sbb
push
int
loopne
inc
mov
adc
aas
not
add
inc
lock
popa
add
out
cmp
xor
xchg
test
nop
pop
dec
and
outsd
lds
jmp
int
loopne
inc
mov
adc
fucomip
push
mov
inc
push
pop
add
or
scasd
mov
out
sbb
pop
in
mov
cmpsb
mov
xor
mov
enter
mov
into
xor
and
or
mov
sub
pop
pusha
mov
shl
mov
sub
pop
dec
jmp
retf
inc
push
adc
push
int
cli
enter
retf
nop
inc
mov
int
bound
loope
inc
sub
dec
cmp
cmp
icebp
call
mov
test
cwde
push
sbb
mov
pop
or
sub
adc
add
int
loopne
inc
mov
adc
aas
call
xchg
test
inc
lock
add
inc
mov
insd
iret
inc
mov
icebp
nop
or
push
xor
nop
inc
loop
add
xor
in
dec
mov
sal
bnd
dec
xor
stc
pop
mov
jo
scasb
cmp
inc
cmp
daa
or
call
dec
push
xor
movsb
jge
push
retn
lodsb
pop
jbe
add
jmp
adc
insd
inc
mov
mov
mov
test
js
mov
add
inc
retf
or
xchg
mov
fbstp
sbb
test
mov
and
mov
push
imul
or
out
pusha
in
mov
imul
xchg
xor
inc
sbb
shr
mov
pop
pop
test
movsb
fcomi
sahf
xor
cwde
push
sbb
or
arpl
mov
stosb
sahf
pop
push
mov
jnp
xchg
jle
inc
sub
inc
jl
xor
in
pop
bound
test
cwde
push
sbb
mov
push
or
sub
lock
arpl
push
mov
mov
or
sub
stosb
push
adc
or
retn
sbb
int
bound
loope
and
cdq
int
in
adc
outsb
std
mov
in
dec
scasd
xor
push
int
cmp
push
out
push
arpl
mov
mov
jnb
mov
enter
retf
pop
test
movsb
int
and
push
push
xor
arpl
mov
mov
pop
jnb
pop
or
into
inc
mov
nop
xor
js
icebp
nop
or
outsb
call
adc
adc
or
mov
xor
insd
or
test
movsb
int
dec
push
pop
push
aaa
xor
arpl
mov
pop
aas
sahf
ja
push
sal
jnz
pop
mov
push
push
dec
cmp
and
rcl
insb
jnz
sub
or
into
shr
add
inc
add
popa
add
inc
mov
insd
iret
imul
nop
push
add
mov
js
icebp
nop
or
jnz
scasb
mov
xor
popa
mov
idiv
imul
into
shr
add
inc
shr
popa
add
pop
mov
loopne
inc
mov
adc
cmpsb
mov
stosd
call
xchg
xchg
xor
std
adc
wait
mov
enter
ror
scasd
xor
push
retf
mov
int
loopne
inc
mov
adc
jg
push
mov
inc
icebp
pop
add
or
scasd
sbb
push
cmp
xlat
pop
mov
loopne
inc
mov
adc
dec
out
push
mov
test
popa
add
pop
mov
xor
inc
mov
jle
fst
into
dec
dec
and
imul
or
cli
pop
inc
cmp
cmp
xlat
pop
mov
sub
jle
adc
xor
jmp
cmp
sahf
ja
stosd
sal
jnz
add
lock
jle
adc
xor
jmp
hlt
int
loopne
inc
mov
adc
lahf
out
push
mov
test
popa
add
pop
mov
loopne
inc
mov
adc
jg
push
mov
test
popa
add
pop
mov
loopne
inc
mov
adc
pop
out
push
mov
test
popa
add
pop
mov
loopne
inc
mov
adc
aas
out
push
mov
test
popa
add
pop
mov
sbb
mov
pop
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
stosd
out
inc
cmp
xchg
loopne
sbb
out
mov
lock
int
mov
adc
int
loopne
inc
mov
adc
bound
add
pop
mov
sbb
out
pop
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
or
inc
cmp
mov
loopne
sbb
in
mov
lock
daa
fistp
enter
dec
dec
and
imul
or
mov
jo
scasb
fndisi
inc
cmp
xor
loopne
sbb
in
mov
jmp
int
loopne
inc
mov
adc
das
loope
mov
inc
adc
or
pushf
xor
push
cmp
xlat
pop
mov
sub
das
mul
shr
int
int
mov
pop
test
movsb
int
sub
pop
push
ja
push
arpl
mov
movsb
cmp
cmp
xlat
pop
mov
add
js
push
repne
push
retf
dec
sub
dec
xchg
pcmpgtb
jnz
inc
bound
inc
jle
fst
into
dec
dec
and
or
out
retn
int
loopne
inc
mov
adc
pop
loopne
mov
inc
xchg
push
add
or
pushf
xor
push
cmp
xlat
pop
mov
adc
xchg
xchg
pop
js
and
push
int
loopne
inc
mov
adc
cld
inc
push
push
add
or
pushf
xor
push
cmp
xlat
pop
mov
pusha
mov
xchg
pop
jle
xchg
in
cmc
lds
mov
jnb
imul
in
hlt
and
sahf
add
insd
or
dec
add
jmp
cmp
cmc
int
mov
push
push
dec
inc
stc
push
inc
jecxz
mov
add
push
cmp
xlat
pop
mov
sbb
ja
pop
jle
fst
into
dec
dec
and
push
popa
or
mov
jo
scasb
wait
jecxz
cmp
cmpsd
rep
sbb
jmp
int
adc
das
mul
shr
int
or
adc
pop
mov
jnp
xchg
jle
xor
or
inc
dec
sub
lds
aas
cmp
in
dec
inc
jecxz
push
cmp
or
cmp
xlat
pop
mov
and
lahf
test
pop
scasd
pop
scasb
inc
out
inc
cmp
or
push
or
std
mov
dec
pop
add
mov
int
retn
mov
push
dec
enter
retf
enter
retf
nop
inc
shr
retf
pop
test
movsb
int
jo
pop
push
daa
cmp
arpl
mov
push
aas
sahf
ja
scasb
sal
jnz
push
mov
lock
mov
push
js
mov
rep
push
retf
lock
in
mov
push
js
cmc
repne
int
loopne
inc
mov
adc
dec
in
mov
test
popa
add
pop
mov
sbb
push
xchg
pop
jle
fst
into
dec
dec
and
imul
or
mov
jo
scasb
mov
mov
loopne
sbb
call
cmc
dec
sub
push
jecxz
push
arpl
retf
test
cwde
push
sbb
mov
scasd
or
or
push
xor
pop
mov
and
jle
fst
into
dec
dec
and
or
pop
ja
inc
or
mov
retn
xor
adc
xlat
std
repne
push
mov
mov
enter
dec
dec
and
or
pop
ja
inc
or
mov
retn
xor
adc
neg
mov
sub
push
adc
push
arpl
retf
pop
test
movsb
int
xor
push
mov
push
arpl
dec
inc
inc
inc
pop
test
pop
test
sub
jge
push
in
icebp
in
out
cmc
bound
cmp
xchg
jo
dec
or
outsb
or
mov
stosb
push
push
push
mov
stosb
arpl
pop
test
movsb
int
adc
pop
push
pop
cmp
arpl
dec
inc
inc
inc
mov
cmp
dec
sub
in
inc
cli
inc
ja
aas
sahf
inc
mov
icebp
nop
or
call
adc
adc
mov
popa
dec
mov
retn
stosb
push
mov
nop
inc
inc
mov
icebp
nop
or
call
adc
push
idiv
lea
test
fmul
inc
add
aas
sahf
inc
mov
icebp
nop
or
jnz
scasb
lodsb
call
adc
push
idiv
inc
jns
push
pop
js
add
mov
inc
dec
xor
stc
pop
ja
mov
push
and
xor
adc
cld
xlat
std
repne
sbb
sahf
mov
imul
sbb
int
bound
loope
and
rcl
inc
jnz
sub
outsd
or
mov
stosb
into
push
push
mov
aaa
xchg
mov
in
inc
mov
xchg
sub
adc
push
int
cmpsb
xchg
push
push
dec
in
icebp
push
inc
jecxz
dec
xor
stc
pop
mov
jo
scasb
jmp
lodsb
pop
jbe
add
jmp
inc
adc
jnz
scasb
lodsb
call
adc
push
idiv
mov
retn
enter
retf
loopne
mov
movsb
or
or
insb
adc
xor
mov
popa
xor
push
in
push
test
adc
and
sbb
xchg
mov
sub
pop
jo
or
push
mov
movsb
jg
inc
lodsb
icebp
iret
dec
xor
stc
pop
mov
jo
scasb
retf
cmp
std
loopne
sbb
in
out
xchg
inc
scasd
jl
popf
jge
mov
enter
mov
jle
fst
into
dec
dec
and
imul
or
adc
or
in
add
retn
and
nop
pop
dec
and
and
arpl
add
in
dec
jecxz
push
jmp
xor
xlat
sbb
cmc
int
bound
loope
pop
test
movsb
int
and
push
pop
add
arpl
push
inc
inc
inc
mov
cmp
and
add
enter
xchg
push
adc
jecxz
mov
inc
dec
sub
jnz
cmpsb
sbb
in
mov
jl
mov
push
jle
or
ficomp
cmp
add
pop
xchg
jnz
add
cmp
test
movsb
test
in
inc
mov
xchg
in
mov
arpl
mov
xchg
inc
mov
push
jle
or
test
push
push
xor
and
rcl
adc
jnz
jle
or
mov
stosb
pop
push
push
mov
not
jz
mov
test
nop
inc
xor
sar
in
xor
inc
inc
mov
daa
aad
popa
or
movsb
fmul
pop
bound
test
cwde
push
sbb
mov
cmpsd
or
or
insb
jle
inc
add
int
loopne
inc
mov
adc
lahf
fist
add
inc
push
cli
popa
add
xchg
inc
cmp
add
test
dec
and
daa
lds
lahf
add
in
dec
dec
jecxz
push
pop
outsb
xor
retn
in
cmp
xchg
and
rcl
inc
jnz
sub
push
or
mov
stosb
jle
push
mov
jnp
xchg
jle
sbb
xor
sar
in
add
inc
inc
mov
daa
movsd
or
lds
retf
pop
mov
pop
cmpsd
mov
mov
lahf
or
push
sbb
push
pop
imul
push
popf
pop
std
sbb
xor
scasb
dec
call
std
sbb
xor
pop
call
fst
into
dec
dec
and
aaa
popa
or
adc
dec
inc
cmp
test
pop
loopne
push
pop
imul
adc
push
sbb
push
arpl
dec
xor
test
mov
test
inc
clc
push
jle
or
push
int
xor
push
jbe
call
int
mov
add
jnb
rol
in
pop
bound
test
cwde
push
sbb
mov
mov
ror
pop
mov
idiv
in
scasd
xor
push
adc
push
int
stosb
jbe
add
jmp
int
loopne
inc
mov
adc
jo
test
popa
nop
pop
dec
and
sub
arpl
pop
push
in
jp
loop
push
pop
insb
xor
retn
and
rcl
inc
jnz
sub
push
or
mov
stosb
jle
push
mov
pushf
out
or
test
movsb
int
sub
pop
push
mov
push
arpl
push
inc
inc
inc
pop
mov
sahf
inc
mov
add
into
inc
stosb
inc
fsub
cmp
js
icebp
nop
or
jnz
scasb
dec
pop
call
adc
dec
idiv
push
xchg
or
mov
int
cmpsb
jle
add
mov
xor
inc
jl
fidivr
add
enter
xchg
inc
sbb
int
bound
loope
bound
cmpsd
or
test
movsb
int
xor
pop
push
xlat
add
arpl
push
inc
inc
inc
div
pop
jnb
rol
enter
retf
test
cwde
push
sbb
mov
mov
retn
adc
push
int
cli
inc
dec
sub
jnz
mov
mov
mov
leave
add
add
insd
inc
mov
cmc
cmp
cli
push
js
adc
push
int
loopne
inc
mov
adc
out
fist
add
inc
cmp
add
cmp
shl
push
wait
cmp
sahf
ja
mov
adc
enter
push
nop
pop
dec
and
and
arpl
add
push
jecxz
push
or
or
cmp
xlat
pop
mov
loopne
inc
mov
adc
jg
push
mov
test
popa
add
cmp
cmp
wait
shl
push
stosd
cmp
sahf
ja
mov
adc
enter
push
nop
pop
dec
and
and
arpl
add
push
jecxz
push
wait
push
or
xlat
adc
popa
mov
mov
and
jge
jp
push
adc
adc
or
mov
stosb
outsd
cmp
mov
jnp
xchg
jle
inc
sub
inc
dec
sub
lds
das
add
in
jp
jecxz
push
retf
nop
inc
pop
test
movsb
int
sub
push
daa
add
arpl
push
inc
inc
inc
xchg
pop
jnb
in
in
pop
bound
test
cwde
push
sbb
mov
mov
lds
push
adc
jecxz
mov
aas
jnz
mov
mov
mov
xor
test
mov
test
mov
ror
push
int
loopne
inc
mov
adc
pop
ficom
add
inc
sar
popa
add
loope
cmp
wait
shl
push
scasd
cmp
sahf
ja
mov
adc
and
sal
cmc
pushf
jle
scasd
hlt
retf
scasb
push
add
adc
push
int
mov
push
dec
int
jmp
sbb
and
cdq
int
in
or
push
mov
xchg
xor
push
pop
popf
repne
mov
push
int
loopne
inc
mov
adc
pop
rcl
add
inc
adc
popa
add
inc
push
sti
jnb
or
mov
jmp
mov
jmp
xor
and
rcl
inc
jnz
sub
pop
or
mov
stosb
dec
push
mov
aaa
mov
sbb
add
into
inc
scasb
inc
cmpsd
lodsb
cmp
xor
adc
xor
and
dec
inc
mov
or
push
mov
xchg
inc
mov
push
jle
fst
into
dec
dec
and
imul
or
dec
dec
inc
cmp
add
pop
icebp
jnz
or
mov
and
jge
jbe
push
adc
adc
dec
mov
in
cli
scasb
adc
inc
cmp
xchg
xor
jo
dec
or
pop
or
mov
stosb
sahf
dec
push
mov
push
inc
or
add
leave
int
bound
loope
call
dec
xchg
int
xor
pop
push
mov
push
arpl
push
inc
inc
inc
pop
mov
sahf
inc
mov
add
enter
retf
enter
cwde
push
sbb
mov
mov
mov
push
repne
std
outsb
aas
sahf
xchg
scasd
adc
push
int
stosb
inc
mov
iret
dec
xor
stc
pop
mov
jo
scasb
or
inc
cmp
dec
in
loopne
sbb
cli
out
bound
adc
push
jns
push
arpl
dec
xor
test
mov
test
int
loopne
inc
mov
adc
pop
rcl
add
inc
adc
popa
add
sbb
cmp
wait
shl
push
mov
mov
sub
sahf
ja
mov
cmc
jnz
sbb
cmc
int
mov
adc
xor
and
add
rol
mov
jnp
xchg
jle
adc
mov
inc
cmp
aam
stosd
jnb
wait
add
into
inc
mov
sahf
inc
mov
icebp
nop
or
jnz
scasb
pop
push
call
adc
inc
idiv
in
dec
xor
stc
pop
mov
jo
scasb
or
inc
cmp
jecxz
loopne
sbb
sti
out
adc
insd
inc
mov
jnz
mov
test
jb
push
jle
or
push
int
xor
psubd
xor
push
std
mov
xor
stc
pop
mov
jo
scasb
sti
rol
jmp
enter
retf
inc
mov
icebp
nop
or
jnz
scasb
insb
push
call
adc
inc
idiv
in
jbe
add
jmp
jge
mov
enter
mov
repne
adc
test
push
retf
jle
fst
into
dec
dec
and
cmp
and
aas
or
scasd
cmp
cmp
cmp
xlat
pop
mov
or
cmp
xlat
pop
mov
pop
sub
push
cmp
mov
in
aaa
inc
retn
