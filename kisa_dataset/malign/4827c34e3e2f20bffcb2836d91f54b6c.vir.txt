mov
push
mov
sub
cmp
jnz
mov
xor
mov
sbb
xor
push
push
call
mov
sub
mov
mov
mov
and
lea
push
call
movzx
push
call
movsx
mov
sbb
mov
push
push
call
mov
and
mov
sub
push
call
xor
nop
push
call
inc
jnz
mov
cmp
jz
and
mov
push
push
push
push
push
call
neg
mov
or
cmp
jnz
push
call
mov
movzx
mov
push
call
sub
leave
retn
mov
push
mov
sub
push
call
xor
mov
test
jnz
push
push
call
mov
call
and
mov
push
call
mov
movsx
mov
rol
ror
mov
call
lea
push
call
bswap
mov
sub
mov
xor
mov
or
mov
mov
mov
push
push
call
mov
push
call
mov
mov
sbb
xor
sub
push
mov
not
neg
push
add
rcl
add
push
movzx
xor
sub
push
neg
add
call
adc
adc
xor
mov
rol
movzx
adc
shl
sub
lea
push
call
mov
add
mov
mov
or
cmp
jnz
push
call
bswap
mov
push
call
mov
push
sub
mov
mov
sbb
movsx
push
push
call
mov
add
push
call
cmp
jz
sal
pop
adc
mov
cmp
jnz
push
call
adc
sar
inc
and
bswap
xor
test
jnz
push
push
call
mov
push
push
call
mov
push
call
bswap
mov
cmp
jb
mov
or
cmp
jz
push
call
sbb
mov
rol
test
jz
call
neg
mov
or
mov
adc
mov
sbb
call
cmp
jnz
not
mov
cmp
jz
push
call
mov
xor
add
lea
push
call
mov
cmp
jz
mov
mov
and
mov
rep
cmp
jz
mov
push
call
not
push
push
push
push
push
push
push
call
mov
push
call
push
push
push
push
push
lea
push
push
call
push
push
call
push
call
mov
test
jp
lea
push
call
mov
mov
leave
retn
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
_SYSTEMTIME
_OVERLAPPED
pusha
mov
lea
push
or
jmp
mov
inc
mov
inc
add
jnz
mov
sub
adc
jb
mov
add
jnz
mov
sub
adc
adc
add
jnb
jnz
mov
sub
adc
jnb
xor
sub
jb
shl
mov
inc
xor
jz
mov
add
jnz
mov
sub
adc
adc
add
jnz
mov
sub
adc
adc
jnz
inc
add
jnz
mov
sub
adc
adc
add
jnb
jnz
mov
sub
adc
jnb
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jnz
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jnz
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
jz
mov
lea
add
push
add
call
xchg
mov
inc
or
jz
mov
push
dec
repne
push
call
or
jz
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jnz
sub
jmp
