push
mov
sub
call
call
test
jz
call
push
push
call
call
xor
mov
mov
lea
push
call
add
lea
call
lea
push
lea
push
push
call
add
lea
call
xor
mov
pop
retn
mov
test
jnz
mov
retn
mov
push
mov
test
jz
push
call
add
mov
mov
mov
call
push
push
push
push
push
call
push
mov
test
push
mov
mov
jz
push
call
add
mov
pop
pop
retn
push
mov
int
push
call
pop
retn
push
mov
push
call
mov
mov
test
jnz
call
mov
pop
pop
retn
push
push
call
add
pop
pop
retn
push
mov
mov
sub
push
push
mov
or
push
mov
cmp
jbe
mov
jmp
mov
mov
mul
mov
shr
shr
cmp
jbe
mov
sub
lea
cmp
jbe
mov
lea
xor
test
jz
cmp
ja
push
call
mov
add
test
jz
mov
test
jz
cmp
jb
mov
jmp
mov
push
push
push
call
mov
add
cmp
jb
mov
push
call
mov
add
mov
mov
mov
mov
cmp
jb
mov
mov
pop
pop
pop
mov
pop
retn
lea
mov
mov
call
pop
and
mov
add
retn
push
mov
call
inc
dec
mov
pop
retn
mov
mov
and
add
mov
add
inc
add
retn
mov
mov
add
add
mov
sub
mov
add
mov
sub
xor
mov
retn
inc
inc
mov
cmp
jnz
retn
dec
mov
mov
xor
inc
mov
inc
inc
dec
jnz
dec
retn
mov
mov
add
push
push
call
retn
add
mov
add
add
mov
add
movzx
sub
mov
lea
mov
mov
retn
push
call
lea
add
inc
mov
ror
call
jnz
mov
pop
inc
rol
int
inc
push
int
jnz
lea
inc
dec
add
pop
int
inc
add
inc
rol
jnz
int
call
add
inc
inc
inc
sub
add
inc
jnz
push
mov
mov
mov
cmp
jz
cmp
jz
cmp
mov
jz
mov
push
mov
push
push
push
call
pop
retn
cmp
jnz
mov
cmp
jnz
mov
push
push
call
xor
pop
retn
push
call
xor
pop
retn
mov
mov
mov
mov
lea
mov
push
push
push
push
mov
push
push
push
push
push
push
push
push
call
mov
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
xor
pop
retn
push
mov
add
mov
add
mov
push
xor
mov
mov
sub
xor
inc
inc
inc
inc
mov
dec
jnz
mov
mov
mov
mov
mov
call
xor
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
call
call
xor
push
push
push
lea
push
call
test
jz
mov
mov
lea
push
call
lea
push
call
xor
push
push
push
lea
push
call
test
jnz
mov
pop
retn
push
mov
sub
mov
dec
mov
call
sub
mov
dec
cmp
jnz
inc
cmp
jnz
push
call
inc
push
push
inc
cmp
jnz
call
xor
mov
mov
dec
call
dec
mov
xor
mov
mov
add
call
cmp
jnz
call
test
jz
inc
inc
inc
inc
inc
mov
mov
cmp
jb
mov
mov
cmp
jnb
call
add
jmp
xor
pop
pop
pop
mov
pop
retn
mov
mov
retn
push
mov
push
xor
push
mov
mov
mov
call
cmp
jnz
or
jz
inc
inc
jmp
xor
inc
pop
pop
mov
pop
retn
mov
mov
mov
mov
lea
call
inc
push
mov
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
pop
out
insb
das
and
shr
jo
jb
into
dec
and
or
pop
pop
dec
aad
push
adc
lds
sub
push
xlat
pop
sub
adc
sbb
pop
xor
call
dec
imul
or
inc
inc
and
push
in
pop
pop
dec
enter
in
imul
xchg
mov
mov
jl
outsb
loopne
dec
and
aad
push
dec
mov
mov
jnz
insd
test
pop
adc
out
sub
add
jnz
cmp
adc
pop
std
les
and
push
icebp
pop
imul
add
dec
xor
insb
inc
push
pop
jnz
push
sal
push
out
dec
or
call
pop
pop
push
push
loopne
push
or
mov
lodsb
pushf
or
xlat
sub
dec
enter
in
and
nop
or
imul
int
fld
xchg
mov
outsb
push
push
in
pop
pop
push
cmpsd
lds
dec
mov
dec
xlat
pop
push
dec
pop
jmp
loopne
push
pop
std
lock
and
lea
fdivr
jnb
icebp
adc
sbb
aad
and
mov
dec
in
push
dec
dec
cmc
and
in
rep
xor
xchg
pushf
call
imul
inc
cmp
mov
or
xlat
pop
dec
pop
pop
loope
push
push
in
mov
add
jnz
imul
pop
mov
adc
jge
push
pop
out
scasd
mov
pushf
cli
dec
jb
cmp
cmp
xchg
pop
aad
jg
push
xor
fcomp
add
pop
push
insb
das
and
cmp
inc
jo
cmpsd
hlt
loope
push
pop
icebp
les
call
cli
dec
jge
rol
dec
mov
scasd
jmp
cmp
push
cmp
shl
daa
cmp
inc
inc
push
add
inc
xor
pop
sar
inc
lea
inc
lea
int
mov
inc
xor
inc
call
retn
push
push
push
mov
call
test
jz
dec
jnz
pop
pop
pop
retn
pop
sub
push
jmp
mov
inc
retn
