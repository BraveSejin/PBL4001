sub
jmp
sub
jmp
cwde
in
pop
jb
sar
push
stc
leave
cmovle
aas
or
bound
rcr
test
loope
sbb
inc
stc
sbb
jmp
jnz
jnb
popf
dec
push
popa
fld
mov
mov
stosb
cld
inc
push
ficomp
movsb
stosb
daa
scasb
adc
jnb
movsb
adc
xor
fist
jb
dec
outs
or
daa
lds
dec
mov
pop
add
mov
mov
fisttp
test
sub
jmp
xor
pop
pop
pop
pop
pop
pop
clc
jnb
cdq
shl
cmp
cmp
mov
mov
call
jmp
jmp
call
and
xchg
xchg
cmp
int
inc
pop
out
inc
sub
mov
adc
xchg
das
jmp
push
push
stc
push
push
push
push
jb
xchg
jo
loope
dec
clc
jnb
das
push
out
imul
mov
push
adc
dec
pop
into
out
hlt
add
mov
les
add
retf
mov
bound
js
jnz
rol
add
int
jnz
jnb
pop
adc
retn
pop
sub
clc
jmp
inc
sub
nop
mov
jmp
setalc
xchg
add
add
clc
jmp
mov
jmp
sbb
sbb
pop
push
pop
jnb
mov
push
pushf
mov
int
insb
pop
inc
loopne
insb
push
adc
loop
jmp
mov
dec
cmp
xor
mov
jb
pop
leave
rol
pop
leave
sal
mov
sbb
sbb
in
pop
dec
lds
xor
xchg
push
adc
leave
sal
loop
cmp
cdq
leave
xchg
adc
int
call
mov
jnb
cld
cdq
shl
sub
and
xor
daa
mov
or
cdq
leave
and
mov
jecxz
jno
inc
setalc
fidiv
pop
push
push
pop
in
pop
cmp
push
imul
sbb
sbb
imul
fadd
sbb
cdq
leave
shl
pop
leave
iret
