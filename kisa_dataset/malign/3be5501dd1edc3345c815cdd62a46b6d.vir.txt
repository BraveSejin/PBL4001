aad
test
mov
movsb
and
pop
pop
xor
inc
pop
push
aad
sbb
into
ficom
neg
leave
lahf
mov
and
xor
into
xor
and
inc
clc
jo
inc
xchg
iret
push
xchg
test
and
mov
xchg
iret
clc
jmp
rcr
push
fisub
xlat
adc
mov
push
pusha
stc
jb
inc
jns
mov
sbb
sub
ja
js
les
adc
or
call
adc
inc
sub
jnb
jbe
std
scasd
daa
pop
jmp
add
jmp
movsb
cmp
stc
jb
push
jz
jb
dec
inc
aas
repne
jmp
pop
add
jmp
mov
jmp
sbb
add
stc
jmp
mov
jmp
test
sub
jmp
add
jmp
cmpsb
dec
sub
clc
jnb
mov
jnz
jnb
stosb
fcomp
cdq
call
pop
retf
add
jmp
sub
stc
jmp
or
jnz
jb
or
sbb
stc
xor
test
scasb
jecxz
cmp
test
out
mov
jb
xchg
and
lodsd
ficomp
lodsb
sbb
call
jmp
popa
stc
jmp
push
jmp
push
adc
xchg
int
int
inc
push
pop
jecxz
mov
xchg
rol
mov
dec
xor
nop
cmp
xchg
in
sbb
or
push
mov
xchg
bswap
mov
xchg
mov
retn
pop
push
inc
xchg
xchg
push
mov
pop
mov
mov
cwde
dec
inc
xchg
inc
in
pop
fimul
