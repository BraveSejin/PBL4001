pushf
pushf
lea
jb
shld
cmp
bswap
setns
push
mov
mov
call
pushf
pusha
call
in
jnp
sub
bound
sbb
dec
sbb
jb
add
add
or
outsb
dec
retn
mov
jmp
in
and
pop
xchg
loop
jp
out
in
jb
push
loopne
push
cld
rep
xchg
jns
mov
test
mov
outsb
push
xor
xchg
cdq
jg
xchg
jnb
aad
in
mov
mov
mov
fisubr
lds
int
retf
lea
jnz
pusha
bswap
bswap
shr
mov
test
pushf
add
pushf
pushf
cmp
bt
movzx
movsx
pop
xor
stc
mov
call
fcomip
xor
pop
int
in
push
mov
call
lea
ja
jmp
call
call
jmp
lea
call
call
test
cmp
jmp
mov
mov
mov
push
mov
push
pushf
push
lea
jmp
sub
call
mov
mov
mov
mov
mov
mov
mov
lea
jmp
mov
call
mov
mov
rcr
xchg
mov
sti
cmp
add
lahf
pop
nop
movsd
fisub
retf
scasb
imul
pushf
pusha
lea
jmp
bsf
mov
adc
cmp
add
jmp
dec
clc
cmp
pusha
pusha
sbb
mov
jmp
lea
cwde
push
pushf
mov
call
mov
lea
jnz
test
mov
not
push
xchg
mov
adc
shrd
xadd
bsf
sub
xor
adc
jmp
push
pop
call
mov
push
pushf
pusha
pushf
lea
jmp
pushf
lea
jnb
cwde
xchg
setle
jmp
xlat
dec
pusha
lea
jb
call
pushf
mov
bt
stc
sub
cmp
cmc
stc
shl
clc
push
mov
jmp
sub
pushf
lea
jnz
pusha
sal
shl
mov
dec
mov
rol
xor
bsf
sbb
cmp
not
mov
setnp
rcr
mov
shld
stc
and
neg
mov
btc
btr
mov
clc
mov
btr
xor
rcr
mov
xor
and
sub
bt
jmp
pushf
lea
jnb
stc
pusha
stc
add
call
iret
insb
dec
sbb
lea
ja
sbb
call
jecxz
js
loope
popa
xor
or
cwde
lodsd
push
sbb
repne
aam
jns
popf
rol
in
jmp
cmc
rcl
mov
sets
test
out
add
aam
push
rcr
cmp
xor
pusha
mov
aad
arpl
shl
mov
pop
cmp
inc
pop
cmp
mov
cmp
add
and
jnz
ja
xchg
push
dec
cmp
mov
stc
outsd
dec
xchg
fist
imul
pop
call
push
rep
pusha
call
sbb
and
ficomp
dec
outsb
adc
in
and
jb
scasd
pop
sub
retf
adc
jmp
bt
clc
push
cmp
mov
pusha
pushf
jmp
lea
call
push
mov
pushf
lea
jb
add
aam
btc
rdtsc
movzx
pushf
inc
and
clc
shr
bswap
setb
pushf
pop
imul
ror
lea
lea
lea
pusha
not
mov
mov
bt
shr
movzx
xchg
sar
mov
neg
bswap
bswap
ror
mov
jmp
lea
jb
not
adc
mov
or
mov
cmc
shl
pushf
pusha
call
mov
cmp
mov
test
cmp
mov
mov
jmp
bt
clc
cmp
jmp
lea
ja
clc
cmc
imul
jmp
pushf
mov
push
not
setp
mov
push
push
mov
mov
lea
jmp
pushf
push
mov
lea
jb
lea
dec
setb
bts
movzx
and
bt
or
shr
rcl
imul
cmp
not
stc
movsx
lea
shl
push
not
and
pusha
xchg
xchg
call
jmp
xor
sal
call
call
jnz
sub
aaa
sub
xchg
mov
adc
sub
fbld
hlt
xor
jmp
pusha
stc
shl
mov
mov
mov
jmp
mov
movsx
call
lahf
lea
lahf
bswap
movsx
mov
mov
call
call
mov
sbb
cmp
jmp
push
push
mov
nop
lea
jb
call
clc
outsb
in
mov
outsb
cmp
dec
add
jmp
out
pop
jnz
fcom
mov
mov
sub
xor
jmp
call
test
push
call
cmp
mov
jmp
push
lea
call
stc
jmp
pushf
lea
jnb
bt
cmp
cmc
sub
pusha
lahf
lahf
jmp
cmp
jmp
pushf
xor
jmp
lea
call
cmp
pushf
jmp
jmp
jmp
xchg
mov
neg
bt
btr
sub
mov
stc
cmc
xor
clc
pushf
test
repne
pusha
lea
jnz
bsr
or
call
jmp
mov
repne
outsb
mov
inc
out
mov
xor
inc
adc
mov
jle
sbb
jmp
out
xor
fild
mov
adc
adc
mov
fcmove
mov
dec
sub
jecxz
clc
aam
scasb
adc
dec
pop
push
inc
iret
add
lea
mov
jmp
test
mov
fbld
sbb
pop
xor
and
imul
and
mov
scasd
and
jnz
push
inc
mov
sbb
bsf
mov
xchg
xchg
mov
sbb
mov
mov
and
popf
jmp
shl
push
mov
test
clc
stc
cmp
call
scasd
leave
inc
in
fidivr
wait
loope
loop
jge
xor
push
mov
test
dec
cmpsd
push
mov
setnle
mov
not
not
not
lodsb
call
add
mov
call
add
pop
retn
pushf
call
mov
push
pushf
pushf
lea
jmp
lea
jnz
pusha
xor
bt
aas
movzx
lea
mov
cmc
sal
not
add
adc
rcr
shl
ror
mov
test
jmp
pushf
pusha
call
jmp
pusha
call
push
adc
or
sub
add
cmp
fmul
popf
add
retn
bsf
mov
shl
mov
aam
daa
adc
sub
rol
pusha
and
aaa
daa
call
push
push
lea
call
cmc
pushf
mov
test
cmc
push
mov
stc
pusha
clc
cmc
cmp
jmp
push
push
clc
sub
test
call
shl
cdq
inc
mov
dec
cmp
pop
fdivr
stc
lodsd
out
hlt
call
mov
pop
push
bswap
lea
mov
jmp
pusha
mov
lea
jnz
test
bt
mov
add
shrd
sar
add
sub
xor
mov
cmc
pusha
sub
test
bt
push
pop
call
pushf
call
lea
jnb
movsx
adc
mov
bsr
call
call
cmp
pushf
jmp
cwde
push
inc
movzx
stc
shr
jmp
jmp
push
clc
bt
add
test
mov
call
cwde
sbb
mov
pushf
movzx
call
lea
jnb
btr
pop
sub
pop
sbb
rcl
mov
pushf
cmp
bswap
cwde
mov
mov
jmp
clc
sub
jmp
add
shl
xchg
btc
pop
test
pop
test
call
push
lea
jnz
or
inc
adc
or
sub
mov
and
mov
or
ja
rcl
add
bt
mov
pushf
test
lea
jmp
mov
pushf
mov
lea
jb
dec
cmc
setl
mov
clc
sub
setb
not
mov
pusha
call
jmp
push
mov
shr
imul
cmp
jnb
mov
mov
sub
shr
add
call
clc
pop
retn
xor
shr
add
mov
sub
jb
mov
add
call
sub
jnz
retn
das
mov
call
mov
mov
setnle
lea
mov
shl
pushf
mov
shr
ror
push
not
sal
rol
sbb
push
add
setnp
rep
call
jmp
push
mov
pusha
mov
mov
push
retn
mov
bsr
aaa
sal
shrd
sub
aaa
sbb
aaa
aaa
and
ror
jmp
mov
mov
pusha
push
retn
retn
push
lea
jb
cmp
cmp
pusha
mov
lea
jnz
test
mov
cmc
cmp
stc
add
clc
movzx
bt
test
bts
mov
bt
pusha
cmc
pushf
add
call
push
lea
jnb
jmp
push
repne
pusha
lea
jnz
lea
xor
sub
rol
mov
bts
rcl
sal
bts
sub
btc
push
shr
lea
lea
bt
bt
bt
sub
pusha
jmp
mov
mov
not
jmp
mov
pushf
push
call
stc
push
mov
shl
jmp
pusha
push
push
adc
push
lea
jg
clc
sub
cmc
jmp
add
push
cmp
xor
push
push
push
dec
cmc
push
bt
cmp
lahf
lahf
pop
lea
lea
movzx
mov
push
call
fsubr
adc
push
inc
into
inc
mov
iret
sbb
mov
lea
pushf
pusha
lea
jmp
push
cmc
pusha
cmp
mov
push
jmp
lea
jp
pushf
mov
pushf
not
movzx
mov
mov
pusha
pushf
push
retn
mov
push
jmp
call
daa
pop
lea
jb
aaa
bt
setns
mov
adc
xadd
not
not
clc
dec
xchg
cmp
mov
aad
add
cwde
jmp
not
bswap
lea
call
call
pusha
pushf
sbb
mov
lea
push
cmc
stc
xchg
jmp
lea
jz
pushf
mov
lea
jmp
imul
jmp
setb
mov
lea
pushf
push
jmp
shl
lea
setnl
bswap
push
mov
bswap
sbb
push
shld
sub
mov
rol
ror
pushf
neg
mov
clc
cmp
cmp
call
not
rcr
mov
test
shl
pushf
bt
add
jmp
lea
lea
jp
push
pushf
mov
lea
call
cmp
test
cmp
pushf
pusha
sbb
push
stc
bt
lea
add
test
push
xor
shr
push
movsx
lea
adc
bsf
mov
dec
seto
ror
dec
not
stc
add
call
pushf
call
adc
test
sub
pusha
bt
cmc
pushf
shl
bt
mov
bt
jmp
push
lea
lea
jb
pushf
pusha
lea
call
jmp
jmp
mov
pushf
push
push
mov
lea
jmp
ror
lea
clc
mov
cmp
dec
sbb
inc
sub
sar
test
bt
mov
rcl
mov
not
shl
shl
mov
sar
mov
xor
mov
shr
bsf
pushf
shr
mov
bsr
mov
setnle
pusha
sub
clc
rcr
mov
lea
lea
mov
aad
rol
sal
sub
cwde
push
xor
rcl
and
sub
xor
adc
push
mov
add
js
pusha
stc
cmp
shl
bt
add
call
mov
push
push
jmp
