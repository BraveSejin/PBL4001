inc
cmp
jmp
retn
mov
jmp
mov
call
pop
xchg
cmovge
pop
jmp
mov
bswap
pop
jmp
push
jmp
retn
retn
cmp
jmp
sbb
neg
jmp
jz
pop
pop
shld
cmc
pop
jmp
push
mov
push
jmp
jz
mov
rcl
cmovl
mov
clc
rol
or
mov
add
cmc
xor
jmp
cmp
jbe
or
jmp
lea
dec
mov
movsx
mov
mov
setbe
mov
dec
mov
inc
jmp
mov
bswap
mov
not
pop
jmp
jb
lea
push
jmp
push
mov
cmp
test
cmc
push
test
push
cmc
push
sbb
stc
cmp
push
mov
mov
cmp
inc
rol
xor
dec
not
lea
mov
mov
inc
mov
inc
inc
cmp
jmp
retn
push
mov
call
xor
out
add
std
pop
mov
or
mov
sbb
scasb
sub
cmpsd
les
jbe
leave
stosb
pop
and
popa
pop
xor
enter
enter
rcl
xchg
inc
dec
lodsb
adc
aaa
clc
test
mov
jecxz
aaa
sahf
cmp
out
shr
ja
add
mov
clc
shr
mov
test
cmp
sub
cmc
cmp
jmp
ja
add
test
stc
test
jmp
push
bswap
btc
add
push
push
xor
sub
mov
mov
rcr
xadd
sub
jmp
jz
inc
jmp
sbb
cmp
cmp
neg
mov
pop
jmp
inc
jmp
push
mov
lea
rcr
push
push
mov
cmp
lea
and
shld
sub
xor
clc
sub
mov
bts
mov
btc
rcl
rol
lea
cmp
cmc
add
xor
jmp
test
jz
cmp
jmp
jbe
or
jmp
push
mov
mov
jmp
mov
jmp
retn
jz
pop
sub
and
pop
ror
sub
pop
test
jmp
mov
call
pop
jmp
retn
mov
mov
mov
pop
jmp
cmp
jmp
mov
pop
jmp
jz
cmp
jmp
inc
clc
mov
rol
rcl
sbb
add
xor
mov
cmp
sub
jmp
pop
push
xor
jmp
mov
add
jmp
