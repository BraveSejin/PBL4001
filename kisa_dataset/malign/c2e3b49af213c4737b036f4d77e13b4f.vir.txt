cmp
cmp
push
mov
sub
bt
cmp
call
imul
shl
setbe
lea
rcr
stc
rol
mov
push
shl
xor
xchg
adc
sar
rcr
shl
mov
clc
mov
test
cmp
jmp
pushf
call
pushf
lea
ja
pusha
pusha
imul
mov
add
push
lea
jmp
not
cmp
mov
cmp
bt
stc
add
mov
call
bt
clc
shl
jmp
pushf
lea
jb
push
movzx
bt
shld
sbb
test
shr
call
mov
jmp
mov
pusha
not
jmp
jmp
lea
call
jmp
and
jp
mov
or
adc
add
lahf
jle
ror
xchg
int
inc
adc
sub
fisubr
mov
cmp
not
out
mov
fidivr
bound
mov
add
rol
arpl
loopne
das
loopne
out
inc
popf
jge
mov
aaa
sub
adc
ficom
xchg
jnp
in
imul
aas
loope
out
imul
add
sub
retf
xor
insb
jbe
call
cdq
pop
mov
jnz
cmpsd
enter
nop
inc
loope
inc
sub
cwde
clc
stosd
xchg
inc
inc
sahf
mov
pusha
aas
push
retf
and
sub
movzx
push
lea
pushf
mov
call
push
dec
inc
inc
push
xor
insb
insb
not
adc
mov
push
setle
bts
add
pusha
call
sub
jnz
inc
out
xor
jecxz
mov
out
cli
loop
inc
mov
loopne
sar
jnp
mov
push
and
out
pop
stc
and
std
dec
push
sub
test
jle
adc
mul
in
fnstenv
dec
jns
rep
pop
dec
mov
push
inc
cld
inc
popf
pop
rcl
jle
push
adc
sub
add
imul
jnb
mov
call
adc
call
pusha
push
lea
jnz
add
test
mov
bt
add
pushf
clc
pushf
stc
movzx
pushf
not
bsf
inc
mov
mov
test
clc
add
pusha
mov
pushf
lea
jmp
pushf
call
pushf
pushf
lea
jnb
lea
not
lea
pusha
lea
call
jmp
lea
jnz
push
pushf
jmp
adc
aaa
pushf
lea
call
push
mov
pushf
push
mov
lea
jmp
call
pushf
mov
jmp
test
jmp
push
pushf
lea
push
lea
call
push
pusha
lea
jb
aas
aas
setnl
cmp
cmp
pushf
pushf
pusha
pushf
sbb
lea
jns
pusha
not
lea
bswap
mov
pusha
jmp
movsb
pop
mov
mov
push
lea
jmp
inc
call
lea
jnb
dec
pop
and
aas
rol
or
pop
shl
sar
bsf
pushf
mov
inc
shld
cmp
call
lea
jmp
jmp
push
pop
pusha
push
retn
pushf
mov
mov
pushf
lea
jmp
pusha
not
pushf
lea
jmp
sub
add
js
pusha
shl
bt
jmp
pushf
stosb
pushf
pushf
lea
jmp
