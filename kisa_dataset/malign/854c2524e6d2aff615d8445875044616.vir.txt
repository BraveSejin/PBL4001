mov
push
mov
lea
cmp
jnb
mov
movzx
imul
sub
mov
push
push
shr
mov
rep
mov
and
rep
pop
pop
mov
pop
retn
dec
mov
mov
not
js
xor
mov
shr
jnb
xor
loop
inc
dec
jns
not
retn
cmp
jnz
xor
mov
jcxz
xor
mov
shr
jnb
xor
loop
inc
jmp
mov
mov
mov
mov
retn
ror
mov
push
mov
mov
add
inc
mov
mov
movzx
pop
retn
mov
and
cmp
jnz
cmp
jz
sub
jmp
retn
push
mov
mov
cmp
sub
loop
mov
pop
retn
push
mov
cmp
jb
mov
jmp
xor
lea
mov
cmp
jb
sub
inc
cmp
jl
add
pop
retn
movzx
xor
add
jz
test
jnz
add
dec
shr
jnz
retn
push
mov
cmp
jb
mov
jmp
xor
lea
mov
cmp
jb
sub
inc
cmp
jl
add
pop
retn
movzx
xor
add
jz
test
jnz
add
dec
shr
jnz
retn
push
mov
cmp
jb
mov
jmp
xor
lea
mov
cmp
jb
sub
inc
cmp
jl
add
pop
retn
movzx
xor
add
jz
test
jnz
add
dec
shr
jnz
retn
push
mov
lea
lea
mov
add
dec
mov
sub
sub
test
jge
pop
retn
push
mov
lea
lea
mov
add
dec
mov
sub
sub
test
jge
pop
retn
push
mov
lea
lea
mov
add
dec
mov
sub
sub
test
jge
pop
retn
mov
cmp
ja
mov
add
cmp
ja
mov
retn
xor
retn
mov
cmp
ja
mov
add
cmp
ja
xor
inc
retn
xor
retn
mov
cmp
ja
mov
add
cmp
ja
xor
inc
retn
xor
retn
push
mov
sub
push
push
push
mov
mov
add
cmp
jnz
mov
lea
lea
push
push
push
call
add
test
jz
mov
add
mov
test
jz
cmp
jnb
mov
mov
and
add
add
cmp
mov
lea
jbe
mov
mov
push
mov
add
push
push
call
add
test
jz
mov
mov
mov
lea
cmp
jnb
push
add
push
push
call
add
test
jz
mov
movzx
mov
lea
push
mov
add
push
push
call
add
test
jz
mov
mov
push
add
push
push
call
add
cmp
jz
inc
mov
add
add
cmp
jb
xor
pop
pop
pop
leave
retn
cmp
mov
movzx
jz
inc
push
push
call
jmp
mov
mov
add
jmp
push
mov
sub
push
push
xor
push
mov
push
push
push
call
add
test
jz
mov
jmp
push
push
push
push
call
add
cmp
jnz
xor
jmp
push
pop
push
mov
pop
mov
lea
push
lea
push
push
push
mov
mov
call
neg
sbb
not
and
pop
pop
leave
retn
push
mov
or
and
push
xor
inc
lea
mov
rep
mov
call
pop
mov
pop
retn
movzx
add
jmp
dec
shr
inc
test
ja
mov
inc
cmp
jb
lea
mov
push
mov
inc
shr
mov
add
dec
jnz
call
pop
retn
push
mov
or
and
push
xor
inc
lea
mov
rep
mov
call
pop
mov
pop
retn
movzx
add
jmp
dec
shr
inc
test
ja
mov
inc
cmp
jb
lea
mov
push
mov
inc
shr
mov
add
dec
jnz
call
pop
retn
push
mov
or
and
push
xor
inc
lea
mov
rep
mov
call
pop
mov
pop
retn
movzx
add
jmp
dec
shr
inc
test
ja
mov
inc
cmp
jb
lea
mov
push
mov
inc
shr
mov
add
dec
jnz
call
pop
retn
push
mov
call
and
mov
pop
retn
push
mov
push
push
mov
mov
push
test
jnz
mov
ror
mov
mov
mov
add
mov
movzx
inc
mov
mov
ror
mov
mov
mov
add
mov
inc
mov
mov
shl
movzx
add
mov
ror
mov
mov
mov
add
mov
inc
mov
mov
movzx
shl
add
mov
mov
ror
mov
mov
add
mov
inc
mov
mov
movzx
shl
add
or
mov
jmp
mov
add
xor
mov
mov
test
jnz
ror
mov
mov
mov
add
mov
inc
mov
mov
shl
shl
shl
movzx
add
mov
mov
mov
add
xor
test
jz
mov
jmp
movzx
mov
sub
shl
mov
ror
mov
mov
mov
add
inc
mov
mov
mov
movzx
shl
add
shl
mov
cmp
jb
mov
mov
xor
inc
div
mov
xor
mov
mov
mov
sub
div
push
call
movzx
mov
cmp
jnb
push
mov
call
imul
add
mov
movzx
mov
imul
push
mov
mov
call
mov
pop
pop
pop
pop
retn
push
mov
call
and
mov
pop
retn
push
mov
push
push
mov
mov
push
test
jnz
mov
ror
mov
mov
mov
add
mov
movzx
inc
mov
mov
ror
mov
mov
mov
add
mov
inc
mov
mov
shl
movzx
add
mov
ror
mov
mov
mov
add
mov
inc
mov
mov
movzx
shl
add
mov
mov
ror
mov
mov
add
mov
inc
mov
mov
movzx
shl
add
or
mov
jmp
mov
add
xor
mov
mov
test
jnz
ror
mov
mov
mov
add
mov
inc
mov
mov
shl
shl
shl
movzx
add
mov
mov
mov
add
xor
test
jz
mov
jmp
movzx
mov
sub
shl
mov
ror
mov
mov
mov
add
inc
mov
mov
mov
movzx
shl
add
shl
mov
cmp
jb
mov
mov
xor
inc
div
mov
xor
mov
mov
mov
sub
div
push
call
movzx
mov
cmp
jnb
push
mov
call
imul
add
mov
movzx
mov
imul
push
mov
mov
call
mov
pop
pop
pop
pop
retn
push
mov
call
and
mov
pop
retn
push
mov
push
push
mov
mov
push
test
jnz
mov
ror
mov
mov
mov
add
mov
movzx
inc
mov
mov
ror
mov
mov
mov
add
mov
inc
mov
mov
shl
movzx
add
mov
ror
mov
mov
mov
add
mov
inc
mov
mov
movzx
shl
add
mov
mov
ror
mov
mov
add
mov
inc
mov
mov
movzx
shl
add
or
mov
jmp
mov
add
xor
mov
mov
test
jnz
ror
mov
mov
mov
add
mov
inc
mov
mov
shl
shl
shl
movzx
add
mov
mov
mov
add
xor
test
jz
mov
jmp
movzx
mov
sub
shl
mov
ror
mov
mov
mov
add
inc
mov
mov
mov
movzx
shl
add
shl
mov
cmp
jb
mov
mov
xor
inc
div
mov
xor
mov
mov
mov
sub
div
push
call
movzx
mov
cmp
jnb
push
mov
call
imul
add
mov
movzx
mov
imul
push
mov
mov
call
mov
pop
pop
pop
pop
retn
push
mov
sub
lea
sub
push
call
pop
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movzx
add
mov
push
call
pop
push
call
pop
mov
and
push
push
push
push
call
add
mov
push
push
push
push
call
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
add
mov
call
imul
mov
and
lea
sub
mov
mov
mov
mov
mov
add
mov
mov
call
pop
sub
sub
mov
mov
add
mov
sub
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jnb
mov
cmp
jnb
mov
mov
mov
mov
mov
inc
mov
mov
inc
mov
jmp
mov
cmp
jnz
jmp
mov
mov
add
mov
jmp
mov
call
jmp
jmp
cmp
jz
jmp
add
retn
mov
add
mov
push
push
push
push
call
add
mov
push
lea
call
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
cmp
jnz
jmp
mov
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
lea
push
push
push
push
call
lea
call
lea
call
and
lea
push
lea
call
movzx
mov
cmp
jl
jmp
cmp
jge
mov
add
mov
mov
mov
inc
mov
jmp
lea
push
lea
call
movzx
inc
inc
mov
mov
dec
mov
sub
sub
mov
mov
add
mov
add
mov
mov
mov
inc
mov
mov
inc
mov
mov
dec
mov
cmp
jg
jmp
mov
cmp
jnb
mov
add
mov
mov
inc
mov
jmp
mov
sub
mov
jnz
xor
inc
jz
lea
call
lea
push
lea
call
movzx
mov
mov
and
jz
jmp
mov
mov
lea
push
lea
call
movzx
mov
mov
and
jz
jmp
mov
mov
lea
push
lea
call
movzx
mov
mov
and
jz
jmp
mov
mov
lea
push
lea
call
movzx
mov
mov
and
jz
jmp
mov
mov
mov
add
mov
add
mov
add
mov
jmp
lea
push
push
push
push
call
jmp
mov
movzx
and
jz
mov
mov
mov
lea
push
push
push
push
call
mov
mov
mov
lea
push
push
push
push
call
push
push
push
push
call
add
mov
and
push
push
lea
push
call
add
push
lea
push
push
call
mov
lea
cmp
ja
mov
add
lea
cmp
ja
mov
or
or
cmp
jnz
mov
mov
mov
add
mov
mov
add
cmp
jnb
mov
mov
sub
cmp
jnz
mov
add
mov
mov
mov
inc
mov
jmp
mov
add
cmp
ja
jmp
mov
add
mov
jmp
push
push
push
push
call
add
mov
lea
sub
mov
mov
mov
add
mov
mov
mov
mov
mov
leave
retn
call
push
push
push
push
call
retn
dec
add
push
add
inc
add
add
add
add
add
add
icebp
mov
nop
cmp
aad
test
bswap
inc
cmpsd
scasb
and
xchg
adc
push
movsd
add
sbb
mov
inc
inc
adc
scasd
pop
mov
dec
sub
sal
mov
sti
stc
inc
std
retn
cwde
inc
mov
mov
xlat
pop
pop
js
jnp
aam
shr
push
dec
xor
movsb
dec
jb
jmp
popa
pop
jmp
aas
mov
scasd
xchg
fxch
push
adc
rcl
cwde
lahf
loope
xchg
iret
sbb
pushf
div
in
inc
out
push
add
adc
retn
dec
icebp
inc
cmp
test
fnop
add
sbb
out
add
stc
adc
in
jnp
insb
mov
sahf
sub
out
push
jg
out
sub
movsd
pop
xchg
xchg
fiadd
sal
retf
adc
xor
out
dec
jo
xor
adc
wait
jg
out
jnp
mov
inc
jecxz
loopne
xor
add
pop
pushf
lock
cmp
cmpsd
in
js
into
jmp
sbb
mov
mov
mov
inc
pop
mov
in
mov
in
fldln2
int
test
aaa
enter
lahf
xchg
pushf
and
inc
hlt
push
scasb
adc
add
or
mov
jp
jecxz
adc
sub
or
stosd
or
dec
mov
jmp
dec
xor
mov
fdivr
or
scasb
in
pop
inc
and
pop
test
or
scasd
aaa
sub
fsubr
mov
lea
cli
mov
leave
test
push
xor
inc
push
stosd
mov
sahf
mov
cmp
nop
pop
imul
test
or
xor
xchg
repe
xchg
pop
adc
jmp
lodsb
jnz
or
jge
rol
pop
jle
lodsb
push
jnp
mov
fsubp
rep
jg
and
cmp
push
mov
sub
cld
push
pop
out
inc
sbb
push
mov
adc
mov
arpl
xor
xor
sti
cli
add
lea
adc
cld
mov
ror
and
loope
fmul
ror
sbb
jl
retn
int
mov
mov
cmp
shr
inc
retf
jg
or
aam
push
jecxz
enter
loopne
and
adc
retn
outsb
jb
xchg
or
fadd
xchg
pop
mov
xchg
xor
push
fiadd
stosb
wait
push
cdq
fucomi
xor
cmpsd
mov
adc
leave
outsd
test
retf
jbe
fisub
int
dec
add
stc
jp
sbb
pop
adc
dec
clc
repne
loopne
and
jg
out
pop
add
mov
icebp
aam
adc
outsd
mov
adc
sub
xlat
lahf
sti
cmc
dec
cmpsb
xor
movsd
inc
int
xlat
aas
pop
dec
mov
aas
mov
xor
inc
test
mov
jnz
jo
mov
xchg
mov
mov
xchg
xor
adc
rep
enter
das
adc
xchg
shl
mov
pop
dec
xlat
jns
out
in
daa
mov
loopne
mov
jz
ror
xchg
sub
imul
sbb
arpl
loopne
in
mov
pop
nop
mov
sbb
jnp
cmpsd
push
js
xor
in
mov
aad
inc
inc
retf
pop
lodsb
cmp
xor
not
inc
shl
xor
pop
in
mov
cdq
and
fldenv
and
or
repne
pop
xor
retf
push
sbb
push
rcr
push
push
and
pop
add
mov
icebp
push
js
mov
sub
cmp
sub
jp
xor
cmp
out
mov
fild
mov
out
pop
sub
sub
push
imul
mov
push
mov
push
sub
mov
inc
mov
test
pusha
lock
sbb
mov
mov
movsb
jnz
xchg
lodsd
jmp
mov
pop
test
cmp
push
aaa
in
insb
pop
xchg
push
test
outsd
das
jmp
stosb
nop
sbb
cmp
sub
popf
mov
dec
cdq
enter
movsd
or
mov
adc
sahf
push
sub
mov
inc
pusha
xor
adc
pop
loope
mov
add
dec
jnz
dec
xor
jg
pop
mov
mul
push
jnz
adc
cmp
mov
jp
inc
jo
push
out
insd
and
dec
rcr
mov
retn
xor
loope
cmpsd
mov
loop
sub
sbb
push
jmp
push
sbb
out
add
jg
retn
call
inc
insd
pop
mov
inc
adc
into
cmc
call
xor
fsubr
loopne
push
mov
lahf
lea
sar
leave
call
js
fnstsw
push
add
cmp
pop
retn
aaa
mov
or
pop
js
and
mov
or
or
inc
xchg
shl
out
dec
sbb
push
hlt
test
pop
push
sub
pop
push
in
scasb
fincstp
dec
mov
and
cld
mov
jnp
push
mov
and
jb
jns
fisttp
pushf
out
in
cmpsd
or
xchg
hlt
mov
mov
nop
js
test
in
mov
or
lds
aaa
and
cmpsd
cwde
dec
push
leave
add
sbb
fdivr
pusha
adc
int
add
cmc
adc
cwde
inc
repne
sub
out
test
push
setalc
jb
jp
add
rol
daa
mov
cmp
sub
cmp
pushf
xchg
and
dec
xor
call
sahf
cmp
mov
inc
jb
popa
xor
dec
in
test
hlt
dec
icebp
mov
pop
cdq
jmp
movsd
jbe
and
rep
mov
inc
adc
push
jmp
sbb
sub
sahf
push
jg
mov
setalc
and
add
jle
mov
jno
mov
fmul
jnz
sub
mov
sub
fiadd
setnp
cmc
movsb
add
leave
movsb
out
ja
add
retn
popa
div
sbb
wait
jb
pop
int
loope
push
test
sub
add
sahf
imul
sub
or
sbb
pushf
push
sti
aaa
in
pop
les
add
xchg
imul
sbb
dec
add
hlt
inc
inc
mov
movsd
std
std
dec
out
mov
add
push
mov
sbb
jnz
call
rol
insb
paddusw
sbb
hlt
push
mov
loopne
xchg
sub
out
dec
lodsd
jns
adc
mov
jge
dec
xlat
aaa
sbb
retn
rep
sbb
outsd
sbb
sti
push
push
cmp
mov
push
leave
or
xchg
or
push
pushf
in
inc
jns
push
jns
aad
mov
sbb
mov
adc
or
js
insb
bt
and
xlat
sbb
and
into
and
shl
jno
adc
mov
sti
insb
lds
hlt
movsd
pop
jmp
jge
movsb
push
push
in
shl
and
xchg
dec
jns
mov
mov
inc
cwde
sti
or
mov
xchg
mov
shl
in
pusha
dec
fstp
cmp
lds
xchg
cld
add
mov
enter
dec
jno
cwde
rcl
retn
aaa
in
mov
mov
out
xchg
shr
rep
test
loop
test
add
jmp
xchg
xor
popa
jmp
sbb
and
out
jmp
setalc
enter
movsb
in
lahf
inc
sbb
dec
sbb
jmp
hlt
enter
cmp
sub
push
jz
dec
sti
sal
retn
adc
sbb
das
retf
mov
mov
lodsd
rcl
loopne
arpl
rcl
sub
cmp
cld
cmp
sbb
xchg
in
repne
das
jmp
sbb
mov
sbb
add
nop
or
push
adc
imul
mov
mov
add
retf
mov
cmpsd
popa
jge
sub
ficom
add
mov
push
jge
dec
mov
push
inc
dec
pop
out
shr
pop
push
xor
dec
pop
dec
pop
pop
dec
jecxz
dec
sub
add
mov
sub
jmp
rep
test
sahf
and
leave
xlat
in
or
retf
xchg
jz
insd
sbb
jle
adc
sar
mov
xor
dec
popa
add
std
lds
xor
fdiv
call
retf
mov
add
dec
pop
pop
dec
test
emms
xor
adc
lodsb
jmp
and
dec
xor
or
and
call
into
nop
iret
out
movsb
mov
xchg
xor
mov
fdiv
jecxz
pop
and
aad
and
adc
jle
inc
int
ror
dec
and
push
in
mov
push
daa
scasd
call
pop
mov
popa
cmp
insd
mov
sar
les
sub
inc
int
xor
xchg
or
mov
wait
xor
retn
jl
repne
dec
lodsb
jb
aam
dec
xlat
and
and
add
fdiv
add
arpl
loop
mov
push
sbb
xchg
pop
into
jle
adc
call
xchg
xlat
adc
js
lea
and
clc
bound
outsd
retn
push
ror
inc
movsd
rol
push
mov
mov
or
inc
push
jnb
pop
jz
push
out
push
imul
mov
mov
sbb
psadbw
xchg
sub
xor
stc
pop
sub
jb
pushf
mov
fdivr
shl
add
daa
cmp
and
xlat
out
cld
and
or
sal
xchg
imul
aaa
retf
lea
scas
xchg
lodsd
sahf
sbb
jle
sbb
aaa
mov
test
aaa
push
cmpsb
popa
pushf
and
push
stosd
jmp
adc
arpl
mov
loope
mov
setalc
imul
repne
sar
daa
pop
pop
sub
scasd
push
sbb
mov
or
mov
hnt
or
test
add
jbe
int
imul
jge
jecxz
mov
loop
adc
or
jnb
sub
fisub
std
add
dec
hlt
aas
pop
xor
pop
rcl
xchg
dec
fsubr
add
jns
sar
std
dec
and
fcomp
sbb
sal
cld
push
wait
test
xchg
jmp
sub
pushf
adc
cmp
push
xchg
insd
mov
hlt
sbb
mov
mov
mov
div
pop
out
insd
xlat
pusha
mov
sti
and
pop
mov
cmp
cli
dec
jns
push
hlt
push
lahf
add
lodsb
cld
or
push
xchg
fstp
jns
xor
in
or
adc
sti
stc
cwde
xchg
sub
loope
loopne
fsub
or
or
jle
sar
push
test
mov
scasd
icebp
mov
imul
lahf
xchg
shl
js
retf
dec
mov
sbb
test
movsd
movsd
mov
sbb
adc
imul
test
xchg
pop
inc
and
pop
pop
fbstp
sub
les
push
mov
iret
xchg
mov
inc
push
mov
cmpsd
xchg
dec
cmp
scasd
push
jns
sbb
sbb
mov
mov
cmp
jnz
xchg
fiadd
enter
adc
and
leave
add
movsd
xlat
xchg
dec
into
call
or
aas
push
rcr
cwde
adc
cwde
cmc
jnb
setalc
inc
or
loope
dec
xor
test
bound
loop
aaa
push
sbb
cli
imul
xor
adc
ror
sar
lahf
ficomp
inc
into
lea
rcr
sahf
retf
outsb
insb
ror
xchg
mov
inc
pop
div
inc
adc
jno
jg
test
cmpsb
cld
push
nop
pop
mov
dec
cmpsd
scasd
and
movsb
dec
and
cwde
pop
int
ja
xchg
fild
retf
jnp
xchg
not
fist
cwde
retf
test
sbb
into
inc
test
xchg
wait
xor
pop
cmp
test
mov
fsub
out
int
out
and
pop
push
retn
dec
shl
rcl
nop
dec
or
cmp
pcmpgtw
dec
sub
cmp
pop
scasd
and
adc
inc
sub
aas
pop
retn
pop
retf
pop
sub
adc
mov
or
lock
fisubr
inc
jmp
lea
nop
call
shr
xchg
pop
in
mov
pop
pop
test
adc
sbb
cmpsd
nop
push
aam
mov
ja
sal
and
xchg
int
lock
daa
loopne
push
jo
hlt
pop
ficomp
les
aad
sbb
jb
mov
in
and
test
push
mov
stosb
call
adc
int
ja
add
jnz
mov
cmp
xor
inc
pop
jl
jecxz
retf
sti
xchg
add
jg
push
jp
jb
mov
test
sub
loop
retf
sbb
xor
adc
aad
and
fsub
xchg
xchg
mov
inc
daa
in
out
fnstsw
jnb
js
inc
jle
dec
pop
movsb
add
imul
mov
bound
iret
ht
insb
sar
out
sbb
out
jmp
sub
inc
and
sub
outsb
jge
sar
pop
push
inc
xchg
jp
sbb
bound
out
dec
jmp
pusha
inc
les
call
lodsd
push
imul
xor
loopne
inc
jb
insb
movsw
add
sbb
jmp
and
jl
mov
pushf
call
jl
imul
cdq
and
clc
xchg
dec
aad
push
mov
mov
dec
push
cli
lodsd
pop
sal
icebp
jge
cmp
retf
test
push
xor
lahf
sbb
pop
sti
call
fcmovnbe
push
retf
jo
in
aad
add
fist
rep
add
mov
jz
retn
retn
mov
dec
or
aas
ror
xchg
xor
cmp
stosd
sbb
das
mov
sbb
mov
and
pop
lodsb
les
jge
jge
sub
sbb
or
cmp
jno
cmp
sub
outsd
cmp
push
mov
leave
out
xchg
and
inc
or
dec
xchg
push
pop
push
leave
cmp
out
wait
add
stosb
dec
pusha
jecxz
cld
jnb
rcr
and
inc
rol
insd
sal
pop
mov
fxch7
or
jge
pop
inc
add
inc
popa
mov
jnb
push
fldcw
inc
mov
dec
repne
adc
or
add
loopne
add
or
movsd
cmp
mov
sbb
jp
test
sahf
dec
bound
add
jp
call
sub
or
scasd
movsb
mov
pop
mov
sar
dec
push
and
arpl
or
mov
push
out
lock
cmp
cmp
pop
sub
sal
adc
ja
mov
mov
push
inc
jg
push
insd
test
rep
mov
and
xchg
pop
inc
inc
pop
adc
cmp
pop
rol
inc
jg
pop
xchg
and
cmp
lodsb
xchg
sub
inc
jecxz
icebp
add
xchg
inc
sbb
lea
cmp
out
add
jmp
popa
lea
in
jb
icebp
rcr
adc
dec
push
popa
imul
bound
cmp
clc
lds
inc
sbb
sbb
sub
xchg
xchg
and
dec
test
cmp
sbb
mov
and
test
xor
mov
sub
js
push
or
jno
push
xchg
ffreep
pop
inc
ucomiss
push
cwde
scasd
push
sbb
xchg
cmp
jnb
jnb
stosb
fisub
dec
mov
xor
sal
dec
fild
mov
jbe
add
xchg
adc
das
call
pop
lahf
xchg
fstp1
xchg
mov
jnp
in
xor
int
pop
lea
jnp
mov
mov
nop
push
call
enter
mov
enter
insd
rep
and
inc
and
aad
xor
xor
sbb
dec
imul
xchg
adc
dec
imul
out
fist
push
les
test
cmpsd
push
cmpsb
pop
sbb
fcmovbe
retf
and
inc
das
nop
xchg
in
scasb
test
mov
inc
push
scasb
add
int
hlt
adc
mov
out
mov
jz
rcr
mov
xor
fiadd
fsub
sbb
in
fsubr
pop
rcl
jo
retf
cmp
add
jz
or
jge
xor
pop
pop
stc
loop
jp
and
das
xchg
mov
lea
int
mov
pop
stosd
scasd
fild
scasb
sub
xchg
or
inc
out
mov
imul
adc
call
push
push
push
xchg
rol
mov
xor
sbb
adc
in
test
and
sbb
outsd
inc
sbb
mov
call
hlt
lahf
sub
retf
inc
insb
cwde
or
dec
rol
mov
pop
scasd
fistp
scasb
mov
jo
dec
cmp
stc
inc
mov
lodsd
pop
xchg
mov
add
retn
or
pop
pop
mov
out
mov
jmp
dec
dec
int
and
loop
jp
call
sub
cmp
jbe
mov
cmp
daa
xor
jecxz
fadd
test
cmp
fcmovne
sub
jns
mov
jmp
imul
inc
xor
pop
pop
push
pop
mov
mov
mov
int
or
dec
sbb
in
mov
mov
out
adc
dec
push
mov
xchg
imul
fstp
iret
xchg
cmp
inc
jb
int
inc
pop
sub
pop
dec
sbb
adc
nop
fcomip
add
mov
jo
mov
pop
adc
mov
push
dec
xchg
stosd
and
jg
or
aad
movsd
iret
cmpsd
imul
lahf
leave
add
jmp
sub
pop
clc
inc
and
fisubr
icebp
sub
rep
stosd
loope
push
xor
sbb
or
int
aas
pop
js
std
jmp
and
fadd
xchg
push
pop
test
retn
mov
mov
movsd
cmp
adc
mov
dec
inc
mov
inc
xchg
movsb
adc
arpl
rep
dec
call
cmpsb
mov
cmovbe
mov
and
jnb
cdq
xor
test
jo
mov
mov
mov
add
stosd
fnstsw
fstp8
loope
jno
js
aam
jbe
jecxz
jmp
xchg
xor
dec
lock
lahf
adc
xor
sbb
mov
jnz
loop
aad
sub
loop
pop
mov
mov
fbstp
mov
push
cmpsd
in
or
jge
sub
aad
sub
test
cmc
jle
pusha
fidivr
bound
pop
sti
jnp
adc
hlt
repne
aaa
dec
inc
sbb
or
mov
mov
jge
push
xchg
mov
insb
mov
daa
jns
mov
mov
or
loopne
aad
mov
cmp
cmp
adc
clc
arpl
loop
out
rep
dec
sal
ja
in
and
push
jnz
dec
inc
add
cmc
or
loopne
cmpsb
clc
ror
xchg
and
xor
jecxz
jp
push
sbb
and
pop
rcr
setalc
in
neg
xchg
fist
lodsb
stosb
push
pop
mov
adc
rep
sub
jz
into
call
sbb
jp
xchg
shr
push
in
dec
mov
xchg
cmps
push
wait
xchg
inc
jz
jns
mov
inc
xor
sbb
mov
push
jb
movsd
in
stosb
pop
into
dec
scasb
mov
fcmovnb
push
clc
loopne
pop
aas
sub
call
int
sahf
inc
in
or
in
popa
pop
mov
mov
dec
push
and
jecxz
push
enter
mov
rol
lodsd
pop
rcr
mov
and
ja
xor
mov
insb
xor
push
iret
enter
fst
aam
jle
dec
sub
pop
cmp
sub
cmp
sbb
xchg
mov
in
xor
fild
fidivr
fild
sal
mov
adc
dec
mov
test
mov
jmp
mov
mov
out
cmp
push
fld
aam
add
adc
push
test
shr
mov
dec
movsb
iret
sub
in
lahf
mov
mov
lock
enter
lock
fucomi
daa
loopne
icebp
xchg
xor
dec
int
xor
jle
xchg
cmp
out
movsb
jb
mov
mov
pushf
inc
jg
push
aaa
setalc
sub
adc
adc
sub
cli
xor
sbb
jz
push
jns
cmps
stosd
sbb
xor
sbb
lds
sub
test
adc
mov
mov
jmp
in
pop
into
mov
cmp
or
xor
jecxz
cdq
lodsd
pusha
cmp
push
and
fiadd
stosd
xchg
adc
nop
pop
inc
pop
fld
push
test
jp
sal
popf
loope
jmp
pop
outs
ffreep
rcr
lodsd
insb
ja
jbe
xor
or
adc
xor
fcmovne
xchg
hlt
test
pop
or
clc
sub
mov
sbb
sahf
pop
jbe
retf
fiadd
mov
retf
repne
cmpsb
or
retn
leave
mov
inc
push
pop
xchg
sub
xchg
add
dec
setns
add
lodsd
imul
mov
inc
inc
pop
mov
inc
mov
inc
push
pop
stosb
aas
push
cdq
or
fdiv
and
js
mov
xor
mov
or
insb
hlt
jle
lodsb
insd
imul
inc
or
and
pusha
retf
adc
xchg
dec
mov
popa
xchg
cmp
jbe
sahf
sbb
retf
icebp
add
mov
xchg
ror
xor
mov
fstp
iret
ror
ja
sal
dec
std
fist
push
cli
push
pop
dec
cmp
scasd
bnd
rep
aam
or
inc
dec
movsb
in
dec
enter
pop
imul
sti
dec
aam
lodsd
rcr
das
mov
stc
enter
xor
pushf
xchg
push
mov
xchg
ja
sbb
jz
cwde
pop
sub
unpcklps
xchg
scasd
cmp
pop
and
lodsd
mov
or
in
pop
int
sbb
imul
psllq
js
add
push
scasb
aaa
and
setalc
lodsd
mov
fistp
stosd
enter
hlt
das
xor
push
inc
dec
not
mov
in
shl
push
push
scasb
mov
shufps
mov
retn
icebp
outsd
inc
arpl
sub
xlat
stc
adc
and
push
and
scasd
lodsd
mov
retf
cmp
xor
xchg
pop
mov
and
inc
pop
jl
xor
and
xor
push
leave
mov
or
dec
mov
rol
inc
push
in
or
lock
push
mov
in
mov
push
push
bound
and
imul
fsubr
pop
jmp
sub
wait
js
mov
stosd
out
mov
pop
cmpsb
xor
setalc
inc
stosb
mov
xchg
aas
rol
or
sbb
lock
sub
adc
sar
add
mov
loop
sub
in
das
cmp
inc
mov
jns
sal
mov
les
in
mov
xor
or
imul
dec
mov
dec
sbb
retf
sub
adc
inc
or
sbb
mov
push
scasb
lds
xor
mov
aaa
and
fcomp
cwde
cmp
mov
pop
mov
inc
test
and
mov
cmpsb
sub
or
scasd
call
stosb
mov
sub
and
or
fcomi
adc
inc
add
push
or
sbb
jo
push
aam
into
cmp
arpl
adc
stosd
mov
xchg
mov
pushf
sal
cmp
clc
add
insd
setalc
cmp
imul
test
jmp
push
mul
add
repne
inc
test
dec
test
and
movsd
sbb
and
setalc
fisubr
dec
sbb
push
rol
insd
or
push
mov
test
sbb
mov
scasd
sub
pop
sar
xor
push
cmpsd
mov
dec
xor
lea
xor
jo
xor
mov
ja
xchg
xor
push
call
test
cmp
sbb
sti
fistp
dec
mov
sbb
sub
dec
push
idiv
popf
mov
mov
mov
or
push
into
inc
aam
mov
std
shl
lodsb
loopne
mov
adc
in
dec
sub
ht
mov
dec
js
lock
stosd
pop
adc
jno
add
movsb
js
pop
add
sub
ficomp
jns
cmp
mov
scasb
cmp
hlt
stosd
cmp
mov
push
push
fldpi
mov
cmp
add
loopne
xchg
jecxz
in
cdq
jz
and
adc
das
add
mov
setp
jecxz
and
push
shr
loope
pop
pushf
das
setalc
outsd
ja
mov
icebp
jmp
push
xchg
xor
or
dec
dec
fstp9
cld
sub
inc
ror
mov
jecxz
sub
xchg
cmp
pop
clc
out
pop
setalc
rcl
jz
mov
sub
push
std
retf
mov
bswap
retf
leave
icebp
call
aam
push
xchg
pop
push
bound
out
mov
rep
test
push
pop
sbb
add
mov
test
in
push
sti
jno
out
sub
leave
in
loop
lahf
js
mov
mov
fistp
pop
retn
stosb
cmp
shr
mov
cmp
adc
sti
push
mov
mov
mov
xchg
cmpsb
push
out
dec
lds
scasd
push
inc
mov
loopne
retn
call
leave
sbb
sub
mov
dec
aaa
or
sub
sub
push
adc
sub
cmpsb
inc
cmpsd
push
in
call
pusha
xor
lock
jle
sti
push
test
add
mov
arpl
in
push
cld
outsb
pop
std
loop
mov
jbe
cmc
sar
cmp
jnz
xchg
aad
sbb
das
push
in
pop
jno
mov
adc
outsd
lodsd
in
cli
loop
loope
inc
enter
mov
movsd
mov
cdq
loopne
add
in
or
push
in
or
jz
les
pop
xchg
push
jl
mov
xchg
pop
pusha
scasd
or
cmc
mov
jg
mov
pop
std
xor
dec
fiadd
enter
add
inc
jbe
fnstsw
mov
xchg
push
push
add
push
dec
xchg
adc
cdq
jl
pop
xchg
sub
jle
adc
mov
inc
inc
arpl
or
stosb
jnz
pusha
call
fdiv
clc
rcr
inc
inc
rcl
wait
sbb
lodsb
push
outsb
popa
mov
stosd
movsd
cmp
popa
adc
mov
jmp
rcl
jnp
daa
movq
mov
cmc
movsd
imul
mov
push
psllw
dec
mov
xor
movsb
dec
jmp
inc
dec
out
dec
imul
cmc
sbb
xchg
imul
push
sub
out
adc
iret
fimul
add
push
enter
aaa
jbe
out
fidiv
fistp
jnb
lodsb
push
jno
cmp
xlat
mov
and
xchg
retn
mov
sbb
fisttp
stosd
pop
dec
aaa
js
prefetcht1
lahf
jp
test
stc
iret
pop
movsb
ficom
fist
dec
retn
adc
cmpsd
jno
jno
retf
aaa
inc
push
xchg
mov
push
sbb
sub
xchg
adc
test
retn
rcr
and
retf
add
mov
xor
push
test
stc
outsb
fucomi
adc
in
icebp
aaa
dec
cmpsd
inc
jge
loop
lodsd
xlat
sub
popf
hlt
pop
dec
cmp
mov
movsb
xchg
sbb
jp
mov
mov
push
jno
mov
push
lock
test
fist
push
inc
arpl
mov
mov
push
imul
and
stosb
push
adc
add
movsd
pusha
xchg
lea
retn
lodsd
scasb
in
insb
mov
test
outsd
dec
fxch
mov
sub
mov
lock
cmp
in
retf
cmc
push
fstp9
mov
add
cmp
fxch4
jns
js
jb
iret
pushf
add
popf
cmpsd
jle
test
jecxz
clc
add
xchg
hlt
push
daa
adc
push
insd
sar
neg
mov
cmc
mov
movd
push
popf
test
arpl
xchg
mov
mov
inc
push
xchg
std
mov
in
jmp
mov
or
and
jp
dec
mov
and
shl
dec
mov
out
mov
retf
inc
fstp9
imul
dec
cmp
dec
and
pop
jge
push
stosd
mov
xchg
iret
ror
dec
loopne
jp
pop
jg
pop
int
adc
test
pop
cmp
sbb
push
mov
push
sub
outsb
aam
push
cmp
pop
cmpsd
xlat
retn
aam
mov
mov
lds
or
hlt
mov
xchg
add
xchg
cwde
mov
sbb
xchg
jp
mov
mov
in
add
cdq
pusha
loop
jmp
fistp
pop
adc
push
cmp
movsd
xor
mov
adc
mov
nop
push
or
mov
jb
mov
inc
shl
pop
cmpsb
mov
mov
int
or
sub
lea
fcom
cmpsb
pop
das
push
inc
mov
mov
arpl
lea
jb
aam
pop
retn
or
lahf
and
sti
jge
inc
fld
test
out
setalc
test
aad
and
inc
mov
in
call
adc
daa
ja
sti
rol
lodsd
inc
sbb
fnstsw
xor
lahf
and
push
mov
mov
fcomp
lodsb
inc
outsd
fild
or
mov
clc
pop
or
xchg
push
bnd
xchg
or
or
in
push
test
arpl
fbld
dec
fdivr
retn
jmp
aad
inc
inc
pop
aas
in
xor
iret
pop
push
push
hlt
cwde
pop
insd
lodsb
out
jmp
adc
outsd
in
inc
mov
dec
mov
rol
fild
pop
test
push
leave
mul
mov
test
or
pop
push
inc
out
out
imul
cmp
inc
push
pop
in
push
adc
pop
fnstsw
out
mov
push
punpckldq
lock
adc
and
movsd
push
push
inc
lahf
shr
jbe
sub
enter
pusha
jl
mov
imul
push
push
pop
sub
iret
add
movsb
jg
fidivr
test
push
retn
lahf
add
mov
and
push
dec
pslld
xor
pop
xor
leave
dec
lock
or
loope
adc
das
xchg
mov
dec
call
xchg
mov
shr
mov
or
movsb
sbb
cmp
mov
out
fcmovne
mov
shr
stosb
jns
mov
or
fisubr
retf
stosd
stosb
retn
adc
xchg
xchg
sbb
push
dec
pop
leave
mov
xchg
inc
xchg
fst
enter
outsb
mov
push
wait
mov
cwde
cmp
and
push
jnb
aas
mov
test
pop
pop
xor
ja
loope
pop
push
call
xor
retn
imul
sbb
mov
fcomp
cmp
xor
dec
push
and
call
jmp
dec
stosd
xchg
or
pop
stosb
inc
pop
fmul
jp
mov
add
mov
or
rep
mov
inc
sahf
inc
pop
test
push
xchg
adc
mov
jnz
sbb
and
adc
lea
call
dec
add
inc
nop
aam
mov
mov
les
leave
add
xor
rep
cdq
pushf
xor
fstp
stc
xor
add
mov
sub
jle
xchg
push
leave
push
mov
mov
pop
mov
sub
mov
sal
scasb
push
push
add
inc
clc
pop
sbb
dec
les
sbb
imul
cmp
fst
xchg
iret
cmp
stosd
out
into
jmp
stc
or
pop
pop
jg
jmp
mov
xor
and
fadd
mov
xor
adc
lock
sbb
pmulhuw
mov
cmp
or
dec
xor
insd
lahf
wait
xor
xor
push
dec
aas
cli
push
and
push
dec
loope
jg
jns
xchg
stos
push
or
mov
cmp
push
std
jp
xor
or
loopne
xchg
mov
mov
mov
sahf
mov
xor
cli
dec
dec
and
adc
scasb
lds
scasd
and
or
pop
lodsd
cmc
dec
imul
std
retn
adc
in
or
xchg
jl
and
sbb
sal
inc
out
sti
mov
mov
adc
into
push
arpl
sbb
leave
sub
add
dec
fisttp
fcmovne
sbb
loop
sub
dec
cmp
pop
fisubr
mov
and
pop
xor
setalc
push
push
inc
insb
retn
add
fld
retf
out
add
fild
or
and
and
add
cwde
pushf
jecxz
jmp
lodsb
shr
push
pop
int
adc
into
wait
mul
js
pop
dec
or
pop
cmp
push
sbb
insb
wait
sub
mov
push
xchg
retf
in
dec
push
inc
retn
cmp
sbb
inc
daa
jnb
xchg
inc
fild
push
int
cwde
cmp
sar
outsb
xchg
inc
sbb
jg
inc
cmpsb
mov
mov
and
rep
in
jmp
inc
daa
mov
mov
sub
test
retf
xchg
push
jp
push
jno
mov
mov
cmp
repne
dec
and
icebp
adc
pop
add
loopne
int
sbb
mov
lahf
cmp
outsd
nop
dec
jmp
xor
xchg
movsd
popa
dec
cli
pop
loopne
sahf
enter
jno
clc
stosd
or
or
cmp
cmp
test
cmp
loop
in
pop
iret
pop
mov
sbb
test
mov
add
xchg
mov
fdivr
xor
xchg
sub
jnz
and
add
push
scasb
movsd
stosd
cmc
jmp
push
fild
iret
popf
pop
retf
iret
jz
or
insb
arpl
jl
ror
fxch7
imul
and
inc
mov
xchg
sbb
pop
rcr
xchg
popf
xor
mov
push
push
xchg
jmp
cmp
loop
lahf
mov
sbb
fistp
out
dec
stc
icebp
mov
xor
push
jz
pop
repne
ja
cmc
mov
or
adc
jnb
fsubr
scasb
xor
pop
dec
insb
lodsb
pop
wait
pop
jo
add
jecxz
pop
jo
test
mov
jo
xchg
out
out
insd
cmp
jns
push
sbb
sub
repne
dec
fisub
mov
jg
pop
pop
loope
sub
xlat
jno
add
movsd
adc
in
arpl
mov
jo
jnp
and
shr
xor
nop
pop
repne
jp
inc
xor
into
wait
inc
pushf
js
pop
jp
into
or
mov
pop
pusha
mov
pop
out
mov
mov
movsd
jg
movsd
push
test
pop
push
repne
jl
fsubr
rcl
jmp
fistp
lodsb
retf
mov
and
rep
jmp
stosb
icebp
nop
aaa
mov
fldcw
ror
movsb
test
dec
mov
pop
stosb
pop
and
fcomip
int
xchg
xor
iret
add
jge
pop
loop
mov
pop
mov
ja
mov
pop
sbb
push
sbb
and
jbe
adc
xchg
mov
mov
xchg
aad
xchg
xchg
loop
cli
leave
lodsd
pop
cmp
retf
setalc
hlt
dec
imul
pop
scasd
in
or
push
scasb
hlt
cmpsd
xor
push
cdq
sbb
jecxz
adc
dec
jnz
retn
xor
daa
aad
insd
mov
mov
lodsd
sub
loop
nop
pop
or
dec
dec
jl
cdq
xchg
repne
push
retn
or
test
shl
sub
adc
lodsd
xchg
sbb
push
aam
fisttp
retn
pushf
inc
jge
mov
ja
sbb
pop
mov
or
pop
cmp
cmps
nop
pop
loop
scasd
sti
mov
mov
xor
mov
and
retf
push
mov
scasd
imul
dec
adc
popf
adc
retn
jmp
sal
enter
or
test
into
idiv
adc
xor
outsd
dec
scasd
loope
xor
jns
mov
fcom
sbb
and
dec
cmp
xchg
adc
icebp
jno
fild
jbe
adc
fisub
call
rcr
pop
retn
mov
fist
jno
xor
sbb
xor
dec
mov
xchg
cmc
pop
mov
aas
stosd
jge
mov
dec
retn
retn
xchg
aas
fld
div
mov
fstp
leave
stos
add
push
push
aaa
and
mov
add
add
push
adc
imul
add
retn
xor
xor
add
inc
xor
movsb
xchg
test
les
adc
jz
xor
in
push
adc
inc
adc
sbb
xchg
loope
cmpxchg
in
jmp
xchg
lodsd
cmpsd
mov
or
cmp
aas
popf
sub
rep
arpl
mov
add
xor
pop
retf
add
mov
add
push
mov
fdiv
mov
xchg
in
pop
jecxz
jmp
movsd
retf
movsb
adc
test
inc
stosd
mov
xor
test
mov
xor
cmp
scasd
fcmovbe
imul
pop
les
xlat
mov
cmp
outsd
xor
jnz
in
sub
icebp
rep
jge
scasb
sub
pop
mov
sbb
inc
pushf
retf
mov
test
out
xchg
out
cmp
idiv
sub
aam
fcom
rep
test
mov
add
ror
daa
sti
add
les
adc
and
ja
lodsd
cdq
pop
jbe
push
sar
rdpmc
add
jp
cmp
mov
pop
les
sbb
add
add
xor
sbb
into
insd
pop
or
fld
dec
dec
out
stosb
and
add
push
or
lodsb
and
arpl
out
repne
mov
pop
mov
fucomi
inc
in
push
and
out
mov
in
or
inc
sub
sbb
arpl
cmp
inc
or
mov
sbb
repne
les
outsb
mov
sar
sub
xor
inc
adc
jno
xchg
add
pusha
fsub
stosd
push
jz
outsb
sub
xchg
jnb
inc
fcmove
rep
mov
inc
sub
push
xor
loopne
inc
bound
mov
sub
repne
or
lodsb
cwde
push
cwde
in
lahf
add
int
push
cmc
pop
mov
in
mov
iret
mov
aas
xchg
dec
lodsb
dec
lodsb
fdiv
pop
xchg
dec
dec
pop
pop
xchg
push
sub
mov
jp
xchg
aad
jo
sbb
or
mov
call
jns
test
test
inc
xor
das
mov
call
call
bound
sub
fcom
add
std
in
sub
pop
sbb
xor
sub
mov
retn
sbb
retf
cmp
sbb
push
push
sbb
cmpsb
cmpsd
mov
adc
cmc
xchg
lahf
inc
out
outsd
xchg
add
inc
cwde
mov
cmpsb
sbb
adc
jnz
mov
push
sahf
fnstsw
iret
lodsb
or
mov
add
aad
and
pop
inc
jecxz
lodsd
popf
retf
push
lds
jnb
clc
fcmovne
push
clc
pop
sbb
in
btc
xor
inc
jecxz
adc
push
jnp
test
jg
add
and
push
setalc
hnt
xor
xlat
and
jno
mov
push
mov
jb
xchg
push
jmp
sub
cmp
neg
or
sub
and
std
setalc
xchg
mov
inc
xor
xchg
enter
mov
in
test
adc
retf
cmp
jb
imul
std
add
test
push
push
cmp
jns
test
dec
mov
leave
mov
add
pop
mov
mov
leave
xchg
and
retf
stc
cmc
push
retn
lodsd
sar
fbstp
in
mov
xor
outsd
mov
cmc
mov
or
retf
punpckldq
adc
add
in
fcom
fimul
xlat
xchg
adc
scasd
jge
dec
jb
jnp
shr
iret
pop
iret
cmp
sub
mov
rep
add
fst
jns
wait
jmp
idiv
sub
retn
outsd
mov
inc
mov
out
inc
pop
scasd
mov
ficom
push
and
aaa
cmp
in
in
loope
neg
fist
pop
sbb
mov
lds
rep
or
or
and
pop
sub
fdiv
rcr
cli
pop
push
lodsd
rcl
loop
int
push
insd
mov
jbe
mov
fisubr
jp
int
stc
add
stosb
daa
rep
icebp
lahf
popf
mov
into
dec
imul
dec
dec
mov
dec
xchg
sub
cli
xor
and
in
mov
and
frstor
div
out
mov
ficom
xlat
sar
fistp
enter
out
and
sbb
call
out
fimul
scasd
add
inc
inc
mov
jmp
sahf
jmp
mov
arpl
xchg
aam
push
shl
inc
lahf
movsd
dec
mov
inc
adc
push
pop
pop
iret
cmpsb
lodsd
jmp
dec
nop
aas
mov
mov
adc
fld
in
cmp
outsb
and
shr
xchg
ror
sub
xor
dec
out
ror
mov
stosb
jmp
cmp
cmc
sub
sbb
mov
cmpsb
push
fadd
mov
int
stosd
mov
xchg
sub
std
test
pop
add
pop
rol
add
sub
mov
cmp
test
daa
pop
inc
scasb
pop
retn
inc
xchg
inc
in
cmpsb
push
jb
aad
jecxz
pop
js
pushf
sub
ficomp
push
xor
ficom
les
jbe
mov
retn
imul
test
dec
mov
and
pusha
or
mov
mov
pop
jg
sub
lodsd
add
retf
clc
mov
out
sub
xchg
out
and
outsb
bound
retf
push
dec
pusha
push
sbb
dec
add
popf
cmp
mov
mov
das
in
movsb
mov
jecxz
pop
mov
test
cwde
setalc
test
std
les
xchg
clc
and
jnb
push
dec
icebp
iret
out
rep
cmpsd
jnb
push
in
dec
or
jns
pushf
out
xchg
mov
dec
adc
retn
iret
sub
retf
pop
dec
loop
rcl
mov
daa
mov
inc
sbb
aas
aaa
jb
push
push
pop
jnp
movsd
in
sub
inc
or
in
stosd
lodsd
stc
xchg
mov
mov
mov
inc
jg
out
pop
push
sub
dec
mov
pop
pop
pop
mov
icebp
fstp9
fiadd
xor
lds
pusha
xchg
push
fsubr
push
or
jo
lodsd
jo
popf
inc
lds
push
jnb
and
pusha
pusha
sub
push
mov
mov
xchg
outsb
stos
fsubr
mov
movsb
pop
jnz
fidivr
aas
stosd
jnb
test
mov
xor
pop
retf
inc
out
fadd
in
hlt
dec
dec
cmp
retf
pop
xchg
cli
clc
dec
push
adc
push
mov
lodsb
mov
cmp
sbb
inc
scasd
inc
mov
adc
jmp
jl
fmul
daa
hlt
fucom
cmp
icebp
aam
imul
bound
lds
int
mov
std
pop
or
jns
sub
pusha
dec
or
push
or
adc
stc
mov
fidivr
test
jz
daa
retf
xor
jb
add
rcl
inc
cwde
dec
inc
mov
jbe
cmp
adc
and
bound
jp
outsd
adc
or
lea
and
or
dec
pop
xchg
mov
add
xor
hlt
or
aad
sub
mov
xchg
xchg
xor
shr
sub
lock
sti
pop
add
jnz
or
inc
jb
and
nop
push
cmp
sbb
inc
xchg
inc
and
xchg
fadd
or
cdq
int
ror
xor
cmp
int
pop
adc
test
popf
clc
push
stc
or
not
sbb
cmp
stc
retf
cli
movsd
out
push
pop
mov
call
retn
or
scasb
lodsb
inc
push
add
jnz
loop
xchg
sahf
lodsb
pop
inc
lds
xor
inc
sal
js
inc
inc
insd
push
xchg
xchg
pop
retf
jecxz
sar
fisttp
fbld
jno
sti
retn
add
pop
aaa
call
pop
arpl
icebp
xor
adc
mov
mov
arpl
and
pop
mov
sub
pop
adc
mov
pushf
and
out
sti
mov
cmp
fcom
xchg
jns
jmp
sub
aam
xor
jo
lock
jmp
cmp
insb
push
cmpsd
mov
xor
cmpsd
pop
sbb
std
mov
mov
setalc
jge
fstp
test
jz
sti
ja
xor
and
enter
cmp
pop
jmp
mov
int
les
js
xor
wait
xchg
test
and
stosd
inc
sbb
add
mov
repne
push
dec
retn
retn
and
cmp
or
sar
xchg
mov
xor
sbb
daa
push
mov
xor
xor
rol
cmp
jp
push
push
fprem
mov
pop
sub
xchg
xchg
xchg
fcmovnu
movsd
shl
pop
xchg
or
pop
mov
or
add
and
mov
xlat
rep
sub
mov
add
and
cmpsb
pop
jge
adc
sub
das
mov
jp
add
cld
xor
cmp
dec
cmc
sub
jmp
pop
push
mov
cld
mov
add
popa
or
wait
retf
pop
test
dec
sub
adc
xlat
mov
sbb
dec
mov
out
mov
stosd
wait
cmp
sal
aaa
int
mov
ror
jmp
mov
cli
mov
sbb
out
int
cmpsd
jmp
cmp
loop
mov
xlat
jno
xor
pop
sar
cmp
cmp
dec
mov
cmpsd
adc
enter
movsd
popa
movsb
jp
jz
mov
pop
arpl
xor
enter
out
rep
stc
std
movsw
mov
sbb
mov
push
aam
add
sub
jg
out
mov
xchg
mov
pop
dec
pop
dec
mov
fucomp
dec
sub
jbe
pop
xchg
clc
mov
inc
push
scasb
in
adc
mov
or
fild
test
xchg
mov
sub
and
aam
call
mov
nop
mov
and
int
pop
test
mov
movsb
cmc
jge
wait
aas
push
aad
xor
daa
inc
mov
in
xchg
retn
