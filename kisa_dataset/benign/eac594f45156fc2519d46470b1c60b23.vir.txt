push
call
retn
retn
push
lds
insb
and
push
mov
mov
aas
push
sbb
pusha
shl
out
adc
int
pop
jecxz
and
dec
and
cmp
js
xor
loope
add
stc
retf
inc
shl
pop
imul
in
aam
xor
inc
sal
les
js
cmpsd
stc
nop
mov
divps
or
pop
stosd
adc
js
popa
jecxz
pusha
xchg
test
dec
xchg
xor
sub
aaa
insd
loopne
jmp
das
push
cmp
or
imul
cmp
jmp
and
dec
vmovupd
xor
sti
xor
mov
xor
popf
mov
fst
jnz
mov
cmp
int
dec
push
cmp
popa
daa
aad
cmp
xor
mov
rol
leave
add
pop
mov
fistp
push
sti
sub
xchg
dec
aad
adc
push
adc
outsd
inc
or
xor
pop
out
jnz
add
cli
dec
jbe
add
dec
fild
push
adc
cmp
sbb
les
wait
bnd
sub
adc
mov
mov
cmpsd
cdq
add
lodsd
jg
aas
sub
mov
adc
int
aaa
stosd
dec
retf
retf
fbstp
mov
fdiv
sub
cmp
adc
mov
aam
call
mov
jge
retf
mul
jno
or
pop
push
adc
push
push
test
push
inc
fild
jg
sub
dec
rep
adc
mov
setalc
and
mov
jmp
into
icebp
fild
or
mov
mov
push
in
into
mov
push
inc
mov
in
or
das
jo
xchg
pop
rcl
add
scasb
vmulpd
xor
mov
div
mov
int
jmp
xchg
and
enter
std
pop
pmulhw
in
cli
dec
pop
test
fisubr
and
xor
loop
and
sti
inc
jg
pop
pop
jbe
in
mov
mov
jg
imul
jz
loope
pop
xchg
or
xchg
pop
and
sbb
cmp
cmpsb
mov
dec
popa
inc
outsb
mov
insb
push
add
leave
adc
pop
iret
mov
sub
inc
aas
cmc
mov
sal
xor
retf
xchg
push
dec
lodsd
popf
test
imul
push
pop
lock
aad
adc
enter
mov
sub
pop
scasb
cdq
int
outsd
aaa
jg
mov
or
sahf
sub
sbb
lds
jmp
jb
test
jp
push
cmp
jmp
fcom
sbb
insd
wait
xchg
cmc
adc
lodsb
dec
mov
xchg
xchg
enter
mov
or
sets
pop
push
and
add
sub
jns
cwde
imul
mov
sbb
outsd
and
call
test
adc
xor
nop
add
push
xchg
sbb
pushf
mov
inc
push
mov
mov
or
in
clc
xor
in
lodsd
aas
adc
fcomp
mov
stosb
rol
adc
mov
lodsd
adc
xor
retf
xor
jz
xchg
cwde
add
les
inc
sbb
cmp
outsd
sub
dec
push
aad
jns
push
in
mov
add
pop
int
mov
sub
sbb
or
scasb
cdq
push
std
bswap
mov
frstor
cmp
adc
neg
out
and
adc
pop
xchg
cld
xchg
nop
mov
mov
cmc
insb
out
sahf
insd
mov
push
js
into
std
outsd
adc
mov
xchg
aaa
or
call
icebp
lea
in
add
xor
add
xchg
dec
xlat
inc
mov
pop
and
add
cdq
call
out
pop
retn
outsb
loop
or
pop
aam
in
aam
nop
leave
mov
push
shr
adc
inc
xor
sub
dec
cld
cmpsd
or
jbe
dec
adc
dec
xchg
cmp
aad
test
js
cwde
stosd
sar
pop
dec
mov
jb
or
stosd
aas
add
lea
mov
in
jo
dec
pop
out
mov
bound
and
js
sbb
jmp
mov
or
adc
sub
push
mov
xchg
cmp
in
push
push
idiv
jz
jno
outsd
in
lodsb
leave
movsb
pop
jmp
popa
aad
mov
dec
retf
xchg
xor
retf
xchg
cmpsd
add
nop
xchg
retn
inc
jb
cdq
dec
sub
paddsw
pop
inc
adc
sub
dec
pop
xor
setalc
fsub
or
dec
push
push
fadd
xchg
push
movs
inc
inc
sub
loopne
push
inc
xor
cmp
adc
or
scasb
pusha
or
pop
mov
out
test
test
inc
das
or
mov
sbb
in
push
jmp
push
mov
wait
setalc
loopne
pop
dec
cwde
adc
sar
push
add
iret
retn
pop
wait
adc
sbb
in
into
push
sal
pop
sub
call
jl
inc
idiv
iret
call
mov
lodsd
pop
dec
jo
les
mov
hlt
xchg
xor
jmp
retf
in
xor
mov
dec
int
cmc
push
sbb
pcmpeqb
lodsd
sbb
int
leave
mov
sub
push
pop
add
xchg
push
rep
sahf
jecxz
cmc
cld
pop
test
push
test
push
ht
inc
imul
xchg
push
aam
retn
jecxz
mov
xchg
mov
jge
jmp
imul
repne
jbe
sahf
lahf
lahf
xor
inc
iret
cmp
fisubr
pop
outsd
mov
push
pop
out
dec
jb
jnb
push
hnt
aad
shl
test
into
inc
push
daa
or
add
sub
add
daa
mov
xchg
std
stosb
pop
das
jg
in
int
pop
sal
in
lodsd
mov
and
and
xor
push
mov
setalc
mov
push
sbb
cli
pushfw
or
cmp
mov
xor
xchg
loop
jecxz
xchg
in
test
inc
mul
in
arpl
cli
mov
jnz
and
std
hlt
sahf
cmp
sub
xchg
clc
mov
insd
sbb
and
push
imul
and
xor
pop
imul
int
and
not
cmp
in
adc
repne
test
mov
pop
sub
ja
xchg
mov
mov
out
test
cmp
jmp
out
jl
mov
or
jmp
sbb
xchg
and
and
lock
shr
loop
sbb
lodsd
adc
push
aad
lahf
inc
mov
mov
jecxz
icebp
jecxz
test
test
pop
xor
push
xor
jg
retn
mov
mov
and
pop
movs
out
pop
add
push
nop
outsd
pop
daa
jecxz
loope
push
dec
dec
sbb
int
repne
adc
int
inc
in
mov
adc
insd
fldenv
inc
mov
sahf
push
fsubr
cdq
jnz
mov
adc
neg
or
out
movsd
scasb
xchg
mov
mov
test
adc
pusha
jnb
popf
into
jmp
outsb
push
lock
and
adc
retn
std
rcl
mov
push
shl
sbb
push
std
mov
sbb
mov
dec
wbinvd
loop
enter
repne
push
mov
fld
jbe
inc
fstp
adc
outsd
dec
xchg
push
outsb
in
daa
pop
test
out
mov
fcom
sbb
call
inc
mov
cli
pop
jnp
cmpsd
test
pop
mov
mov
cmp
xchg
xchg
jz
les
push
push
inc
test
jz
jnz
mov
pop
retn
add
push
jmp
fadd
setalc
fisub
bound
xchg
std
push
cld
lodsb
shl
xchg
out
jns
lock
call
mov
inc
inc
cdq
clc
xchg
popa
or
popa
sub
rol
push
mov
leave
daa
xchg
sub
scasd
adc
pop
or
adc
jnb
push
sub
ht
jns
wait
mov
and
pop
inc
sahf
test
cwde
add
inc
dec
or
jle
lds
dec
stosd
mov
cmc
cdq
lahf
scasb
icebp
inc
cmp
scasb
popa
in
and
mov
push
or
mov
sti
test
pop
fmul
push
setalc
mov
dec
and
push
out
pop
xor
jg
rcl
sbb
out
cmp
js
pop
mov
and
jmp
sub
mov
push
rcr
push
adc
setalc
dec
xchg
inc
or
imul
loope
test
pop
cwde
or
pop
xchg
xchg
inc
sub
push
sbb
adc
jz
add
jmp
mov
push
push
pop
sbb
aas
push
enter
outsd
call
int
xchg
cmc
sal
clc
adc
into
push
jmp
mov
jb
out
xchg
add
loop
stosd
inc
mov
popf
cmpsb
jge
jecxz
push
cwde
in
inc
sub
cli
add
pop
cld
xchg
push
sub
xor
mov
out
adc
imul
retf
inc
xchg
popf
adc
fcmovne
mov
or
push
rep
pop
in
stc
and
clc
dec
push
pusha
sahf
cmc
popa
xchg
push
outsb
imul
rep
push
imul
int
insb
sub
mov
push
idiv
out
xor
jmp
dec
mov
pop
sbb
mov
inc
push
iret
sbb
fsub
xchg
fbld
mov
mov
leave
wait
out
mov
sbb
sbb
popf
push
cmp
aam
insb
call
xchg
mov
adc
push
or
add
test
out
xchg
mov
outsd
pop
das
sbb
ror
and
jge
jbe
mov
js
popf
xor
pop
mov
mov
dec
in
inc
and
cmc
insd
dec
rcr
xchg
push
sub
lds
rcl
push
retn
lodsd
loop
adc
lodsd
loopne
std
sbb
outsb
pop
popf
inc
pop
pusha
hnt
mov
cmp
std
loope
stosd
pop
cmpsd
cmp
push
mov
sub
jnp
repne
retf
cmc
mov
inc
ror
push
fcmovu
cmp
setalc
les
mov
push
rcl
pop
jnb
and
cmc
inc
repne
retf
jmp
push
pop
retf
mov
mov
stosd
mov
nop
rep
dec
rep
or
clc
pop
int
into
fistp
jle
push
push
cmp
push
add
mov
shr
pop
pop
add
fist
cmc
std
sub
jecxz
mov
jnp
xor
xchg
and
jecxz
wait
adc
stosb
xor
shl
fcmove
and
adc
dec
jg
push
mov
das
push
push
inc
mov
hlt
pop
test
retn
push
push
push
and
mov
and
xchg
movsd
jnb
jnb
lock
sbb
out
js
and
wait
lahf
mov
push
mov
sub
xor
add
repne
bswap
pop
push
and
add
rep
loopne
pusha
add
inc
mov
mov
out
arpl
push
push
mov
mov
cmp
xchg
mov
mov
call
retf
lodsb
jbe
xor
lds
stc
cmpsd
dec
cdq
dec
pop
arpl
in
pop
inc
push
cdq
mov
adc
mov
mov
popf
inc
xchg
popf
push
mov
bound
inc
sub
popa
or
movsw
wait
jmp
pop
lds
pop
pop
pop
fcom
les
cmp
test
dec
dec
retf
xchg
int
jecxz
nop
inc
adc
push
daa
iret
enter
scasb
add
mov
xchg
retn
cmp
clc
movsb
popf
aas
aad
dec
push
adc
dec
cdq
sar
scasb
sbb
pop
mov
mov
jmp
setalc
rcl
cmc
fadd
retf
shr
popa
xchg
and
sbb
retn
test
xor
ficom
sahf
jns
retn
xchg
dec
popa
sal
lds
cmc
dec
and
cdq
cmp
sbb
mov
daa
xor
sub
push
add
cld
repne
out
nop
std
cmp
pop
mov
adc
mov
xchg
test
cmp
pop
jmp
and
les
repne
mov
call
or
dec
xchg
sbb
push
rep
xor
jge
setalc
dec
cmp
cld
movsd
mov
sti
iret
sahf
loope
adc
xchg
xor
sbb
sub
in
jl
push
mov
rol
xchg
mov
or
or
xor
and
pusha
jp
retn
dec
div
inc
and
sbb
sub
fidiv
mov
jb
imul
sbb
jmp
fisttp
mov
cmp
sbb
xchg
xlat
jge
or
retn
dec
push
aaa
sti
pop
mov
out
cmpsb
neg
or
jecxz
insd
leave
popf
pushf
xchg
cmp
dec
fnstcw
test
cmp
mov
arpl
popa
inc
retf
outsb
sbb
inc
push
cmp
call
aas
xor
mov
lds
iret
xchg
mov
push
js
loop
pop
lahf
fdiv
push
xchg
sub
jbe
cmp
adc
pop
ficom
pop
xor
std
out
push
inc
cld
or
sbb
xchg
cmp
cmp
lock
mov
pop
cwde
and
push
fidivr
pushf
nop
std
push
push
test
sub
sbb
mov
and
push
test
lea
cld
sal
clc
inc
xchg
mov
lock
jmp
xor
mov
jnz
in
stosd
pop
fld
and
mov
lodsd
add
mov
jmp
stc
pop
sub
out
jp
add
cli
and
push
fadd
pusha
cld
pmuludq
enter
popf
dec
sbb
sub
inc
icebp
in
test
xchg
mov
lea
push
adc
sub
or
mov
jg
sub
dec
inc
scasb
cmp
arpl
xor
call
push
pop
fisttp
pop
inc
cmp
shr
sal
sbb
mov
inc
push
xchg
scasd
pop
mov
pop
retn
insd
ja
out
push
and
jmp
jmp
int
sbb
pop
mov
pop
aaa
sar
into
shl
inc
popa
setalc
insd
fnstsw
cld
xor
cmp
std
sal
sub
xor
xchg
add
arpl
or
shl
int
add
pop
outsd
imul
popa
inc
loope
mov
pop
cmp
push
jns
das
pop
or
inc
int
and
pop
loop
lock
jp
retn
popa
movsb
dec
into
rcl
mov
xor
std
cmpsd
xlat
inc
mov
inc
jge
xchg
movsb
mov
fisubr
shl
cmp
cmp
inc
inc
loope
dec
insb
stosb
sub
rcr
mov
cld
sub
add
mov
and
or
aaa
cmp
shr
or
push
movsb
xchg
mov
mov
sahf
mov
clc
movsd
xchg
enter
adc
sub
jno
add
sbb
das
xchg
mov
adc
std
call
or
adc
not
xor
jbe
mov
jb
setalc
adc
or
push
scasd
cmp
adc
cmp
cmp
sahf
test
daa
jnb
inc
nop
or
and
clc
pop
jno
mov
pop
xchg
sub
call
scasd
lds
bound
dec
jp
imul
sar
imul
aad
retf
arpl
cmp
or
int
jmp
mov
and
dec
adc
mov
push
pop
mov
ficomp
push
sub
xchg
test
sbb
pusha
adc
jecxz
pop
aaa
add
out
mov
mov
popa
cwde
adc
add
rol
stosd
test
sbb
shl
loop
adc
push
push
mov
xchg
shr
xchg
test
rcr
scasb
dec
fdiv
pop
or
push
cmp
shl
push
mov
aas
out
das
arpl
insd
idiv
scasb
sub
cmp
jo
sar
and
push
cld
mul
insb
call
xchg
mov
pop
adc
mov
test
into
inc
sbb
jle
mov
mul
pop
loop
test
cmpsb
sub
jmp
in
cmc
or
push
cmp
add
mov
push
insb
sbb
jo
iret
wait
aam
push
popa
cli
pushf
or
retn
aas
aaa
or
xlat
rol
arpl
xor
cmpsb
scasd
sbb
pop
or
cdq
rcr
sal
dec
stc
push
cmp
pop
mov
test
add
imul
shl
add
retf
pop
pop
outsb
imul
insb
mov
and
jbe
mov
add
not
cmpsd
int
push
mov
jle
sbb
xchg
jnb
cmp
retn
hlt
fld
fbld
cmpsd
jnz
popf
jg
movsd
mov
std
adc
dec
popf
push
popa
jz
nop
jo
mov
push
sbb
cmp
push
pop
lodsb
call
pusha
out
retn
pop
pop
jnb
in
inc
nop
leave
push
daa
push
cmp
mov
movsb
hlt
mov
pushf
xchg
sbb
mov
adc
inc
mov
mov
or
sar
insb
inc
jns
cmp
outsd
test
lodsd
pushf
setalc
jg
mov
call
push
popf
push
retn
mov
enter
mov
or
mov
mov
cmp
push
mov
cmp
mov
jnb
insd
wait
jnp
mov
inc
jg
mov
rep
adc
push
xchg
loopne
hlt
daa
lods
cmp
scasd
pop
wait
push
cmp
cmp
sti
imul
adc
sub
sub
inc
push
xchg
xor
pop
push
pop
jmp
int
ja
dec
stosb
dec
inc
and
dec
pop
movsd
fstp9
js
rcr
jns
inc
sti
or
push
retn
push
jl
adc
fldcw
in
push
lahf
jmp
cwde
xor
dec
adc
pop
cmp
icebp
pop
pop
xchg
dec
mov
int
pop
push
jecxz
insd
and
push
pop
add
cmpsd
in
push
xor
stc
xchg
mov
or
mov
sti
test
mov
outsd
test
pop
mov
xchg
loopne
rcl
sub
cmp
dec
dec
dec
xor
sbb
outsb
adc
rol
sub
pushf
lodsb
daa
clc
jecxz
fimul
rep
stosb
fidiv
mov
adc
std
push
push
fimul
scasd
dec
retf
mov
jnb
sub
call
loopne
movsb
das
sub
in
inc
push
retn
push
mov
pusha
test
pop
mov
push
loope
cwde
pop
jnb
jnb
fstp8
loope
mov
clc
mov
dec
int
and
adc
daa
bound
mov
das
cmpsd
jle
ja
and
and
fbstp
sub
int
setalc
int
dec
cmp
inc
arpl
xor
jge
push
jle
sbb
add
repne
push
and
test
test
out
lock
adc
dec
sub
mov
mov
cwde
out
aaa
sbb
lahf
pop
mov
mov
cli
pusha
aas
and
xor
add
push
push
mov
js
idiv
inc
ror
repne
push
js
scasd
sub
pop
retn
push
lodsb
sbb
sub
dec
into
inc
mov
sub
dec
dec
stc
out
aam
les
jno
adc
lodsd
mov
mov
pusha
sti
loope
add
sub
mov
sub
out
push
rcr
mov
xchg
shl
inc
js
outsd
out
mov
jmp
cld
xchg
push
pop
fldcw
cwde
out
rep
cmp
jmp
xchg
jnb
inc
and
mov
mov
dec
leave
leave
add
out
pop
sub
daa
enter
aad
push
sbb
dec
clc
retf
mov
pop
adc
jnb
xchg
insb
arpl
sub
js
cmp
mov
jnp
add
rcl
push
mov
nop
repne
cmc
mov
out
mov
and
mov
insd
push
in
cmp
mov
mov
ja
aaa
sbb
popf
pop
dec
inc
jecxz
mov
dec
not
cmp
mov
mov
insb
in
hlt
sbb
push
js
add
and
inc
cmp
mov
sbb
add
sub
outsd
adc
out
push
inc
dec
call
nop
cli
xchg
leave
jp
xlat
insd
push
mov
xchg
in
mov
pop
mov
sti
xchg
shr
jo
jmp
xchg
rol
mov
shr
rol
dec
mov
leave
adc
stosb
xchg
xor
stc
or
loop
imul
in
mov
xchg
stosd
shl
jg
iret
xchg
cld
retn
daa
clc
push
pop
sahf
mov
movsb
sbb
cdq
and
int
sub
repne
sbb
jns
xor
ja
mov
mov
setalc
xor
test
arpl
xchg
rol
push
jmp
push
das
scasd
setalc
pop
mov
xchg
and
lahf
retn
out
mov
dec
outsd
sti
sahf
and
jge
and
xor
rep
or
stosb
clc
iret
cwde
pop
in
pop
or
int
mov
rcr
sahf
aas
arpl
retn
sbb
inc
fist
cmp
inc
js
arpl
add
std
jb
ficomp
and
sbb
pop
into
adc
xchg
jo
add
fisttp
int
aam
mov
sbb
int
in
imul
sub
ror
adc
cwde
fnstsw
fbld
aad
ficomp
out
adc
ror
aam
inc
mov
rol
aad
pusha
loope
pop
sbb
icebp
sub
xor
xchg
jecxz
popa
jo
add
mov
jmp
retn
ror
dec
sbb
paddsw
out
dec
xchg
push
xlat
inc
lock
adc
sbb
sub
dec
push
or
lodsb
jle
cli
mov
imul
cdq
test
adc
scasd
add
cmc
mov
cmc
mov
mov
in
stosd
test
cmp
or
nop
inc
cmpsd
or
jle
jecxz
test
arpl
int
cmp
jnp
scasd
jl
mov
test
loopne
scasb
out
cmpsd
mov
daa
jo
mov
jnb
xchg
xchg
and
leave
jnb
popa
test
jl
or
mov
mov
scas
pop
xor
imul
mov
xor
mov
cmp
dec
dec
or
push
jge
inc
cdq
cmpsd
adc
test
add
movsd
lock
fld
cmc
pop
mov
dec
jno
mov
icebp
in
sub
test
or
stosd
jmp
movsb
daa
xor
int
pusha
not
mov
dec
retf
pop
xor
popf
inc
push
arpl
push
inc
mov
dec
add
sahf
push
popa
mov
shl
pop
xlat
cmp
xchg
mov
std
and
xor
adc
cdq
ror
daa
mov
or
les
std
dec
in
mov
jb
adc
and
mov
and
shr
pop
enter
lodsb
rcr
inc
inc
idiv
pcmpeqw
pop
call
inc
inc
mov
mov
dec
inc
stosb
hlt
mov
mov
mov
call
xchg
or
xchg
fimul
icebp
xor
fisttp
push
mov
test
and
pushf
or
setalc
inc
rcr
lodsd
xchg
in
mov
mov
cmpsb
adc
out
ja
sub
mov
adc
lea
in
int
rcl
sbb
cwde
pop
fptan
inc
mov
pop
out
jp
jle
pusha
inc
rep
pop
sbb
loope
sbb
call
ror
pop
retf
sbb
fmul
insb
in
mov
xchg
dec
xor
mov
pop
mov
mov
dec
xchg
xchg
mov
iret
retf
mov
xor
inc
nop
cmp
push
push
and
xchg
pop
cmp
dec
aas
sar
add
push
cmpsd
icebp
adc
and
fdivr
in
adc
sbb
fnsave
adc
jle
inc
xor
cwde
jnb
fiadd
adc
sti
dec
xchg
push
push
cwde
push
imul
jmp
sub
lds
mov
mov
loop
punpcklwd
push
mov
arpl
fiadd
push
mov
stc
dec
sub
test
popf
mov
jge
wait
push
mov
aad
adc
sbb
inc
test
pushf
jg
sti
inc
lock
pop
cmpsd
fld
setalc
enter
mov
inc
jnp
repne
sub
test
nop
jns
in
mov
jp
mov
cmp
jns
cmp
jg
mov
loop
and
pop
pop
mov
mov
sub
cmp
movsb
cmp
mov
scasb
fucomip
mov
jl
mov
iret
add
push
call
rep
out
xlat
xchg
xchg
or
clc
aad
mov
pop
mov
mov
repne
xchg
call
sbb
push
lodsb
push
imul
movsb
sub
hlt
cwde
push
imul
aaa
jnp
adc
jbe
and
sbb
cld
add
and
daa
lock
pop
leave
sar
outsd
mov
scasb
out
dec
and
jl
cmp
cli
imul
aas
inc
jnb
fimul
in
pavgb
call
cli
jns
orps
mov
and
dec
fxch4
jb
mov
ror
ror
mov
dec
pop
cdq
sub
rcr
cmpsb
mov
pushf
movsb
test
arpl
lds
imul
in
xor
dec
cmpsd
xor
mov
jmp
inc
or
sbb
add
inc
int
xchg
add
or
inc
outsb
sub
retn
mov
mov
push
stosd
jnb
js
setalc
out
add
sbb
setalc
insd
out
xchg
movsb
rep
adc
inc
jnb
pop
cmc
xor
loop
mov
nop
adc
aad
mov
mov
and
pop
sbb
dec
pop
push
pop
xor
inc
dec
cmp
int
jno
wait
or
sbb
leave
mov
jo
div
mov
add
push
ficom
in
jo
add
jmp
push
inc
int
xchg
movsd
pop
mov
arpl
loopne
inc
or
pusha
adc
xchg
sub
and
fsubr
or
sub
add
add
ror
jno
or
xchg
retf
stc
bound
jnz
pop
jmp
loop
pop
sbb
fist
out
xchg
add
popa
sub
mov
add
into
in
adc
xchg
setalc
scasb
xchg
adc
sahf
push
test
xchg
inc
add
xchg
jbe
jo
loope
call
mov
std
repne
cmp
jg
sub
push
push
sub
adc
add
ja
cmp
sub
cmp
sub
jnp
push
mov
sbb
push
jno
adc
xlat
pop
outsd
sub
mov
mov
mov
iret
jecxz
jmp
in
push
dec
pop
dec
xlat
xchg
xor
cmp
pop
scasd
mov
fadd
xchg
sti
xor
mov
inc
jnb
xor
mov
mov
xchg
out
mov
sbb
pop
xchg
xchg
imul
test
or
setalc
retn
bound
mov
mov
inc
sbb
repne
inc
setalc
sbb
aas
pshufw
inc
aad
push
fst
scasd
imul
sbb
int
sti
add
xor
add
cmpsb
imul
sti
call
movsb
xchg
mov
mov
das
sbb
adc
clc
xlat
jz
jg
sbb
pop
loop
clc
and
stc
add
xchg
lodsd
cli
mov
jl
xchg
in
or
retn
inc
in
sub
scasd
movsd
inc
mov
cdq
adc
add
adc
in
cld
mov
sub
mov
push
loop
and
retf
repne
leave
mov
push
mov
pop
inc
xchg
mov
sbb
stosd
retn
jl
lea
fst
stc
mov
pop
in
fnstcw
inc
xchg
cdq
pop
and
daa
pop
sal
mov
mov
pop
mov
jle
fist
mov
rcl
xor
insb
push
xchg
cmp
bound
movsd
pop
test
xchg
fsubr
mov
mov
push
setalc
or
dec
in
xchg
mov
dec
and
fcomp5
jmp
jnp
cmpsd
fcmovnu
mov
mov
jo
pop
jo
fbstp
fistp
pushf
lock
rcl
in
clc
shr
xchg
pop
aaa
pop
retn
retf
cmc
lahf
stosb
pop
mov
xor
repne
xchg
cld
add
mov
mov
scasw
bound
idiv
sub
and
inc
and
mov
outsd
lodsd
fxch7
cmp
mov
rep
dec
adc
mov
cmp
xor
aas
mov
wait
mov
inc
das
or
or
push
sbb
wait
js
scasd
mov
aaa
push
daa
add
or
pop
jmp
inc
jp
sub
mov
test
test
dec
mov
in
scasb
sbb
and
push
sbb
mov
dec
aad
jmp
cmp
aam
cmc
pop
mov
fisubr
cwde
bound
mov
jl
daa
sbb
sub
aas
xor
pop
add
test
mov
mov
jg
fcmovne
push
lock
xchg
retn
sahf
test
fsubr
js
adc
sub
dec
aam
sub
nop
pusha
xor
shl
insd
mov
sti
mov
jecxz
or
pop
lock
fimul
inc
jno
jl
insd
jb
adc
adc
icebp
xor
pop
jl
mov
push
mov
jmp
into
imul
nop
inc
in
pusha
stc
jno
insb
add
or
xor
adc
mov
cdq
jecxz
stc
fist
cdq
std
mov
push
inc
pop
push
dec
mov
dec
xchg
or
dec
and
pop
arpl
test
jbe
lahf
mov
int
add
or
lock
scasd
int
xchg
dec
jmp
imul
rcr
and
punpckhbw
pop
sahf
sub
inc
inc
wait
cmp
dec
mov
scasb
mov
add
cld
dec
dec
dec
lea
fstp
pop
dec
loop
xor
add
test
jnb
add
in
cli
lock
or
push
mov
loopne
ror
adc
outsd
movsd
or
sbb
fisub
push
cwde
test
sbb
inc
aad
lock
xor
push
jle
lahf
stosd
push
into
inc
mov
push
cmp
lea
mov
sbb
or
push
pop
mov
jmp
js
cmp
inc
add
cld
pminub
lahf
jecxz
mov
movs
sub
adc
jle
stc
hlt
sbb
and
stc
repne
jnb
add
out
push
jns
imul
push
sal
jz
jl
std
mov
mov
inc
call
movsb
dec
clc
nop
push
jmp
xor
aaa
stosd
mov
dec
ror
loop
jmp
iret
stosb
xchg
pop
push
pop
movsd
cmp
mov
cmp
jmp
daa
push
jo
in
mov
xlat
cdq
into
rol
and
setalc
adc
jo
adc
jnp
pushf
iret
retf
sti
and
add
push
lodsb
add
aam
ror
rcl
shr
int
aaa
aam
pop
imul
push
or
wait
les
pop
fstp9
mov
and
push
repne
jns
fst
push
out
dec
inc
jb
out
push
push
mov
sti
inc
mov
cwde
fst
xor
test
mov
retf
or
add
xlat
mov
dec
mov
inc
and
mov
fsub
out
jmp
insd
inc
sub
jo
dec
mov
cmp
mov
inc
mov
pop
mov
in
int
xchg
inc
das
sahf
leave
int
in
mov
mov
push
test
mov
inc
inc
aaa
pop
cld
cmp
out
xor
sar
pop
imul
jnb
aaa
aad
add
enter
jg
movsb
mov
pop
and
jmp
cmp
iret
push
lds
or
clc
fdivr
arpl
push
jle
test
jmp
mov
jb
push
in
jmp
or
stosb
lahf
sbb
jmp
outsd
push
adc
mov
leave
test
sti
mov
faddp
fistp
push
int
daa
xlat
rep
idiv
sub
or
xor
xchg
sbb
push
arpl
nop
and
pop
sbb
and
mov
cmp
sbb
mov
aas
push
icebp
inc
push
in
pop
fcmovb
hlt
cmc
jmp
rol
xor
mov
lahf
retf
dec
mov
inc
out
cmp
std
movsb
les
jo
sub
out
xchg
setalc
out
lodsd
fcmovb
mov
pmuludq
int
jmp
lahf
pop
stc
jge
dec
xchg
daa
xchg
test
jbe
hlt
nop
xor
jecxz
sub
xchg
scasd
mov
pop
dec
cmpsd
jge
movdqu
push
sbb
push
xchg
inc
push
shl
pop
push
push
dec
mov
inc
add
xchg
jge
cli
mov
stc
in
pop
mov
aam
xor
mov
pop
jecxz
out
wait
fcompp
pusha
call
inc
cld
cwde
mov
cli
push
add
and
inc
xor
dec
pop
int
xor
hlt
add
retf
jns
or
test
call
call
mov
dec
jnp
and
inc
adc
outsd
xlat
jmp
pushf
adc
add
mov
stc
and
push
movsd
mov
int
push
test
jnp
retn
fld
mov
xor
hlt
sbb
jp
in
test
or
or
mov
jnp
or
lodsd
mov
popf
push
mov
pusha
setalc
shl
mov
push
imul
push
mov
cwde
scasd
icebp
retn
and
in
stosb
mov
and
sbb
mov
popa
add
stosb
pop
test
and
jle
push
popf
inc
pop
or
popf
push
pop
sahf
pop
jge
jno
jle
shr
leave
fld
pop
sbb
pop
cmpsb
cmc
call
int
mov
xchg
icebp
sbb
mov
and
mov
hlt
dec
cwde
arpl
sti
xchg
int
xor
repne
pop
pop
ja
push
sub
imul
xchg
imul
and
aad
jg
fstp
rol
retnw
outsd
insb
adc
pop
cli
aaa
pushf
xchg
jnb
lahf
xchg
enter
or
int
loopne
mov
loopne
lea
push
sbb
ja
out
pop
push
jl
pop
stosd
cmc
jno
and
pop
scasb
sbb
jns
sub
jno
mov
mov
imul
inc
jz
fdiv
movsb
cmc
dec
insd
imul
pop
mov
mov
inc
sbb
push
mov
out
cmp
jl
mov
sub
test
into
scasb
mov
neg
mov
mov
pop
push
mov
jmp
push
mov
or
mov
shl
pop
call
adc
retf
rol
mov
pop
cdq
mov
pop
sub
sub
movsd
cdq
and
pop
imul
jmp
repne
dec
int
cwde
push
ht
aad
add
rcl
push
xor
cmp
push
and
lea
and
std
fisub
out
or
jecxz
or
enter
mov
pop
jg
mov
cli
jno
test
xchg
add
adc
lds
push
enter
leave
inc
in
pop
lodsd
pop
jmp
popf
inc
or
or
push
cld
push
mov
sal
rol
adc
dec
adc
test
inc
repne
sbb
lahf
pop
cmp
cwde
cwde
cmc
cmp
jnb
lodsb
mov
mov
lea
inc
icebp
mov
aaa
test
and
jge
jo
mov
sub
retf
and
les
pop
pop
lahf
out
dec
mov
pop
xchg
retn
inc
inc
cmc
push
or
sahf
xchg
loope
fcomi
cmp
fsub
adc
or
cmc
jecxz
jnz
in
adc
pop
jmp
scasd
in
pop
and
jnz
or
ja
aaa
retf
scasd
fst
imul
popf
ja
push
cmpsb
cmpsb
jge
sub
or
pusha
fdivr
jl
cmp
fld
adc
jno
push
xchg
and
nop
outsb
cwde
mov
dec
test
push
out
out
jb
mov
leave
jle
add
rcr
dec
push
or
stosd
mov
or
retn
add
push
jnp
stosd
ficomp
retf
push
popf
push
fidiv
jg
cmp
lea
in
in
jecxz
pop
sbb
add
xor
xchg
lock
sbb
and
mov
ror
in
push
inc
pop
xchg
jo
sub
cli
xchg
loope
mov
mov
mov
fstp
imul
pop
xchg
fild
mov
xor
push
insb
jb
sub
stosb
pop
cli
shl
or
inc
mov
fadd
mov
dec
xor
lodsb
ja
push
push
push
sbb
lock
xor
cdq
push
xchg
ja
mov
dec
or
add
outsb
unpcklps
push
jl
aaa
dec
push
pop
outsb
loop
retf
jg
jns
pop
inc
into
cmp
mov
loope
test
scasb
test
nop
pushf
cmpsd
or
xadd
and
aaa
aas
pop
ffreep
cmp
das
inc
dec
sub
cmp
push
pusha
xchg
jnz
cdq
neg
fstp
shl
and
icebp
cli
adc
inc
insb
sal
shr
pop
arpl
jg
test
mov
rep
in
and
xlat
add
lea
mov
mov
pop
test
cmp
pop
jb
and
rol
xchg
cmp
dec
jg
stosd
xor
wait
cmp
push
xchg
cmp
stc
popa
dec
retn
xchg
test
jp
push
dec
mov
xor
mov
jz
jnz
sbb
fnstenv
adc
jle
mov
divps
mov
sbb
repne
mov
icebp
jmp
and
or
sub
std
imul
xchg
retn
push
mov
fstp9
inc
cwde
rep
sbb
dec
dec
lea
mov
aad
push
mov
sti
int
adc
jecxz
out
shr
push
pop
fsubr
retf
pop
push
hlt
jz
aaa
repne
push
jg
out
lodsd
push
or
pop
push
outsb
js
retn
push
inc
add
daa
das
retf
insd
lahf
pop
mov
xor
xchg
js
jp
dec
sti
push
jns
xchg
in
les
and
adc
daa
imul
mov
mov
push
leavew
cli
push
sub
mov
adc
inc
fmul
push
mov
add
mov
pop
add
out
aad
cmp
scasd
add
add
adc
aas
xchg
aam
xchg
push
std
scasd
fidiv
aaa
lodsd
test
sub
arpl
hlt
lodsb
xor
fisubr
mov
mov
or
call
lodsb
retf
jns
mov
mov
jmp
fsub
scasd
dec
pusha
xchg
in
cmp
inc
xlat
cwde
fist
retf
xor
xor
in
mov
push
jmp
dec
rep
aad
repne
cmp
pop
ja
ja
jle
out
and
loop
adc
insd
test
lea
push
jb
adc
stc
enter
pop
jecxz
xlat
retf
fstp
xlat
imul
stosd
mov
jle
jmp
cmp
dec
sub
mov
popa
and
inc
lea
jbe
push
rcl
mov
pop
test
jz
sar
loopne
xor
popa
lds
cmp
mov
and
and
mov
sahf
stc
push
cdq
and
mov
mov
push
jb
and
inc
ja
hlt
pop
sar
xor
dec
std
jno
test
cli
sub
push
mov
and
pop
and
subps
mov
mov
mov
jnz
setalc
and
sub
movsd
push
cmpsd
mov
cmp
insd
mov
add
cmp
stosd
inc
enter
enter
inc
popa
out
pop
stc
arpl
inc
clc
push
outsd
push
cmp
adc
popa
mov
push
loope
pushf
adc
push
mov
push
mov
jmp
push
or
jno
xchg
xchg
dec
cmp
sub
clc
aam
push
jmp
push
adc
out
dec
pop
pop
repne
or
std
mov
sti
shl
push
cmp
mov
sub
sti
popf
inc
pop
call
add
stc
std
aam
in
mov
out
stosd
pop
push
out
adc
sub
jb
add
jnp
add
and
sbb
jmp
movsb
pop
mov
int
retf
iret
push
push
insd
add
js
xchg
push
sub
cmpsb
aad
pop
mov
lodsd
lodsb
mov
hlt
jg
xchg
cmp
adc
mov
push
dec
test
inc
and
dec
or
pop
stc
jp
cmp
or
lahf
scasd
or
or
sbb
shr
push
loope
jnz
cmp
insd
push
mov
pop
wait
aam
mov
mov
jno
push
std
outsb
sal
ja
cmp
pop
cmp
xor
sub
and
inc
xor
lea
and
dec
in
imul
and
insd
pusha
and
hlt
xchg
dec
imul
call
outsb
cmp
retn
push
wait
xchg
cwde
push
idiv
cdq
cwde
outsb
and
outsb
inc
jecxz
jno
adc
mov
sub
inc
lahf
icebp
vcvtdq2ps
cld
and
xor
mov
jg
dec
shr
push
mov
jo
arpl
retn
add
ror
inc
rcr
and
sbb
pop
fimul
insd
or
jg
fistp
insd
aas
jo
push
insd
ror
and
arpl
rol
cmp
test
xchg
sbb
mov
pusha
popa
xchg
mov
xchg
sar
and
and
mov
mov
and
cmp
xor
adc
push
xchg
loop
xchg
mov
inc
imul
retn
dec
sahf
or
idiv
popf
pop
daa
mov
push
mov
cmp
aad
push
mov
loope
mov
cmp
in
popf
test
into
xor
or
mov
sbb
jp
add
jbe
and
mov
test
xor
xchg
jz
jnp
pop
mov
retn
sub
dec
les
das
mov
sbb
aam
in
in
setalc
mov
pop
hlt
fsubr
into
int
sub
jnb
out
std
out
adc
int
add
das
test
push
cmp
les
les
mov
in
mov
mov
rcr
in
sub
xor
stc
mov
nop
adc
pop
sub
add
cmp
mov
sub
xchg
int
repne
push
pop
mov
jecxz
js
jb
sbb
xor
in
mov
xor
mov
in
scasd
dec
test
jnb
aas
inc
mov
iret
mov
adc
and
fisttp
mov
inc
cmc
xor
mov
stosb
push
pop
sbb
mov
jmp
sal
in
inc
int
aad
pop
jnp
mov
pop
mov
int
das
dec
pop
cmp
movsb
push
cmp
push
leave
jz
enter
or
clc
jecxz
std
stosb
rcl
pop
mov
movsd
or
call
cmp
subps
adc
stc
call
lodsd
mov
out
xchg
push
lodsb
mov
vpsadbw
clc
mov
icebp
daa
pop
cmovnp
push
fsubr
add
jnb
xor
xchg
outsb
sub
jns
cmp
icebp
mov
and
das
and
jb
xor
xchg
mov
mov
mov
outsd
pusha
icebp
push
cmc
movsd
aam
xor
mov
mov
sbb
sub
cmp
hlt
adc
retf
add
aas
or
retn
mov
mov
or
retf
pop
bound
ffree
pop
daa
dec
adc
stosb
adc
xor
loopne
push
ror
push
scasb
add
test
mov
cwde
scasb
cmpsd
sub
out
xor
movsd
push
and
mov
daa
pop
mov
add
mov
pusha
jmp
or
aam
mov
cmp
cwde
jns
fild
fist
in
sbb
mov
mov
mov
sub
or
sbb
out
sbb
mov
wait
mov
push
sti
out
jno
cld
jo
not
icebp
out
mov
or
inc
stosd
pop
sub
lea
mov
xchg
jnp
sahf
pop
jle
enter
into
inc
pop
out
pop
nop
mov
wait
popa
jmp
jns
call
and
sal
out
xlat
stosb
mov
sub
outsb
jle
push
jz
jb
wait
shl
stosb
xchg
mov
inc
sub
dec
pop
cmpsb
or
xchg
pop
dec
fsubr
jl
xor
outsb
xor
cmp
add
jno
jz
wait
jl
or
jns
inc
push
sal
cmp
adc
pushf
insb
xor
and
jz
add
aam
mov
inc
stosd
nop
push
pop
retf
sbb
pop
push
or
adc
movsd
sbb
xchg
or
dec
sub
add
mov
cmp
insb
push
aas
xor
in
cmpsd
mov
pushf
nop
mov
iret
fiadd
wait
pop
fmul
sbb
inc
mov
xchg
loop
mov
dec
retf
adc
add
repne
repne
dec
in
wait
cmp
pop
push
pop
mov
pop
repne
mov
lodsb
xchg
cld
not
push
mov
add
sbb
mov
rcl
cdq
not
jmp
fimul
stc
pop
sub
stosd
mov
mov
dec
stosb
iret
inc
push
hlt
mov
pop
mov
jmp
lahf
aaa
xor
xchg
push
int
sbb
adc
mov
pop
test
in
and
jbe
js
das
aad
in
dec
aas
add
jz
sbb
test
adc
jnb
js
mov
mov
test
jz
repne
imul
xchg
xor
shr
movsb
fadd
or
cwde
xor
aas
pushf
idiv
mov
jo
sub
push
out
lodsb
jnp
adc
mov
test
sti
test
push
stosb
jnp
pop
mov
into
or
xchg
xor
sal
xor
cmp
jnp
out
pop
pop
std
push
retn
rcl
cmp
and
sahf
push
mov
xchg
icebp
icebp
insd
sbb
enter
jbe
dec
jz
mov
popa
and
rep
jnp
dec
movsd
pop
aaa
cmc
dec
jno
jnp
or
bound
or
mov
pop
lahf
jle
inc
dec
lodsb
xor
or
or
in
jl
les
jmp
cmpsd
mov
stosd
aam
pusha
retf
arpl
add
repne
mov
dec
mov
adc
popa
pushf
in
or
pop
dec
movsd
outsd
popf
enter
jnb
or
js
mov
mov
pop
mov
mov
sub
cmp
int
cld
mov
in
aad
xor
sbb
dec
stosb
scasb
test
and
test
push
dec
or
or
cmp
ficomp
mov
mov
in
test
or
dec
lock
ffreep
add
lock
push
aad
retn
xor
push
sbb
clc
wait
adc
push
stc
inc
neg
mov
add
imul
wait
adc
mov
add
push
pop
pop
stosb
sub
inc
std
rcr
mov
cmp
imul
cmp
in
sub
rcl
mov
ror
test
aad
xchg
scasb
das
xchg
inc
dec
fisttp
cmc
aaa
jl
dec
dec
cmpsd
xchg
aaa
or
jnb
sti
jo
retn
and
lock
test
pop
dec
in
dec
pushf
test
setalc
sbb
into
push
imul
adc
int
push
pushf
or
in
pop
icebp
fcom
hlt
jmp
das
or
cmp
movsd
cmp
push
sti
cmp
icebp
aas
xor
adc
test
inc
cmp
xchg
iret
out
inc
or
jb
not
xor
sbb
and
out
daa
cdq
rcr
popa
mov
aam
mov
imul
and
fmul
clc
lock
cwde
jle
insb
bound
add
sar
fcmovne
setalc
jns
cmp
sbb
adc
mov
pop
cbw
adc
sti
xor
jz
fadd
cmp
sahf
cmp
add
or
dec
retf
inc
retn
dec
mov
xor
clc
enter
sub
sbb
sub
rep
test
mov
fimul
jp
mov
nop
mov
push
mov
or
add
lodsb
out
mov
outsd
cmc
cwde
pop
wait
sub
add
sbb
jl
dec
lock
mov
jecxz
inc
sbb
mov
xor
imul
jg
xor
adc
cmpsd
mov
loopne
retf
cli
sub
out
sbb
retn
jmp
lodsb
js
mov
mov
push
das
mov
jnp
adc
xchg
mov
jno
loopne
mov
jmp
cmpsb
fistp
fcmovnbe
in
sbb
sbb
mov
cld
inc
scasd
lodsb
push
js
out
pop
mov
sbb
xchg
fsub
jecxz
cwde
imul
inc
jp
mov
add
pop
jmp
xor
adc
cli
adc
pop
and
fisub
push
push
xor
jnp
imul
cmovz
cmp
push
xor
jmp
pop
movsb
add
loopne
test
movsd
js
jo
jecxz
jmp
rep
movsd
retf
jns
xchg
test
mov
in
retn
inc
mov
lea
fisubr
or
in
enter
cmp
dec
int
and
aas
inc
jge
lock
stosb
dec
cmp
popa
setalc
sub
fadd
out
pop
mov
fmul
cwde
fmul
lds
cld
out
les
sbb
mul
push
insd
pop
mov
out
push
sbb
xchg
jmp
or
lahf
add
jnb
xchg
pop
mov
bound
or
fmul
sahf
fiadd
mov
dec
sahf
popf
lahf
popa
cmp
shr
vpmaxsw
in
fdivr
push
mov
nop
dec
lodsb
xchg
fistp
iret
sub
rcl
cmp
xchg
jmp
jno
aad
fcomp
adc
sub
dec
hlt
jmp
pushf
jmp
pop
scasb
std
cmp
xor
or
or
add
push
das
sub
jnp
push
jo
or
cmp
sar
test
mov
lodsb
pop
rep
push
mov
pop
cmp
jl
cmc
xor
popf
fsubrp
cmpsb
arpl
jl
in
lahf
inc
test
dec
mov
sahf
add
fadd
daa
mov
cld
jl
pop
hlt
mov
call
jge
mov
pop
retn
dec
cld
mov
lodsd
retn
out
adc
mov
out
retn
sub
in
cmp
jmp
push
push
and
mov
movsd
xchg
stosd
mov
adc
jns
std
scasd
jmp
xor
adc
fistp
cmp
jl
fisubr
add
mov
pop
push
stc
push
jle
rep
mov
aaa
shr
call
push
add
xchg
stc
jl
cmp
mov
push
xchg
fsub
icebp
mov
push
std
xor
adc
and
fiadd
in
movsd
fimul
cmp
fnstcw
inc
cmpsb
inc
fstp
leave
xor
wait
xchg
jno
inc
sar
add
pushf
sal
or
push
inc
adc
dec
dec
and
js
push
cmp
jge
add
jns
arpl
loop
adc
outsd
retf
push
inc
cmp
aaa
movlps
out
scasb
mov
movsb
dec
jnz
push
rol
inc
shl
ror
mov
fstp
inc
outsb
jecxz
popa
aad
test
lea
fstp9
push
adc
and
jnz
mov
xchg
sub
std
nop
mov
add
sbb
aad
sbb
lahf
mov
out
rol
and
adc
push
mov
dec
push
mov
pusha
mov
sti
mov
pushf
adc
arpl
xchg
out
adc
or
rcl
fxch4
imul
wait
dec
mov
dec
movsb
cld
dec
inc
xchg
mov
test
xor
sub
ja
adc
in
jz
sub
cmp
fnsave
push
lock
iret
sahf
push
cwde
mov
adc
cmp
add
inc
test
pop
retn
mov
pop
rep
scasd
pop
fistp
call
push
mov
stc
call
sub
push
aam
xchg
mov
pop
or
int
retf
pop
lock
mov
bnd
jz
pop
pop
inc
in
or
sub
mov
out
adc
leave
and
arpl
shr
fsubr
push
arpl
sub
pop
push
in
inc
sahf
leave
dec
cmc
sbb
fiadd
rol
cmp
lock
jnp
cmpsd
or
dec
scasb
push
sbb
add
in
lds
push
or
push
mov
mov
jz
sub
add
sub
lea
xchg
sar
hlt
inc
retn
inc
movsb
push
add
push
loop
aaa
jb
mov
adc
or
into
out
inc
sti
xor
fisub
or
pop
push
dec
call
inc
imul
mov
stosd
adc
adc
xchg
sub
sbb
repne
popf
clc
mov
arpl
dec
das
adc
mov
jecxz
cmc
push
xchg
pusha
mov
jle
retf
hlt
fdivr
sahf
sub
sti
shl
lds
icebp
outsd
and
ja
adc
jnp
jecxz
in
lea
fmul
push
into
mov
adc
push
cmp
int
push
out
out
jnb
push
pushf
pushf
xchg
xchg
push
shr
push
sbb
jmp
xor
push
xchg
lds
lodsb
clc
mov
jle
popa
push
adc
push
pop
dec
push
int
sbb
enter
xchg
add
cli
cmp
iret
push
lahf
inc
aad
test
inc
js
mov
mov
cdq
mov
add
call
hlt
sahf
jge
sbb
rep
cmpsd
lodsd
adc
bound
pop
retn
pop
les
sbb
mov
jmp
or
loopne
popa
imul
sti
mov
call
mov
jnp
inc
rcr
and
insb
adc
in
cmp
xchg
inc
jle
mov
rcr
cld
pusha
xor
dec
mov
rol
xor
sub
rcl
iret
aas
scasb
or
cmc
rcl
xor
mov
sbb
pushf
retn
xor
xor
add
and
pop
hlt
pop
int
pushf
xor
int
adc
not
loop
cwde
mov
dec
cmp
sahf
insd
sub
adc
push
xchg
inc
dec
cmp
loope
mov
pop
js
jl
push
or
pop
mov
xor
outsb
pop
retn
leave
lea
dec
inc
jnp
mov
loopne
lock
retf
dec
pop
or
push
pop
daa
xor
inc
jnb
call
test
leave
pop
int
pop
push
push
push
sbb
pop
test
sub
inc
sbb
mov
pop
dec
fcomp
test
daa
fcom
iret
adc
cli
pop
mov
rcl
loope
imul
sbb
retn
popf
adc
dec
popa
sar
xlat
sub
stosb
mov
test
pop
jmp
rep
xor
mov
aam
add
sbb
jz
add
sub
jb
std
jnb
and
pop
cmp
or
push
sti
push
loop
sub
scasd
daa
and
dec
inc
dec
adc
mov
jge
adc
cdq
loop
and
popf
mov
ja
test
sbb
rcr
jb
jecxz
xchg
xor
dec
fxch4
setalc
push
idiv
sti
fdivp
or
loop
xchg
out
dec
icebp
sahf
leave
xchg
and
and
and
or
inc
stc
xchg
jns
mov
xchg
add
or
adc
jnp
xchg
mov
mov
mov
das
mov
rol
jnp
and
popa
stosd
and
mov
das
pop
iret
sti
popa
test
retf
sar
test
adc
pop
sal
hlt
outsb
mov
and
xchg
jo
jecxz
push
idiv
inc
call
xchg
sub
cmp
repne
xor
adc
or
pop
rep
rcl
mov
imul
jnb
xor
out
test
loopne
lodsd
inc
ja
mov
imul
shr
icebp
xchg
xor
inc
mov
inc
lock
loope
push
push
sub
mov
daa
hlt
aad
mov
outsd
loopne
dec
xor
mov
pop
daa
inc
push
jp
jbe
push
jz
or
push
test
pop
inc
push
xchg
push
fsubr
mov
scasb
mov
into
aad
mov
mov
push
sub
out
shr
pop
int
call
xor
sal
cmp
cmp
sbb
popa
cmp
mov
mov
add
fiadd
pop
rep
and
and
iret
retn
mov
push
jnz
and
sbb
mov
mov
sub
or
jnb
pop
sahf
mov
js
xor
mov
fisubr
sbb
lahf
popa
xlat
cmpsd
or
das
fnstcw
lodsb
fld
jmp
mov
adc
cmp
mov
add
retf
nop
push
inc
cmp
add
pop
call
mov
test
popa
ja
add
dec
mov
push
std
outsd
inc
int
push
std
daa
and
dec
pop
xchg
std
fisubr
sub
mov
inc
dec
jno
add
push
mov
imul
mov
and
pop
xchg
pop
push
in
pop
adc
les
push
lds
into
xor
sbb
test
adc
test
or
xor
xchg
pop
sal
adc
cmp
or
mov
shl
les
or
div
movsb
dec
cld
jg
fidivr
dec
and
outsd
popa
mov
add
jnz
dec
xchg
mov
test
mov
enter
lahf
sbb
mov
inc
push
aaa
inc
cmp
sbb
inc
nop
loop
jns
daa
repne
or
ror
mov
cli
or
popa
xchg
xor
das
or
pop
inc
cmp
pop
lahf
sahf
lodsd
mov
xlat
stc
pop
xchg
jnz
cmpsb
stosb
push
loop
cmp
les
push
icebp
in
lea
dec
loopne
push
and
lodsb
out
icebp
mov
mov
stc
pop
rol
rcl
mov
add
xchg
ja
or
pop
movsb
cli
sub
setalc
push
mov
sbb
outsb
mov
pushf
stc
or
inc
pushf
outsd
add
in
mov
mov
add
xchg
sbb
hlt
sub
xchg
mov
arpl
daa
bound
dec
js
in
jnz
push
add
or
rep
adc
dec
frstor
inc
aad
popf
sbb
jmp
mov
cld
xchg
pop
xor
cmc
out
wait
jp
lodsd
dec
jnb
dec
jno
shl
sbb
dec
cmp
popa
aas
pop
les
pop
sbb
inc
ffree
fistp
xchg
inc
mov
fld
and
call
popf
push
inc
popf
call
movsb
sbb
dec
int
push
arpl
imul
cmc
or
inc
mov
stosd
insd
mov
cmc
lodsb
cmp
add
cdq
push
or
fist
retn
jp
push
xor
pop
jno
in
xor
xchg
pushf
push
cmc
cmp
sahf
or
fst
in
loop
mov
adc
stosd
jl
pushf
fcom
mov
push
cmc
xor
xlat
dec
ficom
mov
fistp
loop
push
jns
lahf
xor
in
dec
jecxz
xor
inc
inc
mov
retn
loop
retn
fiadd
mov
into
cmp
jle
push
or
nop
arpl
test
rsqrtps
inc
pusha
pop
fscale
push
mov
sub
xchg
adc
inc
rcl
leave
jmp
repne
movsd
push
test
jbe
sub
lea
sub
pop
sub
retf
jmp
aaa
mov
scasb
and
or
in
xchg
sub
or
pop
cmpsd
hlt
out
push
hnt
add
or
loopwe
or
mov
push
outsd
clc
mov
push
xchg
mov
adc
das
and
and
daa
bound
sbb
pop
and
retf
popf
in
dec
fidivr
rcl
int
div
rep
sub
pop
mov
inc
pop
repne
push
and
hlt
sar
insb
jz
mov
jp
xchg
cmp
sar
or
pop
bound
xor
jmp
cmpsb
push
push
push
sub
fcmovne
pop
wait
sub
sbb
insd
cmp
xchg
inc
mov
xchg
retn
lea
outsb
or
xor
and
mov
loopne
lodsb
clc
nop
jl
pusha
cmp
or
leave
dec
push
or
cmp
dec
setns
rcl
cmp
adc
insb
retf
loop
imul
ja
aas
mov
xor
adc
mov
and
jmp
repne
fcom
inc
push
cmp
out
xor
cmp
or
adc
js
aaa
inc
adc
add
push
mov
jl
mov
jmp
xlat
aaa
sub
cmp
add
adc
pop
test
test
pop
inc
sar
outsd
push
xchg
aas
add
lea
mov
xchg
ror
jb
fdiv
sahf
cld
push
dec
mov
mov
stc
adc
fucomi
pop
xchg
ja
int
lahf
rol
jmp
loope
add
test
pop
cdq
mov
iret
out
mov
or
mov
mov
aaa
pusha
add
fsubr
mov
jle
lahf
scasd
mov
stosb
test
sub
xchg
in
xchg
retn
xlat
test
daa
arpl
aaa
xchg
jnb
fistp
xlat
adc
pushf
pop
out
pop
jo
fdiv
test
test
xlat
inc
or
mov
or
jnb
xor
pop
xor
test
xchg
clc
mov
pop
mov
cmp
xchg
repne
aas
xchg
in
xor
stosb
dec
in
pop
fdivp
jnb
mov
test
xchg
and
jo
cmc
popa
scasb
sbb
test
xor
ja
scasb
mov
inc
call
add
icebp
mov
jno
push
das
jo
hlt
adc
xor
inc
xchg
setalc
mov
jnp
fild
shld
mov
jbe
or
iret
retn
pop
lodsb
push
movsb
cmp
jmp
add
mov
mov
aam
and
nop
scasb
jnb
push
in
or
mul
mov
das
fxch7
loop
xor
push
adc
shr
or
or
xor
nop
mov
pop
mov
xor
in
loope
cmp
fsub
mov
jnz
xchg
jmp
lahf
int
jb
ror
sbb
shr
cmp
push
xchg
icebp
jmp
sub
mov
lock
lodsd
repne
fcomi
add
xchg
lds
jmp
jecxz
wait
sub
mov
and
stosb
push
sbb
sub
mov
lodsb
add
jmp
xor
sbb
xchg
out
inc
sahf
shr
inc
inc
int
mov
stosb
cmp
retn
push
sahf
test
pop
push
pop
mov
cmpsb
and
dec
int
leave
xchg
into
xor
lds
jno
dec
sub
call
xchg
mov
mov
sbb
rol
and
jb
push
scasb
xchg
and
sbb
inc
insb
sbb
mov
imul
xchg
xchg
xor
test
cmc
and
pop
imul
movsb
or
cmp
push
or
cmpsd
or
pop
test
or
xchg
inc
add
adc
dec
into
inc
xor
push
add
aam
out
sub
pop
xchg
push
call
jge
add
cmp
sbb
jecxz
push
daa
fmul
push
push
mov
out
lahf
xor
movsd
push
scasb
movsd
stosd
std
jns
scasd
ror
lea
mov
push
push
and
call
cmp
cmp
xor
jmp
sbb
xor
mov
xor
or
cld
cmp
lock
jz
push
mov
pusha
mov
mov
into
mov
mov
sub
jecxz
xchg
out
and
sbb
cmp
adc
or
bound
ja
wait
fstp
pop
ja
or
inc
push
loopne
sahf
sal
lds
push
push
push
jmp
stc
mov
jno
and
xor
rcl
daa
lock
push
add
fistp
dec
mov
rep
jz
mov
adc
arpl
test
adc
lea
lock
cmpsb
clc
jnb
adc
mov
lahf
scasb
jbe
mov
mov
inc
lock
sub
in
cmp
retf
mov
rcr
jmp
popa
and
sub
adc
mov
stc
stc
cmc
adc
sub
mov
arpl
cmp
pop
call
dec
scasd
test
add
pop
mov
cmp
shr
loopne
xchg
cli
and
dec
push
push
add
daa
dec
add
mov
call
adc
outsb
adc
sti
jle
xor
and
inc
cmp
jmp
lds
outsb
in
push
or
push
push
dec
xor
push
cdq
jnb
dec
cmp
jp
outsb
in
xchg
jg
wait
cli
cmp
adc
mov
or
into
dec
clc
fstp1
push
fcom
retn
push
xchg
push
imul
dec
mov
paddsw
jnp
and
test
insd
pop
sbb
sub
mov
nop
or
std
dec
mov
jmp
loope
das
setalc
add
jmp
pslld
iret
lodsb
mov
sub
jbe
push
pop
or
xor
fdivr
xchg
pop
add
jz
adc
out
cmp
pop
loopne
cli
mov
sti
xchg
pop
adc
mov
mov
push
xchg
jo
mov
insb
dec
inc
retf
adc
xor
fstp
pop
retn
leave
dec
out
enter
adc
test
pop
mov
and
movsb
xchg
fdiv
fld
xchg
push
aam
cmpsd
add
and
xor
xchg
adc
jnp
cmpsb
out
push
fist
push
adc
outsd
idiv
shl
sub
out
pushf
jnb
add
adc
mov
pop
sbb
in
nop
inc
sub
or
sbb
outsd
add
pusha
popf
xchg
jnp
mov
pop
pop
lodsb
cmp
push
add
add
xchg
push
mov
xor
inc
test
call
mov
dec
push
mov
adc
jnb
in
xor
insd
mov
dec
stosb
push
mov
and
pop
insb
mov
inc
jnz
mov
rcl
mov
push
mov
sub
jmp
mov
repne
jb
test
and
cmc
in
sub
xor
shl
push
sti
dec
pop
pop
cmp
push
movsd
adc
iret
insb
push
inc
js
repne
imul
rcl
daa
cwde
lds
add
mov
xor
rcl
int
xor
sub
push
pop
pop
pop
dec
repne
dec
jmp
ja
jl
clc
loop
int
outsb
dec
cmp
push
mov
or
jbe
enter
inc
cmpsd
xchg
call
mov
sbb
or
rol
cmp
in
jz
push
out
and
lodsb
mov
mov
insb
clc
mov
mov
movsd
push
adc
and
jle
mov
lodsb
mov
xor
lea
insb
inc
ja
shr
retf
test
cdq
lodsd
ht
jns
hlt
fstp
imul
sub
push
and
les
xor
push
or
pop
mov
jz
cli
inc
push
out
mov
sti
bswap
setalc
xchg
adc
or
jo
in
pop
adc
adc
wait
cdq
cdq
hlt
sub
popf
mov
cmpsb
test
sub
setalc
mov
or
sbb
cmp
icebp
xchg
fidiv
test
push
hlt
dec
adc
cwde
jns
add
adc
inc
fsubr
wait
outsb
jmp
or
adc
aas
and
xor
pop
mov
pop
inc
cmpsb
scasb
in
aad
jno
lodsb
sbb
out
sbb
adc
loope
jl
inc
xchg
stc
int
sar
jb
enter
loop
in
sti
iret
and
adc
test
and
not
adc
inc
mov
xchg
dec
call
xchg
xchg
frstor
sub
adc
mov
jmp
test
neg
sbb
mov
mov
pop
add
stosd
dec
jno
sbb
xor
mov
das
mov
js
stosd
xchg
and
jb
vmptrld
xor
and
adc
mov
lodsd
out
aas
jno
push
cmp
jmp
inc
adc
jl
jbe
dec
aas
jno
xor
jnz
mov
scasd
pop
xor
imul
mov
not
mov
retf
test
jnp
jbe
aas
inc
push
mov
shr
dec
retf
cwde
outsb
sahf
pushf
repne
or
aam
push
insb
or
add
sub
pop
loop
aas
mov
movsd
or
mov
sub
pop
std
sahf
mov
mov
mov
int
setalc
xchg
loopne
mov
adc
imul
inc
cmp
mov
xchg
sal
cmp
outsb
repne
dec
mov
push
adc
sahf
test
call
jns
push
lds
cmp
push
adc
push
push
add
sub
push
jz
mov
dec
mov
mov
leave
fnsave
aaa
pop
xchg
wait
rcr
cmc
jnb
mov
xchg
push
aaa
xor
cmp
das
jnb
insb
mov
movsd
loop
jmp
push
mov
dec
push
in
iret
xor
cmp
pop
loope
push
hlt
retf
fild
sbb
rcl
mov
pushf
push
dec
xchg
lodsd
sub
outsb
sbb
mov
sbb
in
xor
inc
pop
retf
mov
xbegin
hnt
push
fcmove
popf
call
jmp
or
jmp
cli
and
bnd
mov
retn
mov
cmp
mov
setalc
pop
jnz
mov
push
dec
sbb
dec
insd
pop
xor
imul
xlat
rol
sbb
mov
insb
xor
xchg
jmp
out
dec
scasb
repne
pop
movsd
test
cmp
aad
ficomp
add
in
leave
add
iret
adc
ja
dec
popa
fdivrp
fdiv
sysenter
mov
lock
xchg
push
inc
mov
dec
adc
xchg
retn
sbb
dec
pop
mov
xchg
mov
adc
mov
lahf
jl
retn
mov
aam
xlat
or
xchg
popa
shl
adc
cmpsd
mov
pop
jg
call
int
scasb
jl
inc
test
vpandn
xor
xchg
pop
pop
jp
fdivrp
xor
inc
inc
jmp
add
inc
xor
dec
bnd
jb
cmp
wait
mov
mov
loop
outsd
xchg
pop
retn
xchg
xlat
mov
push
sub
cmpsb
and
inc
mov
out
sar
fst
shr
lodsd
js
inc
cmp
pop
imul
jnb
push
dec
mov
wait
sbb
test
mul
push
stosd
jecxz
test
or
dec
cld
dec
push
inc
pop
mov
test
mov
pushf
out
js
sub
pop
xor
pop
scasd
inc
jno
pushf
push
jg
scasd
insb
fcomp
int
daa
out
aam
out
lds
out
ror
sbb
mov
rep
cwde
jnb
mov
rep
sub
aam
or
xchg
hlt
loope
push
xchg
cdq
jecxz
pushf
mov
push
pop
cld
pop
sub
popf
pop
in
pop
sbb
or
inc
leavew
rcr
fistp
aaa
icebp
retn
push
jecxz
inc
wait
or
xchg
leave
mov
jns
add
pop
js
out
jmp
xchg
adc
xchg
jl
stosd
xor
in
rcl
sbb
sti
jl
mov
setalc
wait
sar
adc
outsd
inc
inc
sti
jge
into
mov
mov
aad
aas
add
mov
push
cdq
fcom
les
pop
retf
cmp
sbb
add
mov
adc
sbb
xor
adc
or
push
cmp
push
out
bound
add
and
pop
leave
out
or
ja
jnb
xchg
xor
sub
adc
sahf
inc
cmp
retf
rol
sbb
or
outsb
inc
cmp
jz
sbb
sub
jmp
xchg
cmc
in
bound
push
aam
xchg
mov
jo
mov
jno
inc
test
fisub
movsb
mov
fxch
and
sbb
sbb
mov
cmpsb
loopne
pop
setalc
or
inc
inc
clc
mov
adc
adc
xchg
jecxz
dec
push
xchg
pop
test
pushf
sbb
mov
test
or
inc
inc
jl
inc
out
inc
mov
out
lea
inc
pop
inc
mul
out
fisub
xchg
aam
xchg
dec
call
dec
cmp
mov
jle
movsb
add
out
retn
mov
retf
stc
dec
dec
bnd
xor
mov
mov
and
enter
mov
mov
adc
loopne
dec
lea
adc
jns
mov
setalc
push
mov
sub
shr
mov
mov
lodsb
xchg
sbb
mov
mov
jge
rcr
and
mov
mov
daa
xchg
js
mov
push
and
mov
das
inc
cmp
xor
cmp
xor
test
test
mov
cmp
ja
int
jp
xor
push
add
retn
retn
xor
fdiv
sub
or
retf
aaa
mov
add
cmovbe
popa
add
shr
jz
insd
push
test
pop
push
mov
setalc
test
inc
sub
cmp
sub
or
retn
and
dec
test
mov
add
lodsd
and
into
dec
adc
sub
test
dec
xlat
dec
push
mov
mul
loope
movsd
mov
out
and
enter
outsb
sub
sbb
pop
call
mov
retn
xor
add
cdq
shl
dec
icebp
xchg
xor
fisttp
pmaxub
or
xor
wait
movsb
lahf
mov
and
sahf
push
fcomp
cmp
mov
mov
cmp
push
test
sub
retn
out
mov
jo
cmc
mov
jnp
adc
jnz
aad
and
and
movsb
in
nop
punpcklwd
sub
cmpsd
push
adc
jl
mov
lds
or
sbb
bound
add
movsb
clc
push
nop
outsd
sub
in
pop
pop
jge
call
add
out
test
sbb
fisttp
lock
fsubr
aaa
adc
arpl
dec
rcl
mov
sbb
xor
mov
xor
xor
jge
jns
push
sti
fistp
mov
lodsb
in
test
mov
xchg
dec
push
mov
xor
mov
test
mov
mov
xchg
retf
dec
pop
xchg
sti
outsd
fistp
mov
mov
xor
dec
or
stosd
push
xor
pop
xchg
jmp
push
push
and
sbb
mov
inc
adc
fdivr
std
inc
mov
test
arpl
popa
adc
pop
xor
leave
mov
or
in
sahf
retn
mov
or
pop
sub
and
cmp
add
pop
adc
mov
mov
xchg
push
inc
and
in
adc
cwde
mov
xor
sub
nop
fstp
into
sbb
cmpsb
xchg
add
jmp
dec
out
pop
lahf
cmp
stosb
popf
xor
push
ficom
out
mov
out
stosb
mov
jmp
test
scasb
mov
retf
inc
pop
pop
mov
fstp
push
fucomp
xchg
pop
loope
enter
ficom
add
fadd
test
jbe
push
pop
shr
iret
or
dec
mov
sbb
cmp
shr
pushf
inc
jb
stc
dec
in
dec
cdq
inc
pop
push
jmp
dec
sar
cmp
loope
sub
mov
xor
ja
inc
dec
jz
out
loopne
add
inc
xchg
cdq
setalc
mov
in
pop
retn
das
cmc
pushf
xor
js
sub
popf
add
outsb
popf
dec
lahf
cli
fdiv
add
push
and
xchg
pop
mov
lds
jg
mov
jbe
inc
pop
xchg
js
adc
pop
xchg
cmp
outsb
imul
jge
lodsd
xor
sbb
outsd
mov
dec
shr
inc
test
or
xchg
lock
or
test
push
popa
wait
inc
inc
fidivr
cmpsb
xor
mov
outsb
add
lodsb
cmp
add
cmpsb
jle
ror
add
mov
jg
jno
fisttp
push
adc
fdivrp
out
push
sub
push
les
fidiv
call
add
fld
cmp
mov
adc
imul
rsm
repne
jl
test
dec
push
sbb
sub
or
push
fucom
in
mov
xchg
or
sar
add
setalc
xor
stc
lodsd
jge
sub
jnz
mov
xchg
retn
mov
push
cmp
jb
pop
lahf
jl
bound
pop
xchg
push
sti
add
dec
call
jle
dec
adc
inc
repne
dec
setalc
jmp
leave
fdivr
loopne
imul
call
arpl
nop
cdq
lahf
dec
fcomp
aam
daa
retf
xlat
push
push
mov
xchg
test
or
push
inc
icebp
jg
jns
popf
push
mov
test
mov
jl
out
mov
jz
inc
and
dec
mov
or
and
mov
enter
scasb
sti
movsd
call
inc
retf
stosb
out
inc
adc
mov
popf
movsd
and
bound
push
inc
mov
retn
lahf
push
mov
retf
push
and
cdq
inc
stosd
add
inc
sal
out
sbb
retn
jmp
mov
adc
sti
and
ja
daa
xlat
retf
jnp
mov
retf
jle
and
retn
fcmovnbe
rcl
leave
pop
xadd
pop
outsd
aaa
out
shr
dec
push
lock
cdq
arpl
imul
setalc
stosd
out
arpl
cmp
daa
scasd
aam
imul
add
test
test
jmp
mov
push
push
xlat
movsb
rcl
rcl
cmp
inc
mov
sbb
xchg
retn
and
setalc
inc
pop
test
pop
cmp
xchg
cmpsd
inc
jbe
call
aam
fisttp
and
hlt
sar
out
adc
test
leave
insb
xchg
call
out
outsd
jb
and
sbb
aam
sub
xor
aaa
add
mov
lds
scasb
out
xchg
sar
mov
dec
xchg
add
loopne
or
loopne
pop
sub
loope
add
adc
pop
jecxz
test
inc
sub
jnz
dec
jbe
mov
inc
xor
xchg
push
mov
or
pop
movsb
cmp
pop
lodsb
sub
add
inc
push
xchg
sahf
xchg
push
in
outsb
push
xchg
bound
retf
jmp
pop
xchg
or
jnz
adc
enter
insb
sub
lodsb
mov
test
dec
aam
clc
test
dec
pop
out
out
xor
dec
imul
push
cmc
into
scasb
and
iret
stc
cld
xlat
pop
test
cmp
sub
cmp
lodsd
shufps
iret
xchg
cdq
icebp
pop
cmp
xchg
mov
cmpsd
sahf
push
and
in
dec
jo
lock
and
dec
push
call
pop
pop
xor
into
xor
fmul
fcomp
inc
ja
xchg
mov
dec
jge
jns
adc
dec
ja
add
sahf
pop
xchg
xchg
adc
call
push
xor
sahf
sub
popf
pop
pusha
inc
xor
dec
js
sub
std
into
test
xor
adc
imul
push
stosb
mov
cmpsd
jnz
cmp
and
daa
sub
jp
out
xchg
push
xor
test
retf
cmp
wait
sbb
or
xor
push
pop
cld
imul
mov
retn
or
movsb
test
loope
hlt
outsb
sal
mov
lodsb
retn
adc
or
mov
add
adc
mov
psadbw
mov
outsd
xor
ror
sar
jp
xchg
or
scasb
jns
mov
clc
int
mov
and
pop
xor
fdiv
xchg
imul
pop
imul
test
lahf
insb
mov
popa
dec
cmpsd
popf
scasb
push
xchg
sbb
fldenv
cld
arpl
popf
dec
iret
adc
cmp
sbb
xchg
jle
cmpsd
cmp
push
cwde
cld
fstp
les
ficom
push
lock
push
jns
sub
clc
or
dec
arpl
retn
mov
pop
xchg
mov
xor
ficom
xchg
ror
mov
mov
or
adc
retf
arpl
or
inc
in
shl
mov
dec
stosd
jno
pop
popf
inc
int
das
xchg
sub
dec
cmc
test
or
mov
ja
lodsb
fiadd
mov
loope
sbb
ht
jnb
mov
dec
aad
wait
dec
jle
into
and
dec
jge
pop
xchg
push
dec
fbld
mov
inc
inc
xor
adc
pop
mov
push
push
pop
xchg
imul
jp
iret
ja
pop
xor
imul
push
jmp
push
and
inc
repne
popf
mov
cdq
mov
pop
daa
test
push
sub
out
insd
mov
js
daa
in
into
lodsb
cmp
lahf
or
pop
jo
xor
mov
out
push
inc
dec
call
sbb
cwde
popa
outsb
stosb
push
push
adc
push
adc
add
mov
mov
and
setalc
sal
xor
leave
test
wait
push
xchg
retf
mov
out
out
mov
mov
ja
sub
lahf
xor
mov
test
adc
jnp
cmc
icebp
pop
jmp
jp
lodsb
push
or
jle
dec
pop
mov
inc
mov
leave
mov
setalc
mov
cmp
rol
xor
pop
aas
out
std
push
sbb
call
and
add
retf
add
leave
mov
daa
popf
push
pop
aad
mov
icebp
lds
mov
into
jmp
cld
lahf
pusha
mov
jb
dec
jmp
pop
mov
aad
or
adc
sub
cmp
push
sub
sbb
test
push
insb
aam
retf
retn
icebp
jg
or
cmp
add
lodsb
inc
psubb
adc
not
jbe
outsb
sbb
retn
das
insd
xchg
setalc
mov
push
cwde
add
push
iret
stosd
xor
jb
sub
jmp
sub
xchg
xlat
pop
daa
in
in
cwde
test
rol
pop
xor
stc
xor
dec
xchg
popf
mov
sub
adc
sub
adc
pop
xchg
fadd
sbb
fcomi
scasb
dec
outsb
push
sub
inc
scasd
outsb
cld
push
dec
xchg
lodsd
jg
cli
lahf
and
test
scasb
ror
scasb
xchg
sbb
mov
int
push
jnb
bound
push
movsd
pop
push
mov
retn
xchg
std
sbb
jg
clc
inc
mov
dec
mov
retn
pushf
xchg
lea
or
enter
xchg
sbb
pop
aad
fsubr
leave
mov
or
fabs
loopne
call
pop
fdivp
mov
inc
xchg
push
push
sub
push
popa
pop
scasb
inc
fist
push
in
fcomp
push
xchg
jbe
call
jge
call
xchg
mov
imul
loope
test
mov
aas
push
and
or
adc
leave
jnb
mov
shl
popf
sar
aad
ja
call
dec
frstor
jnz
mov
push
push
lock
sbb
lds
sub
test
daa
sar
xchg
push
movsb
jmp
xchg
jmp
out
daa
sti
retf
mov
jg
scasb
xchg
aas
test
inc
pushf
out
cvtps2pd
push
jl
jg
aas
mov
adc
cwde
mov
scas
ficomp
xor
iret
daa
mov
add
xlat
mov
fiadd
fisub
add
xchg
push
inc
insd
mov
test
popf
fdiv
cdq
mov
adc
push
lahf
adc
call
xchg
frndint
xor
cdq
pop
push
pop
push
mov
aam
popf
push
xor
cmpsd
inc
sub
outs
pushf
fiadd
inc
mov
adc
xlat
cmpsb
jnp
retn
sub
cwde
test
cmc
mov
adc
stc
pop
in
leave
rep
test
cmp
push
jb
std
xor
inc
lock
setalc
push
into
pop
fadd
movsd
arpl
xor
sub
add
dec
inc
out
int
div
repne
adc
add
push
xchg
aas
rep
sbb
jmp
xchg
scasd
cmp
lodsb
xchg
xor
out
xor
stosd
aaa
mov
mov
add
mov
fucomip
add
push
int
retn
inc
lahf
and
fsub
fsub
mov
stosd
adc
sub
mov
xlat
adc
std
dec
lodsb
sub
mov
adc
daa
iret
add
call
sub
pop
mov
scasb
sbb
inc
sub
cmp
fcmovb
inc
pop
or
jbe
cld
dec
pop
sub
add
cmpsb
mov
in
add
sbb
cmp
and
mov
xchg
pop
xlat
or
in
xor
mov
jecxz
push
mov
sub
inc
inc
jns
sub
loopne
or
cmp
cmp
xchg
retn
dec
daa
push
insb
mov
or
retf
aaa
lahf
dec
xchg
repne
dec
push
retf
inc
aaa
repne
sub
cmp
in
insb
sar
aam
out
or
xchg
mov
sub
mov
and
retf
pop
pop
std
pop
push
push
jg
add
inc
not
jb
jnp
iret
loopne
jnz
cmp
jg
retn
loop
xor
xor
loop
add
nop
xchg
mov
sbb
das
dec
stosd
sti
xchg
and
pop
call
fsub
dec
pop
daa
and
into
and
pop
inc
daa
cmp
test
jno
scasb
mov
aas
arpl
cmp
test
aaa
icebp
out
bound
mov
and
or
add
and
scasd
cmp
add
add
stosd
push
movsd
jo
xor
fxch7
mov
push
popa
cmp
dec
leave
int
daa
test
xchg
cdq
push
mov
retn
xchg
or
aad
repne
sbb
push
cmpsd
jns
mov
mov
fbld
stc
push
pushf
dec
inc
movsb
xchg
mov
and
sub
lodsd
aad
add
cmp
bound
jns
stosb
mov
push
push
dec
mov
jno
dec
loopne
stc
int
and
sar
pop
jno
add
push
or
or
mov
popa
pop
mov
mov
mov
inc
pop
xchg
dec
push
or
lodsd
cli
bound
loop
cmc
movsb
mov
adc
stosb
adc
div
xor
sub
lea
js
jbe
adc
imul
sar
and
fadd
aad
inc
lds
jecxz
daa
sbb
cmp
cmp
sbb
jz
pop
enter
cmp
mov
and
pop
not
jno
xor
xchg
dec
inc
inc
dec
xchg
out
test
or
mov
pop
aaa
mov
jnp
lodsd
dec
leave
or
aad
js
arpl
fnstcw
mov
popa
inc
setalc
mov
fstp
push
pushf
sub
cdq
popf
jno
test
aad
into
aas
int
mov
sar
sub
cmp
push
xchg
daa
mov
scasd
rep
retf
pop
mov
scasd
jb
iret
popf
sahf
pop
mov
imul
xor
jecxz
and
jecxz
fidiv
mov
popf
in
jo
dec
jmp
call
or
retn
retf
pusha
pop
test
daa
pushf
dec
xchg
push
leave
xor
enter
and
xlat
shr
xor
fldcw
js
pop
js
push
sub
xchg
mov
insd
and
add
cmovb
cmp
dec
mov
stosd
cmp
cmp
movsb
jnp
mov
div
pop
sbb
cmp
adc
loopne
mov
fst
nop
push
stosd
sti
std
fisttp
das
mov
xor
stosd
rcl
aaa
pop
or
or
call
neg
wait
rol
sub
lds
sub
cmp
and
xor
sbb
cdq
dec
xor
cmp
retf
movsb
mov
cmp
loopne
out
sti
test
clc
fcomp
mul
inc
test
in
xchg
or
fdiv
pop
wait
test
push
cmp
pop
jl
sub
neg
fist
xchg
dec
add
aad
dec
loop
sar
retn
in
dec
stosd
retnw
xchg
pop
rcr
jnz
stc
clc
pop
and
aaa
insd
mov
push
jmp
pop
sbb
pop
wait
push
insd
movntq
sub
or
push
sbb
mov
mov
insb
sub
daa
mov
cmpsb
push
fdiv
ror
jg
xor
call
xor
enter
push
push
fistp
push
add
cli
mov
in
pop
adc
adc
dec
arpl
sub
lea
idiv
sahf
add
wait
fiadd
mov
in
popa
inc
mov
mov
call
mov
mov
retn
or
and
mov
sub
insd
stosd
popa
lock
cdq
mov
ja
retf
pop
mov
push
jmp
and
sub
test
in
xchg
cwde
jge
jmp
lodsd
aas
lods
sub
xor
cmp
pusha
inc
adc
or
dec
mov
pop
xchg
insb
mov
mov
pop
pop
jl
jmp
cwde
in
retf
push
std
jle
xlat
and
inc
xor
std
mov
test
mov
mov
out
cmpsd
lodsd
add
jno
jnp
xor
pop
sar
or
inc
adc
sbb
dec
and
into
xchg
in
mov
jnb
dec
test
mov
out
push
in
push
sub
aam
fild
outsd
push
sbb
push
in
xchg
sbb
mov
int
sub
or
push
in
retf
stosd
fprem
in
aaa
push
fadd
mov
retn
hlt
aaa
rol
sar
xor
mov
aad
or
xlat
mov
fstp
jnz
jnb
mov
sbb
in
cmp
les
jnb
adc
pop
jge
ja
jmp
pop
sbb
adc
sub
loop
add
hlt
mov
lock
push
retf
mov
cld
sal
wait
mov
xchg
push
xchg
lds
adc
mov
call
adc
jp
xlat
cmpsb
xchg
icebp
mov
pop
or
sbb
xchg
cmc
mov
shl
outsd
cmc
rep
and
pushf
cmpsd
inc
cmp
and
mov
enter
shr
adc
sub
xchg
cwde
mov
mov
push
xor
inc
clc
xor
mov
into
retn
mov
repne
cmp
stosb
inc
push
cmp
and
add
pop
retf
sub
lodsd
cmpsb
retf
or
push
or
retf
adc
sbb
pop
pop
mov
or
add
adc
clc
jnp
fmul
sahf
cld
retf
xlat
xor
test
dec
pop
jnp
sal
lahf
clc
xchg
retn
dec
xchg
cmp
cmp
cmp
ja
les
dec
cli
nop
test
jg
add
setalc
pop
push
insd
mov
cli
cdq
cmp
stc
or
mul
rep
xchg
inc
xchg
fcomp
mov
inc
jo
out
add
push
rcr
int
jnb
jge
mov
loopne
cmp
hlt
out
dec
cdq
lock
leave
jmp
jnp
fldcw
and
int
std
push
fild
or
dec
test
push
popf
mov
sub
sub
mulps
push
push
sbb
mov
sbb
dec
cmpsb
popa
test
mov
jbe
and
push
push
add
hlt
mov
jmp
adc
iret
js
in
pop
outsb
loopne
aad
cmp
mov
adc
lock
fcom
sub
pusha
pushf
out
xor
jno
or
sbb
push
mov
out
cld
fsub
pop
std
sub
push
push
mov
dec
stosd
xchg
sbb
push
add
xchg
wait
and
xchg
cmc
cmp
sub
outsd
add
mov
sub
and
clc
popa
adc
sbb
mov
rep
and
mov
cli
mov
adc
faddp
jecxz
mov
push
outsb
jg
inc
push
and
xor
xchg
lock
mov
push
jb
das
xor
shr
mov
test
jno
add
loope
loope
inc
scasb
inc
dec
jb
aaa
in
dec
and
cwde
sub
loopne
rol
pusha
xor
retf
pop
fstp1
das
and
mov
rcr
test
sar
rep
adc
ja
sbb
hlt
push
repne
sbb
stosd
lds
mov
add
and
inc
setalc
jbe
and
xchg
fidivr
dec
aaa
xchg
push
xchg
dec
das
push
sbb
rcr
pop
jnb
jns
adc
adc
and
inc
add
jmp
pusha
xchg
mov
cmp
dec
mov
sub
mov
xchg
cwde
adc
xchg
xlat
jl
sbb
sbb
jns
lahf
mov
retf
lds
imul
cmp
out
rcl
push
jns
cmp
into
cmpsd
pop
inc
jecxz
out
jp
mov
setalc
movsd
sbb
inc
mov
pop
in
lock
das
xchg
pop
jp
in
push
dec
mov
mov
setalc
dec
test
retf
inc
mov
pop
stosd
push
loope
insb
pop
int
push
out
outsb
xlat
cdq
push
nop
std
stosb
inc
push
loope
pandn
sub
std
jmp
and
setalc
sub
lock
push
and
pop
jecxz
xchg
mov
jnp
inc
xor
out
bnd
add
cmp
cdq
jnp
adc
dec
dec
add
js
inc
mov
out
add
fbld
push
ja
into
mov
and
add
xchg
aas
in
sub
xor
adc
jmp
popf
enter
stosb
push
push
movsb
mov
mov
xor
adc
jp
hlt
test
dec
cdq
sbb
xchg
or
inc
add
jno
loopne
wait
rep
pop
cmp
adc
mov
push
repne
jecxz
outsb
fcomip
and
pop
dec
and
scasd
sub
inc
sbb
adc
retn
push
mov
enter
retn
mov
in
cdq
push
pop
push
adc
adc
inc
enter
popa
js
pop
add
push
mov
pusha
mov
jz
push
cmp
sub
jz
or
push
leave
cmp
jz
popf
or
div
cmp
pop
push
test
xor
test
cmp
pop
mov
cmp
add
pop
imul
jmp
adc
mov
xchg
or
and
movsb
popf
jbe
mov
popf
pushf
bound
xor
lodsd
dec
xor
inc
out
sbb
dec
jnb
rol
add
retn
fcomp
sub
sahf
pop
sal
dec
sbb
enter
add
add
cmp
setalc
rep
lock
shr
rcl
mov
xchg
jmp
call
insb
jecxz
lock
popf
xchg
out
das
inc
cmpsb
dec
sub
call
dec
mov
adc
and
add
xchg
movsd
call
mov
mov
sbb
hlt
and
inc
push
frstor
sal
dec
pop
add
cmp
push
cli
fsub
pop
mov
dec
dec
shr
movsx
daa
xchg
mov
mov
inc
sti
xor
xchg
pop
sbb
mov
sub
sbb
pop
push
push
icebp
wait
or
rol
pop
scasd
push
fidiv
jge
fisttp
imul
add
xchg
mov
xchg
jno
dec
movsd
test
jp
xchg
xor
xchg
mov
fidiv
xchg
adc
mov
dec
sub
xlat
sti
sub
jns
hlt
out
fisttp
sub
outsd
jmp
arpl
or
int
jge
sbb
push
or
pop
call
clc
fdivr
jnb
sbb
lodsd
jnb
mov
and
lodsd
setalc
cwde
push
fcom
jle
xchg
xor
adc
setalc
dec
mov
xchg
std
test
mov
adc
jno
fcomp
test
nop
cwde
imul
cmpsb
mul
imul
fucomp
push
xchg
mov
test
frstor
inc
cmpsd
scasd
push
cdq
add
sahf
movsd
pop
jecxz
test
xchg
sbb
sub
push
outsb
add
jle
push
fcmovnbe
mov
pop
jnb
insd
jle
pmaxub
and
ja
icebp
sar
rol
imul
mov
adc
cmp
stosd
push
push
sbb
adc
push
mov
rep
xchg
fimul
scasb
adc
jno
fild
adc
jmp
push
push
lodsd
jp
stosb
pop
inc
in
mov
inc
fcmovnbe
xlat
retf
dec
adc
dec
push
rcl
sti
dec
mov
imul
pop
add
and
out
jnz
setalc
fnstsw
insb
icebp
jge
jmp
mov
sbb
wait
inc
mov
scas
inc
test
cmp
nop
arpl
add
retf
push
mov
push
cld
dec
ror
rcl
inc
fadd
adc
push
mov
pushf
out
and
sub
cmp
mov
or
and
mov
mov
cmp
and
and
jo
jmp
xchg
jg
push
pusha
push
sub
jbe
add
pop
mov
pop
lodsd
call
lodsb
or
in
push
and
jmp
test
in
push
dec
leave
out
fistp
insb
retf
pop
or
iret
inc
mov
sub
pusha
push
jnz
lock
rep
xor
mov
inc
mov
into
push
pusha
scasb
jns
xor
pop
and
insb
iret
dec
in
inc
inc
xor
inc
mov
loopne
add
std
out
push
jnz
sbb
std
jns
fild
cmp
sti
xlat
cmp
xchg
daa
push
lahf
sub
jl
jecxz
jno
into
mov
push
setalc
pop
pop
xchg
mov
dec
push
jb
wait
jl
or
out
pusha
xchg
wait
mov
pop
rcl
or
mov
sbb
cmp
in
dec
scasd
mov
pop
jge
pushf
push
sbb
push
wait
aaa
scasd
cld
mov
test
or
inc
cmp
xor
not
push
icebp
and
in
inc
movsd
std
dec
inc
ror
lds
popf
push
icebp
and
mov
stc
not
fldcw
repne
add
adc
push
fcomp
jo
leave
cwde
cmp
imul
loopne
inc
push
mov
js
aad
mov
fld
aad
mov
mov
jge
mov
sbb
sub
adc
mov
sbb
mov
std
xchg
fucomip
xchg
in
pop
outsd
into
jmp
xchg
imul
rol
mov
xchg
adc
sbb
adc
xor
mov
mov
jl
stosb
inc
hlt
into
xchg
loope
pop
nop
dec
add
adc
imul
xchg
cld
pop
jz
lock
dec
popf
out
or
mov
sub
test
jnz
mov
xor
adc
lodsb
inc
std
adc
cmp
and
xchg
wait
out
inc
mov
inc
pop
sub
mov
stosd
sub
inc
in
mov
or
outsb
add
cmpsd
shl
fsubr
mov
lock
add
add
test
les
in
lodsb
dec
add
cmpsb
popf
mov
fstp9
xor
scasd
xchg
sub
jbe
mov
push
dec
pop
fild
add
das
dec
jmp
inc
jge
cmp
jecxz
fsubp
test
pop
sar
arpl
and
inc
arpl
in
xchg
sti
test
insb
loopne
cdq
mov
cdq
lodsd
arpl
add
cli
adc
into
fld
jb
sbb
pmaxub
mov
xor
pushf
cmp
outsb
retn
test
lahf
push
sahf
iret
les
adc
retf
add
add
add
add
add
retf
jmp
push
jmp
stosb
jmp
retf
cld
sti
std
lds
retf
retf
retf
icebp
fcom
retn
pusha
call
pop
inc
push
retn
