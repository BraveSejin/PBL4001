push
call
retn
retn
mov
cmp
dec
cwde
or
mov
inc
mov
cmp
xor
sahf
and
sub
and
lodsb
loope
retf
clc
cmp
pop
mov
inc
fdivr
push
add
push
sar
add
xchg
xchg
inc
dec
mov
xor
call
daa
add
or
and
test
rcl
loope
bound
pop
fdivr
sub
sal
pop
mov
dec
and
cwde
rol
add
lea
int
dec
std
xor
sbb
in
push
insb
cmpsd
mov
sub
mov
clc
dec
xchg
insb
add
pusha
mov
dec
inc
stc
pop
jnz
scasb
sbb
in
dec
jl
cwde
mov
cli
push
mov
cmc
adc
wait
mov
and
mov
aad
and
xchg
xor
call
lea
int
in
outsd
sbb
mov
call
outsb
push
add
cmpsd
push
mov
clc
add
not
fist
retf
cmc
mov
call
inc
and
mov
bound
nop
push
cmp
test
add
push
retf
pop
out
arpl
and
neg
ht
inc
inc
mov
ror
test
mov
adc
dec
imul
imul
cmp
sbb
pop
outsd
cmp
dec
out
test
pop
test
push
push
scasd
or
lodsb
popa
mov
cwde
hlt
arpl
mov
jmp
cmp
inc
mov
imul
aaa
mov
add
pop
int
movzx
xlat
dec
adc
sbb
sub
repne
jbe
movsd
movsd
mov
xchg
int
push
pop
call
scasd
jp
adc
fcomp
mul
pop
imul
daa
mov
retf
xchg
xchg
push
repne
arpl
out
mov
inc
scasd
push
rep
or
aas
sti
dec
inc
add
in
or
stosb
out
add
fisub
daa
or
pop
cmp
pop
mov
xchg
mov
jno
push
or
sbb
sub
and
jbe
aas
pop
nop
and
cli
loope
sub
pop
inc
mov
jmp
jns
pop
sub
push
cmp
popa
sbb
inc
jbe
call
scasb
xor
dec
xor
push
mov
fmul
retn
scasd
push
retn
retn
retf
dec
sub
loope
xchg
retn
pop
movsb
retn
loop
push
daa
mov
test
mov
inc
loope
adc
call
cld
xchg
sub
aas
mov
setalc
std
lodsd
or
xchg
inc
pop
dec
ror
mov
mov
pop
xor
mov
lodsd
add
lodsd
pop
wait
in
wait
dec
push
push
enter
test
dec
std
cdq
pop
pop
xchg
lodsd
in
cld
movsb
dec
mov
or
and
nop
outsd
jmp
adc
setalc
push
in
cmp
jg
push
add
mov
pop
inc
jmp
xchg
and
mov
or
loope
push
cmpsd
sub
dec
loope
sub
ror
and
out
xchg
push
fmulp
inc
pop
pxor
std
push
xchg
mov
jp
push
adc
adc
stosb
pop
mov
jns
inc
test
jmp
push
add
sbb
jb
sub
sbb
movsd
sbb
pop
loopne
jecxz
xchg
imul
out
stosb
out
mov
inc
xchg
push
or
adc
cwde
pop
sbb
sub
dec
jnb
dec
cmpsb
adc
in
or
jno
jmp
and
lahf
jle
xchg
cli
inc
xor
enter
xlat
repne
jo
sbb
cdq
cmp
insb
xchg
mov
imul
push
xchg
test
pop
mov
push
inc
cmc
sbb
insd
dec
adc
mul
std
mov
inc
mov
int
inc
xchg
pop
int
mov
add
push
mov
mov
mov
adc
dec
cwde
adc
cmc
mov
daa
mov
stosd
push
mov
push
sbb
jbe
inc
push
mov
dec
cmp
or
sub
xor
add
retf
dec
outsd
jo
sahf
xchg
call
shr
pop
rol
sar
hlt
push
outs
and
inc
punpckhdq
jb
add
pop
mov
repne
js
mov
in
xor
sbb
sahf
fild
mov
jg
mov
cmpsb
cmp
out
sub
mov
ror
dec
dec
or
js
mov
popa
inc
insd
sbb
outsb
or
push
jnp
mov
call
and
sub
aad
sub
cmp
inc
movsb
cmpsb
jns
mov
lahf
fldenv
push
icebp
xchg
popf
scasd
sub
and
and
and
pop
jmp
push
inc
add
jmp
inc
sar
in
xchg
pop
scasb
fiadd
adc
inc
rcl
retf
push
fidivr
fdiv
imul
fisubr
sub
aas
pop
push
adc
std
retf
push
and
wait
sal
jnz
test
push
into
test
fst
dec
add
js
inc
out
ja
dec
jbe
pop
xchg
arpl
lodsb
daa
enter
or
das
out
mov
mov
jg
arpl
outsd
retn
mov
pop
mov
dec
cmpsd
dec
inc
in
add
retn
aaa
mov
inc
shr
adc
mov
sub
setalc
mov
mov
out
jecxz
pop
sub
setalc
cmp
adc
loop
dec
ja
in
adc
wait
shl
mov
movsd
cmp
out
inc
push
imul
and
push
rep
enter
dec
add
jmp
mov
pcmpgtb
mov
aad
xchg
enter
cli
test
rol
sub
and
nop
jg
xlat
js
jmp
mov
loop
jno
add
idiv
jle
cmpsd
aam
sbb
aad
dec
pop
jbe
or
or
add
or
popa
rcl
mov
mov
ror
xchg
test
sub
add
test
test
std
sub
popf
rep
inc
int
aad
add
sbb
pop
mov
ffreep
in
sbb
mov
fucomi
dec
shl
sub
hlt
fcom
or
clc
iret
sub
jnz
push
adc
sbb
sub
scasb
push
sub
cdq
mov
pop
pop
idiv
dec
loope
xchg
dec
jmp
push
rcl
pop
xor
push
sbb
insb
xchg
sbb
mov
jns
sbb
insd
int
int
push
in
push
pop
xor
or
cmc
in
out
sbb
call
sbb
insb
jnp
jo
pop
or
cld
jno
push
or
jmp
xchg
aam
stc
fisubr
pop
stosd
cmp
and
inc
outsd
mov
insb
mov
adc
mov
xchg
scasb
sbb
daa
and
push
jle
call
push
wait
xchg
sub
outsd
insb
inc
punpckldq
add
sbb
push
cmp
xor
inc
and
sbb
test
add
or
xor
mov
lodsb
dec
cmc
int
xchg
mov
push
or
aas
push
cwde
adc
popf
cmp
pop
push
idiv
insb
lock
add
loopne
dec
push
or
adc
into
fst
js
rcr
scasb
inc
or
movsb
and
add
ja
pop
scasb
loop
ficomp
retn
push
fsub
das
mov
jnp
popa
retf
fsubr
inc
in
push
shr
scasb
xchg
inc
fsub
jb
xor
retf
in
arpl
dec
or
call
xchg
imul
hlt
cmc
push
dec
mov
adc
mov
adc
outsb
sbb
cmc
push
mov
jb
dec
sbb
popa
jecxz
or
mov
jp
inc
cmp
repne
pusha
push
jl
neg
lods
das
out
or
cdq
sub
xchg
mov
xor
lock
nop
pop
jz
cmp
xchg
jz
lodsb
insd
mov
rcl
test
push
adc
jbe
stosd
jo
test
retf
jmp
xchg
arpl
insb
sub
push
sub
sbb
shl
jns
inc
and
push
mov
push
clc
loop
not
sub
sub
movsb
das
jle
xchg
jb
inc
pop
sti
nop
retn
popf
jecxz
sub
push
mov
inc
aas
ficomp
inc
out
out
jle
daa
dec
jmp
pop
aas
cdq
fisttp
xor
mov
retn
jl
test
sbb
dec
push
stosb
rep
or
sbb
jecxz
mov
add
jz
pop
les
popa
sbb
lodsd
and
icebp
sbb
sbb
retn
sbb
into
add
call
call
jmp
mov
adc
stosd
fidiv
lodsd
sbb
adc
sal
fucomi
cli
fnstenv
stosd
insb
adc
mov
mov
add
sal
or
pop
inc
cmc
mov
mov
js
sub
outsd
in
test
aad
inc
in
daa
sub
aaa
stc
test
scasb
aam
mov
push
push
rep
xchg
cld
rcr
retn
lea
xchg
and
inc
aam
popf
pop
adc
inc
mov
pop
int
sti
mov
loop
adc
inc
sbb
popf
add
mov
add
dec
push
sbb
xchg
nop
sbb
mov
xchg
lds
div
call
aad
shr
lahf
rcl
lea
sub
mov
lodsb
pushf
mov
retf
test
inc
rep
or
mov
or
mov
xchg
clc
arpl
sbb
add
scasb
inc
add
jmp
pop
imul
and
jmp
pop
sar
add
pop
cmp
rcl
popf
xchg
sbb
pop
out
and
or
jbe
xchg
cli
adc
push
jle
mov
jmp
inc
mov
test
xor
fdivr
adc
xchg
sahf
sbb
and
popa
and
mov
or
xlat
call
fst
cmp
add
xchg
sub
sti
aas
cmp
outsd
wait
les
and
dec
wait
popa
and
dec
add
dec
mov
jnz
push
jmp
mov
movsb
aad
aas
imul
loopne
mov
sbb
and
cmp
outsb
and
xor
push
sub
jo
mov
pop
or
cmp
mov
adc
mov
cmp
adc
in
push
hlt
dec
or
sub
sti
test
xchg
sar
jns
add
inc
dec
mov
mov
pusha
retf
inc
mov
aas
rcl
push
push
cmp
idiv
nop
sbb
push
inc
mov
or
pop
sub
mov
out
jnz
inc
test
adc
push
insd
push
jecxz
xor
mov
xchg
in
aaa
int
xlat
enter
jmp
push
test
lock
sbb
dec
call
out
test
icebp
cdq
dec
pop
jbe
sub
movsd
sub
insd
xor
retf
jg
aaa
sub
cmc
shr
test
sar
xor
xor
das
push
sub
xchg
popf
or
leave
cli
add
insd
lodsb
lahf
aas
call
jecxz
movsd
jmp
sub
cmp
in
add
push
sub
test
adc
jbe
or
inc
fld
push
jle
xor
mov
push
mov
out
jnb
sub
imul
cmp
cmp
adc
aaa
xchg
popf
inc
cmpsb
mov
mov
ht
fmul
mov
iret
mov
pusha
push
fist
mov
test
cwde
and
fild
loop
aad
imul
add
cdq
sal
adc
retn
pusha
ja
outsd
sub
sub
cmp
mov
xor
movsb
retf
adc
cmp
xchg
mov
pop
not
pop
enter
sbb
mov
xchg
sub
test
ror
hlt
std
cmpsd
lodsb
mov
aam
push
xchg
repne
out
retf
test
call
mov
xchg
fisubr
les
and
jmp
push
mov
scasb
xchg
scasb
jz
fidivr
div
pop
dec
sub
cli
std
movsb
adc
jecxz
scasd
push
cmp
inc
sub
xchg
out
out
xchg
sal
add
mov
adc
insb
and
mov
loope
mov
sbb
xchg
adc
out
add
clc
iret
jecxz
mov
sbb
ror
or
icebp
sub
mov
xchg
add
or
retf
or
das
and
aam
add
rol
cmp
jmp
add
xchg
adc
loop
mov
bound
push
jbe
aas
aas
sub
scasb
add
popa
dec
mov
mov
sbb
jb
or
inc
adc
pop
retf
retf
and
xchg
push
movsb
jecxz
adc
inc
push
out
icebp
mov
mov
sbb
mov
in
js
add
xor
aas
fcomp
sub
cli
jnp
mov
fiadd
sbb
xchg
dec
aas
stosd
aas
dec
lodsb
fldcw
jp
mov
dec
cmp
or
sar
xor
pushf
cmc
mov
test
sub
or
sbb
rep
cli
dec
jb
or
mov
jb
nop
cmp
fdivr
rcl
in
loop
pop
sti
rep
push
xchg
dec
int
dec
int
stosb
jnz
jge
cld
cwde
xor
scasb
retf
push
ja
int
push
daa
cdq
jnb
jmp
xor
int
movsd
dec
scasb
mov
out
js
or
push
push
jnz
sbb
push
out
fst
jnp
retn
test
mov
mov
jnb
movsd
push
in
out
shr
pusha
xchg
loopne
leave
dec
arpl
outsb
adc
fisttp
cmp
push
imul
insb
pop
inc
xor
loopne
cli
jp
fcompp
mov
mov
and
in
pop
cmc
popa
enter
fimul
rcr
adc
in
mov
add
jecxz
pop
in
or
pop
jecxz
shr
cmc
push
lea
mov
jb
pop
jnz
mov
mov
cwde
aaa
daa
scasb
sbb
jle
ror
lea
movsb
xchg
pusha
mov
imul
push
and
movsd
pop
jmp
test
pop
fsub
push
adc
test
xchg
jo
xor
sub
xchg
pop
fcom
mov
mov
sub
pushf
loop
adc
fmul
popa
mov
pop
xor
arpl
jle
cwde
bound
mov
add
and
enter
and
dec
adc
jge
add
jecxz
cmp
mov
fidivr
xchg
call
mov
and
mov
xor
xor
mov
mov
test
sar
nop
aam
and
in
or
cwde
mov
mov
xor
pop
xchg
jbe
add
int
cmp
xchg
jnz
test
loopne
xor
in
push
ja
sbb
jo
xor
jle
loop
imul
dec
push
jb
push
rep
push
aaa
dec
cli
jbe
jl
sbb
push
xchg
cmp
dec
sti
cmc
outsb
jmp
mov
fcomp
movsb
add
xor
mov
dec
inc
or
xchg
xor
out
jp
mov
mov
aas
lodsd
cwde
push
repne
inc
add
or
iret
iret
pop
xor
inc
add
push
scasd
cld
mov
retf
setalc
test
rol
aad
movsb
movsb
jmp
pop
cmp
jnp
add
cdq
retf
clc
and
movsb
ja
xor
jmp
loopne
mov
dec
xor
call
sal
jnb
shr
inc
js
fistp
adc
add
and
cmp
dec
or
wait
adc
jno
stosd
fst
insb
popf
call
xlat
clc
push
xchg
aad
pop
shr
adc
pop
jno
rep
jmp
jbe
and
push
jz
stosb
cld
xor
push
mov
stc
lds
mov
mov
out
nop
sub
in
mov
aas
push
add
ja
sahf
and
icebp
jecxz
daa
jmp
call
mov
adc
xchg
cmp
push
or
push
retf
arpl
push
imul
xchg
in
clc
xchg
jnz
das
xlat
jno
mov
loop
cmp
xor
mov
mov
imul
jo
cmp
add
xlat
in
cld
pop
imul
mov
mov
pop
fucomp
add
mov
xor
dec
nop
xor
cmp
mov
aas
mov
mov
imul
xchg
cmp
xchg
stosb
jns
dec
out
inc
retn
sbb
or
push
movsb
cmp
lds
inc
jge
push
adc
jz
sub
sub
cli
insd
bound
mov
fcom
push
push
call
dec
out
and
jp
daa
lodsd
add
pop
cld
loop
iret
adc
adc
call
add
bnd
push
pop
adc
dec
outsd
insd
sbb
cli
pop
enter
and
hlt
fnsave
enter
lock
int
adc
jno
int
jecxz
sti
pop
or
imul
xchg
push
dec
add
dec
wait
insd
sbb
popf
xchg
mov
rep
sub
out
and
les
in
mov
push
nop
out
cmp
push
pop
mov
retf
in
wait
loop
mov
mov
fsubrp
or
retf
cmpsd
sbb
add
jnz
cmc
js
push
add
popa
pushf
test
pushf
dec
cld
push
retn
lds
inc
aam
wait
sti
pop
sub
aaa
mov
mov
inc
test
pop
inc
mov
mov
shl
repne
sbb
xchg
lahf
mov
popf
fadd
or
adc
sbb
mov
inc
mov
scasb
cwde
and
fcomp5
dec
loop
outsd
retn
retf
inc
add
cmp
and
mov
clc
stc
call
jmp
and
dec
leave
adc
mov
pop
mov
stosb
sal
jns
adc
jno
sbb
leave
mov
pop
aaa
scasb
fidiv
fild
sub
jz
mov
jno
inc
pop
push
sbb
rcl
mov
pop
in
cdq
jns
jb
retn
mov
cmpsd
setalc
ja
test
sbb
enter
xlat
out
loopne
or
fcom
out
test
push
nop
loope
cmp
loop
xor
xor
and
arpl
sub
add
lodsb
int
clc
mov
adc
and
push
mov
cwde
fdivr
shl
cmp
lahf
int
push
popf
dec
mov
xchg
push
dec
leave
pop
retf
mov
jb
aad
pushf
retf
retf
rcr
rcl
loopne
mov
mov
retf
lodsb
retn
retn
retn
pusha
call
pop
inc
push
retn
