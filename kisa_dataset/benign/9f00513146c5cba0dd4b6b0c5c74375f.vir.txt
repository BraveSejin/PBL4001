push
call
retn
retn
and
neg
add
add
scasb
fimul
jl
jp
call
movsd
outsd
dec
cmpsd
ror
mov
pop
cmp
nop
and
or
add
imul
mov
xlat
xlat
or
scasd
pop
mov
cmc
outsb
vmovdqu
sub
into
push
mov
stc
lahf
or
inc
loopne
js
mov
sbb
inc
out
js
popa
pushf
fstp
retf
xchg
lds
fcomp
pop
or
sbb
call
cmp
or
add
mov
mov
inc
xchg
xor
inc
mov
mov
pop
inc
jl
jnp
mov
pop
and
cwde
cmp
js
jnb
jnp
scasd
jmp
das
or
push
loopne
inc
inc
js
nop
aad
inc
jnb
into
lock
xor
mov
adc
popf
jmp
scasb
fild
inc
xchg
mov
shl
std
mov
and
or
call
xor
xchg
xchg
cmc
daa
jns
rcl
hlt
mov
lock
mov
pop
adc
push
jmp
or
add
add
push
xor
not
enter
cdq
dec
xchg
icebp
xor
call
aaa
and
out
fbstp
sti
push
rol
popa
mov
test
call
call
xchg
mov
pop
iret
mov
icebp
or
js
stosd
adc
mov
inc
imul
call
sbb
dec
hlt
retf
dec
out
and
xchg
retn
wait
clc
sub
pop
inc
scasd
div
xor
push
add
pop
push
push
mov
dec
xchg
lodsb
mov
pop
or
mov
mov
sti
in
nop
mov
sbb
or
in
jnp
imul
adc
enter
jnp
sar
aas
mov
retn
cmp
inc
add
jno
nop
loope
fnsave
push
loopne
sub
cmp
pop
mov
xlat
std
pop
sbb
popa
jb
xchg
or
push
lea
push
xor
cmp
test
pop
imul
loop
push
inc
pop
or
adc
xchg
jecxz
fucom
mov
cwde
dec
add
aas
pushf
inc
mov
lahf
retn
movsb
push
inc
jecxz
insb
mov
loopne
jns
setalc
mov
int
pushf
xlat
icebp
push
cmp
scasd
in
mov
int
sar
cmpsb
test
sti
pop
lodsb
std
jz
mov
insd
inc
xchg
fistp
inc
sbb
daa
or
aam
stc
cli
jno
xor
jp
loop
mov
mov
imul
pusha
xor
sub
cmpsd
pop
inc
aaa
mov
fsubr
xor
movsb
inc
push
daa
das
inc
and
xlat
mov
or
jecxz
cdq
fxch4
jz
sub
jns
in
xchg
popf
pushf
inc
cmp
sbb
into
dec
jb
retf
not
std
stosd
movsd
retn
mov
dec
sal
mov
add
jb
into
cmpsb
push
cmp
mov
cmp
out
js
aad
ror
jnb
std
adc
pop
test
sbb
pop
sub
cmp
xor
aad
add
nop
push
sub
into
into
lea
rcl
mov
add
xchg
mov
dec
stc
xor
push
movsb
xor
outsb
outsb
outsd
cmp
pop
and
scas
int
aaa
xchg
inc
loop
cmp
sub
aas
push
dec
cdq
sbb
lds
and
popa
out
cwde
aas
xchg
mov
mov
sbb
xor
insd
jle
lds
imul
iret
dec
call
inc
leave
setalc
or
sub
inc
repne
add
mov
dec
push
sbb
int
inc
enter
xor
add
cmp
adc
and
xor
sub
push
dec
lahf
imul
cmp
jbe
jle
call
pop
pop
inc
ficomp
insb
inc
jge
sub
push
sal
and
push
into
inc
rcr
or
dec
and
and
dec
jg
in
lahf
xchg
hlt
jnz
and
or
jnz
inc
test
aas
and
or
mov
leave
dec
sbb
and
jmp
sal
mov
jmp
push
xor
adc
push
adc
and
jp
xchg
mov
inc
xchg
push
mov
jns
xchg
hlt
sbb
call
fdivrp
dec
mov
imul
inc
iret
fmul
js
or
dec
sbb
test
js
mov
aaa
movsb
or
cmp
adc
dec
adc
push
inc
sahf
mov
sbb
cwde
test
mov
or
sti
call
shr
hlt
push
push
mov
pop
and
xor
leave
mov
adc
out
and
jnz
or
xor
daa
xchg
wait
std
push
loop
mov
xor
jno
push
popa
jnb
jnz
adc
pop
retn
jmp
retn
jbe
jnp
lea
sqrtps
retn
frstor
icebp
sal
sub
fidivr
pushf
jecxz
hlt
xlat
xor
arpl
aad
enter
lock
aad
frstor
wait
lodsd
aas
js
inc
xor
jmp
imul
cmps
add
cmp
jle
xor
les
jno
cli
jnb
dec
xor
jmp
rep
inc
cdq
aad
sahf
mov
add
mov
xor
cwde
movsb
inc
scasd
loop
xchg
sbb
iret
stosb
retn
cmp
movsd
mov
dec
mov
cmp
sub
out
out
mov
xchg
jle
les
adc
mov
cmc
add
leave
inc
xchg
jnb
nop
dec
nop
aad
div
stosd
push
test
push
mov
in
dec
pop
cdq
pop
or
out
fisubr
enter
aam
mov
mov
jp
in
push
pop
jz
sbb
or
pop
inc
imul
add
push
inc
sub
iret
mov
pop
sbb
inc
pop
hlt
push
stosd
bound
pop
sal
cli
lock
out
int
imul
xor
adc
int
rcr
retn
sbb
pusha
mov
or
jp
push
adc
push
cmp
aaa
div
das
sbb
fnstcw
pop
mov
cdq
pushf
xor
cld
pushf
xor
xchg
out
push
mov
push
mov
push
dec
mov
loope
xor
in
pop
mov
test
xor
jbe
dec
loop
sub
sbb
pop
add
rep
fucomi
jp
stosd
mov
sahf
xchg
xchg
pop
cmp
call
cmp
or
test
jz
fdiv
cmpsd
scasb
sub
inc
add
add
adc
les
mov
adc
fild
dec
aam
in
test
jecxz
jge
jnp
mov
in
call
pusha
popf
adc
mov
jb
jnb
or
mov
into
inc
push
jp
adc
pop
lahf
push
sub
xchg
jg
mov
mov
rcl
retf
test
outsb
inc
push
aaa
mov
push
xchg
js
pop
inc
dec
xchg
mov
sal
add
insb
inc
mov
cmpsb
les
sbb
retf
sbb
push
pop
jp
dec
setalc
xor
mov
push
out
iret
enter
xchg
aas
int
fcomp5
add
dec
mov
dec
xchg
sal
retn
call
int
and
xchg
fstp8
lodsb
xchg
add
lea
daa
loopne
movsd
pop
movsb
popf
inc
or
daa
mov
inc
xlat
mov
or
aas
mov
int
jp
inc
xor
sbb
add
rcl
popf
adc
xchg
dec
sbb
sub
int
test
dec
cmp
add
clc
mov
ror
dec
mov
stosd
adc
aad
sbb
mov
push
in
rep
movsb
xchg
loop
test
sub
out
pop
mov
mov
int
shr
scasd
mov
push
lea
cmpsb
in
push
mov
cmpsb
inc
cmp
and
add
in
in
or
lahf
dec
pop
mov
jnb
aam
xchg
lfs
movsb
sub
aad
aaa
stosd
popf
and
mov
retf
imul
cdq
rep
inc
in
cli
jnp
cmp
add
jo
push
mov
dec
inc
add
sub
cwde
mov
les
outsd
test
scasb
mov
and
cld
inc
dec
or
jle
or
xchg
or
jmp
scasb
jmp
call
jl
xor
xchg
retn
mov
aam
add
and
xor
xor
scasd
mov
int
or
aaa
dec
ror
in
in
mov
mov
xor
mov
xchg
pop
arpl
cli
jbe
aad
jnb
hlt
into
dec
dec
or
jb
fld1
inc
hlt
popa
mov
xchg
enter
fild
push
push
icebp
dec
out
rol
push
push
cli
add
jl
lodsb
push
or
pop
leave
out
imul
pop
retf
test
rcl
test
mov
pop
mov
arpl
clc
sub
sub
sbb
sub
mov
sbb
sbb
mov
mov
xor
retn
xor
and
and
mov
movsd
mov
xchg
xchg
inc
add
pop
dec
lahf
pop
dec
pop
sbb
loop
xor
cmc
out
retf
push
or
sub
push
and
dec
cdq
test
pop
fsubrp
cmp
call
push
mov
jle
call
push
mov
ja
adc
cmp
mov
mov
scasd
xchg
push
xor
ffreep
in
mov
repne
xchg
dec
les
add
jmp
xchg
or
inc
xor
enter
retf
arpl
xor
push
lds
ror
and
std
outsd
xor
pop
aas
add
and
and
aaa
xor
push
aas
imul
dec
jmp
sbb
aam
xchg
out
push
mov
adc
mov
mov
push
mov
fcom
out
hnt
pop
sbb
mov
cld
rol
retn
adc
or
add
dec
push
or
setalc
mov
push
lds
enter
pop
jmp
push
aaa
aas
inc
jbe
cmp
sub
leave
adc
insb
inc
outsb
lodsb
xchg
jg
add
jmp
sbb
sbb
push
and
rol
stos
test
xor
adc
jl
das
sub
stc
cmp
inc
and
jb
cmpsb
add
sub
int
mov
cmp
pop
das
sub
mov
xchg
xor
pop
mov
icebp
pop
jno
adc
cmp
jo
cmpsd
sal
test
or
adc
dec
out
mov
and
jmp
cld
mov
mov
add
aam
push
jmp
lds
pusha
jo
lds
popf
add
add
jmp
add
or
cmp
enter
mov
js
sbb
scasd
pop
cli
adc
call
jnp
xchg
jp
or
aaa
inc
in
push
cmp
pop
lahf
inc
mov
dec
mov
xchg
push
inc
sbb
fisttp
int
inc
sahf
int
add
adc
nop
mov
aad
or
bswap
movsb
arpl
repne
test
mov
adc
lodsb
jbe
retf
xor
fmul
push
mov
jecxz
mov
dec
sbb
push
mov
pop
cli
scasb
or
mov
xor
jz
imul
mov
lea
jge
sbb
cwde
sub
call
out
xchg
leave
mov
pop
jb
pop
jnz
fidiv
pop
insb
repne
mov
xchg
sub
mov
popa
push
dec
sbb
retf
jmp
test
cmpsb
sbb
dec
jnz
xor
cmp
or
setalc
enter
xchg
movsb
test
and
hlt
xor
retn
push
shr
add
movsb
jb
inc
arpl
mov
jz
outsd
call
out
or
std
xor
stosd
sub
sbb
daa
movsd
sbb
xchg
jle
mov
loop
pop
clc
mov
out
mov
dec
cmp
mov
push
adc
mov
repne
inc
aam
jmp
pop
inc
rep
rcr
sub
dec
cmpsd
sal
xor
imul
repne
mov
sbb
cli
cmp
inc
jo
mov
retf
aaa
aad
add
sar
fnstenv
cmp
fdiv
movsb
sub
xchg
jo
cmpsb
stosb
inc
pop
pop
jb
mov
aas
dec
das
retf
jg
mov
out
add
insd
jns
push
sti
frstor
xchg
pop
dec
cmc
and
lodsb
jg
xchg
add
fist
jmp
cmp
add
out
add
mov
xchg
out
mov
into
fstp1
pop
pusha
push
mov
add
repne
in
xchg
and
xchg
jl
fsubr
mov
in
inc
iret
jmp
pop
xchg
mov
dec
retf
jbe
and
dec
jo
xor
push
ficom
adc
pop
jbe
jmp
mov
jnp
mov
stos
mov
insd
setalc
xor
dec
add
aas
or
das
in
imul
mov
ficom
inc
inc
pop
inc
and
adc
mov
imul
int
push
add
out
retn
pushf
insb
or
and
test
mov
int
sbb
push
and
pop
pop
fninit
in
pop
pushf
retf
jg
xchg
xor
shr
movsd
int
mov
fdivr
jno
cmc
jmp
sbb
dec
jecxz
aaa
sub
push
mov
dec
mov
dec
arpl
rcr
aad
aas
cmc
imul
mov
out
int
cdq
push
lodsd
pcmpeqb
stosd
int
leave
arpl
movs
aas
xor
sahf
xor
loope
add
stosb
or
scasd
pusha
adc
push
xchg
loope
sar
jnz
pop
push
wrmsr
jo
imul
xor
insb
inc
sub
imul
or
and
rol
mov
and
xor
movsb
push
jno
cld
cmpsd
mov
xchg
lahf
xor
pushf
stosb
sub
imul
xchg
or
mov
in
sbb
aad
adc
mov
sub
cli
in
mov
push
test
push
cmp
call
or
or
jno
jg
xchg
fxch7
mov
mul
aas
loop
pop
cmp
and
push
dec
repne
imul
fdiv
retn
push
aaa
mov
and
and
mov
add
add
sal
stosb
div
add
in
add
jmp
mov
das
shr
xor
adc
mov
pop
xchg
jnb
and
pop
xchg
mov
and
push
enter
mov
mov
xor
push
xchg
dec
sbb
retf
pushf
lodsb
xor
cli
mov
mov
push
add
push
or
push
sahf
mov
xor
lahf
sti
push
stosb
sar
imul
shr
cdq
mov
inc
iret
push
xchg
std
fxch
mov
arpl
sbb
aam
mov
pop
iret
test
xchg
xor
mov
dec
or
cmp
inc
lahf
or
sub
insd
loop
jnz
setalc
sub
jno
mov
inc
aas
das
sti
lodsb
inc
cmc
cld
in
dec
or
push
xor
adc
xor
mov
sbb
daa
lahf
xor
inc
jecxz
fxch7
in
movsd
fiadd
in
xor
repne
sbb
pop
or
and
mov
push
mov
xor
cmp
or
test
fstp
and
mov
and
test
jle
xor
cli
jo
sub
cmp
xchg
push
fsubr
xlat
mov
push
mov
xchg
retn
les
fcmove
aam
das
out
xor
wait
sub
and
ja
inc
dec
sub
xor
sbb
loope
test
setalc
mov
xor
arpl
add
jecxz
retn
cli
fiadd
stosd
pop
mov
mov
inc
push
cmp
mov
inc
in
js
scasd
stosb
inc
mov
xchg
pop
xor
ht
mov
jmp
mov
lodsd
call
cmp
in
ja
inc
or
xchg
mov
shr
xchg
fxch
add
stc
cmpsb
xor
wait
dec
push
xor
ja
add
or
pop
in
movsd
push
jle
ja
xlat
pop
popa
wbinvd
push
fcmovbe
cdq
sti
in
mov
pop
xchg
wait
insb
pop
add
outsd
sti
dec
pusha
mov
jnb
inc
mov
xchg
sahf
pop
mov
fdiv
jnp
loop
test
add
mov
jno
adc
push
mov
mov
push
retn
test
cmc
aas
cli
inc
popa
xor
in
movsb
rcl
bound
jnz
dec
ficomp
jmp
popf
cmp
leave
rep
push
int
adc
cmp
pusha
sub
call
jnp
clc
out
xor
xor
push
into
jnz
inc
cmp
out
aam
push
or
or
cmpsb
pop
test
iret
xchg
bound
xor
mov
inc
loope
push
xor
mov
push
and
mov
pop
mov
mov
push
sbb
jno
mov
das
or
xor
mov
pop
jno
push
push
xor
cld
mov
mov
retn
jmp
sal
and
or
jnp
sahf
jo
xchg
or
mov
lea
rcr
dec
cmpsb
jl
loop
call
cmc
mov
fmul
or
inc
sbb
mov
std
inc
or
inc
out
cdq
mov
insb
mov
dec
sahf
sub
lea
mov
add
stosb
or
sbb
dec
add
in
lodsd
jge
jnb
push
add
mov
xchg
lea
push
mov
pop
daa
push
jp
dec
aas
stosd
cmpsb
sbb
push
inc
pop
lock
mov
loope
xchg
push
and
mov
and
inc
push
retf
fcomp
inc
dec
push
insb
xchg
in
xor
or
cmc
nop
out
test
psrld
jmp
mov
inc
adc
mov
sbb
mov
push
stosd
dec
xor
imul
setalc
sub
stosb
and
cmp
sti
mov
inc
sbb
xchg
sub
push
sbb
inc
push
add
sub
loope
xchg
adc
adc
dec
arpl
add
adc
inc
loopne
in
or
xlat
push
push
cmpsd
mul
rcr
call
and
loopne
push
and
jecxz
inc
add
add
sal
adc
jo
pop
retn
xchg
fdiv
xchg
sbb
arpl
or
inc
push
bnd
mov
adc
push
rep
push
pop
xchg
movsd
mov
add
xchg
mov
in
stc
jle
test
retn
rep
lock
cmc
fmul
jbe
pusha
fiadd
pop
bound
retn
dec
push
fimul
retn
rep
std
xor
int
fadd
jp
and
out
xchg
test
fcom
xchg
xchg
sub
and
jnb
sbb
pop
mov
mov
popa
dec
push
cld
xchg
or
rol
push
hlt
cmp
and
fbld
mov
pop
mov
sbb
mov
mov
iret
scasd
cmp
jg
lodsb
inc
bswap
repne
popa
leave
mov
add
cmp
mov
sbb
xchg
retf
sub
dec
sub
cmp
jge
inc
or
rep
add
inc
icebp
ht
jp
mov
clc
xor
and
sub
movsd
repne
mov
aaa
cmp
sar
mov
mov
or
jns
dec
push
xor
bound
setalc
or
mov
fbstp
aad
icebp
adc
sahf
cmp
push
wait
mov
out
jp
dec
sbb
fcomp
mov
push
mov
jno
and
mov
cmp
popa
xor
dec
xlat
xchg
dec
mov
stc
adc
test
lodsb
push
xor
in
add
out
mov
jp
fsubr
jmp
or
inc
mov
push
sub
mov
push
idiv
jmp
mov
arpl
lodsb
lodsb
sar
add
call
out
out
dec
push
jg
pop
mov
cdq
and
dec
fimul
fdivr
in
add
lea
pop
iret
retn
sar
xchg
inc
jmp
adc
mov
xchg
cwde
cmp
jmp
rep
adc
retf
jmp
insb
out
xor
out
sbb
jle
inc
dec
imul
xchg
mov
mov
sub
jmp
jb
inc
jmp
cwde
pop
retn
lock
xor
lodsb
xor
inc
adc
push
popa
dec
aad
sub
mov
mov
fimul
frstor
xor
arpl
xchg
dec
sbb
pop
out
dec
dec
inc
pop
arpl
fsubr
mov
mov
adc
xor
arpl
pop
push
pop
xchg
mov
jge
sbb
push
mov
jmp
jg
mov
retf
cli
sbb
sub
jmp
adc
pop
add
xchg
sub
xchg
lds
pop
jmp
jo
push
out
inc
inc
xchg
cmps
fidivr
or
call
xchg
loop
aad
imul
jmp
shl
push
push
push
sbb
or
inc
adc
inc
or
sub
sub
and
dec
clc
pushf
push
mov
in
sbb
push
inc
adc
pop
jnz
pop
and
out
jnb
jmp
rep
aaa
dec
cmp
jge
mov
or
jnp
mov
icebp
mov
test
lodsb
cmc
or
xchg
adc
push
sub
mov
xchg
jp
adc
sbb
sbb
xchg
into
popaw
push
inc
push
fstp
mov
clc
jg
daa
mov
cmp
mov
jnb
daa
iret
mov
mov
cmp
sar
and
push
mov
lodsd
cmp
enter
mov
jb
wait
cmp
mov
mov
xchg
rcl
jg
sal
rcl
cmp
pop
lock
int
mov
xchg
aam
cli
xor
in
loop
aaa
push
das
dec
pop
push
cdq
iret
sub
icebp
add
add
setnle
popf
push
push
pushf
mov
les
lahf
xor
inc
loop
and
mov
sub
inc
cmc
sbb
add
push
clc
cli
dec
mov
pop
adc
pop
sbb
imul
shr
push
jle
jl
xchg
setalc
sbb
cld
into
mov
mov
jle
xor
dec
test
jmp
pop
or
cwde
or
int
syscall
fist
xchg
push
fisub
out
leave
scasd
or
sti
lock
mov
icebp
sbb
inc
call
push
cmp
in
inc
into
push
arpl
retf
sub
in
fdiv
out
and
ficomp
jge
dec
hlt
sar
mul
push
inc
inc
inc
mov
add
test
push
pop
xor
xor
cli
xchg
xchg
aas
test
xor
stosb
pop
push
fild
xor
insd
cdq
lock
cmp
xor
jz
mov
push
sti
rcr
test
sti
xor
push
or
cli
arpl
and
jbe
sbb
cmp
popa
jp
xor
retf
inc
in
dec
pop
xchg
dec
test
dec
and
and
std
mov
out
push
push
jns
xchg
arpl
sub
and
inc
and
mov
pop
setp
xchg
mov
xchg
inc
pop
nop
sub
lodsd
int
or
jecxz
pushf
shl
sub
jz
or
hlt
sbb
rcr
outsd
mov
call
sub
out
or
into
ja
sbb
mov
int
out
pushf
fldcw
and
dec
inc
xchg
scasb
and
and
iret
scasd
test
call
call
lahf
sbb
sub
jg
jbe
cli
mov
jl
push
cmpsd
sbb
fst
xchg
mov
push
dec
push
cmp
cdq
mov
jl
push
and
adc
pop
dec
add
into
sbb
mov
mov
xchg
push
daa
popa
inc
adc
cwde
movsd
test
popf
retf
jge
dec
enter
clc
insd
test
mov
cmp
sbb
retn
adc
outsb
adc
mov
arpl
hlt
xor
stc
pop
retf
lds
retf
fild
iret
xchg
mov
retn
pop
jno
stosb
mov
and
pushf
cld
mov
cmp
mov
fst
mov
lahf
retf
mov
dec
lahf
aad
or
pop
sahf
loope
cmpsb
aas
std
call
pushf
xchg
pop
dec
psubusw
push
jl
out
mov
fmul
out
insb
movsb
xchg
fxch4
push
sbb
sub
outsd
ja
das
xor
shl
jnp
dec
mov
ror
jle
push
push
mov
mov
pop
pop
add
aam
loope
movsb
push
xor
mov
xchg
push
stosd
and
pop
sbb
and
dec
mov
jp
cmp
scasd
mov
mov
insb
movsd
jns
cwde
cli
inc
mov
lahf
sbb
jbe
mov
mov
jmp
mov
mov
adc
out
fisub
jge
cmp
push
jno
jb
sub
scasb
dec
xor
inc
mov
test
loopne
mov
mov
jbe
xchg
or
mov
aas
sar
jnb
sbb
adc
cli
ficom
outsd
mov
rep
add
call
and
fldz
sbb
pop
in
xor
retn
sub
xor
lodsd
sbb
inc
retf
mov
or
lodsd
jo
stosd
dec
out
mov
push
int
pop
inc
fidiv
wait
fistp
add
sbb
inc
adc
and
cmpsd
retn
lds
mov
sbb
cmc
mov
lahf
cwde
and
xor
insd
dec
lds
lds
mov
cmp
jge
push
into
xchg
sar
pop
std
rcr
inc
xor
dec
cmc
cmp
push
sub
cmp
and
pop
ror
test
pop
call
retn
add
mov
and
aad
pop
mov
aam
sbb
lock
out
pop
test
push
lodsd
cli
jge
pop
and
leave
mov
jnb
sbb
pop
mov
cmp
cmp
cmpsb
ja
pop
rcr
dec
std
or
dec
or
fisttp
xbegin
imul
xchg
pop
mov
cmp
jecxz
push
mov
pusha
xor
jle
xor
jecxz
mov
mov
sub
loopne
cmc
jmp
inc
adc
and
sbb
adc
fdiv
adc
imul
out
lodsb
lodsd
pop
fldcw
stosd
dec
mov
outsd
push
pop
rcr
stosb
imul
dec
and
adc
inc
pop
scasd
adc
or
icebp
jmp
loop
mov
pusha
dec
pop
aaa
inc
lea
jl
xchg
sub
xchg
jg
iret
cld
popf
mov
stosb
xor
fcom
outsd
mov
cmp
adc
pop
inc
dec
mov
cmp
pop
or
pop
std
xchg
popf
sub
wait
sub
lahf
push
dec
retn
mov
loope
les
insd
lea
adc
xor
sbb
out
outsd
inc
das
dec
mov
inc
loope
push
jns
jmp
test
mov
dec
sbb
add
stc
mov
mov
sal
xchg
insd
dec
cmpsd
push
outsb
mov
sub
sub
dec
iret
jl
pushf
mov
rcl
xor
sbb
mul
push
test
mov
or
sti
push
push
jmp
sub
aas
adc
xor
cmc
fistp
dec
in
push
inc
adc
pop
jnp
retf
lock
or
les
cli
and
rcl
daa
xchg
out
adc
idiv
icebp
neg
jo
push
sbb
cdq
cmpsd
pop
lodsb
retf
mov
in
inc
push
xchg
not
jb
popf
popa
les
aaa
and
pop
cdq
mov
retn
add
sbb
xchg
inc
sbb
adc
dec
or
sbb
jo
cmc
shl
adc
mov
arpl
dec
fisubr
repne
test
pop
sbb
ja
and
add
sub
xor
dec
lodsd
jns
pop
cli
dec
and
and
or
jns
daa
sahf
jecxz
test
nop
pop
and
pop
aaa
inc
fimul
wait
dec
and
and
call
rep
leave
push
imul
jge
sub
sbb
wait
adc
cwde
frstor
in
std
imul
repne
rol
stosb
enter
jns
xchg
wait
mov
dec
jge
xchg
mov
pop
aas
adc
movsb
sti
cmp
popf
lodsb
pop
sbb
jp
jbe
enter
sub
jge
push
iret
scasb
das
imul
cli
retn
imul
mov
pusha
xchg
adc
mov
stc
out
sahf
int
pop
call
xchg
stosb
dec
jnb
cld
and
jo
inc
inc
fcmovb
mov
or
jo
jp
and
out
fld
pop
pop
or
mov
inc
dec
imul
int
aad
sub
cmc
and
hlt
inc
mov
jmp
retn
sar
scasd
jmp
retn
retn
mov
jmp
retn
mov
int
dec
jmp
imul
add
imul
sub
inc
dec
mov
aad
jmp
add
jmp
jmp
add
jmp
fistp
xor
stosd
retf
inc
xlat
xchg
stc
pop
cli
retf
ficom
cmc
sti
retf
inc
sub
or
mov
neg
cbw
mov
push
retn
rcl
xor
jmp
inc
retn
fsubr
mov
std
add
sbb
retn
retf
retf
pushaw
add
popa
add
push
mov
retn
retn
popf
inc
and
mov
dec
retf
add
jmp
add
add
add
add
retf
retf
jmp
inc
push
lodsb
pop
jmp
jnp
jmp
cmp
cmp
add
add
add
add
and
jmp
cmp
cmp
jmp
pusha
call
pop
inc
push
retn
