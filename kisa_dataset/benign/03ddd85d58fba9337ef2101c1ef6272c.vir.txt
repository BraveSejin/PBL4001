push
call
retn
retn
push
inc
add
das
loop
pusha
adc
stosb
add
pop
push
sbb
jp
mov
xchg
imul
cld
rcl
xor
leave
dec
sbb
out
xchg
inc
xor
test
mov
test
mov
out
js
jnb
push
das
push
out
sbb
loope
inc
add
push
jmp
jb
fxch
test
mov
sbb
mov
jg
movs
pop
add
dec
jz
jnb
dec
mov
mov
inc
add
aas
jl
call
shl
or
popa
sbb
and
inc
and
call
jnp
and
pop
fisubr
into
add
pop
jmp
mov
scasd
pop
add
mov
stc
xor
mov
mov
push
js
scasd
mov
inc
retf
cmps
into
fld
mov
repne
dec
fsub
in
retn
mov
push
pop
call
add
push
xor
adc
and
fistp
inc
aad
sbb
das
mov
cld
aaa
push
mov
sahf
push
jmp
popa
or
insb
push
inc
and
mov
aaa
dec
mov
dec
sbb
or
pop
jb
mov
mov
jbe
div
push
jo
sub
mov
rol
test
or
aad
hlt
xchg
lds
push
cmp
cmp
jno
inc
shr
enter
mov
out
sbb
jp
cmp
js
xchg
push
push
or
sbb
jnp
cmc
mov
pushf
xor
mov
test
pop
stc
out
repne
and
daa
or
js
adc
sub
into
sub
xchg
popa
aam
pop
retf
pop
xlat
mov
dec
xor
push
inc
jnb
div
enter
pop
rcr
mov
in
aam
xchg
into
jmp
and
cmp
add
les
cmp
cld
dec
xor
mov
jbe
ror
or
xchg
pop
mov
sbb
push
jbe
insb
outsb
fcmovu
dec
pop
mov
dec
in
dec
pop
mov
inc
pusha
out
sub
mov
sbb
imul
jnb
fstp
adc
leave
cmp
dec
fdivr
push
pop
sub
test
aaa
and
enter
ffree
mul
dec
sbb
mov
mov
cwde
mov
sahf
dec
test
xchg
xchg
mov
lds
pop
pop
fcmovnb
mov
shl
into
mov
pop
cdq
sbb
in
hlt
push
hlt
enter
fidiv
in
fldenv
retn
add
daa
in
cli
push
aad
and
scasb
in
and
leave
xor
out
fnsave
pusha
cmp
cdq
sbb
wait
push
sub
shr
out
or
jnp
enter
add
mov
cmp
wait
aam
sub
movsd
mov
sbb
inc
dec
add
mov
inc
mov
stosb
enter
dec
pop
mov
rep
dec
imul
jno
mov
xchg
dec
pop
cli
pop
jnz
jp
stc
wbinvd
adc
sbb
not
add
cmpsb
mov
xor
lahf
dec
pop
jle
push
adc
sbb
int
jp
outsd
retf
imul
push
jl
add
sbb
push
sti
loope
inc
mov
mov
lock
add
sub
jns
out
jmp
cmp
or
dec
pop
sub
aaa
adc
mov
push
mov
ror
mov
xchg
in
in
xchg
movsb
aaa
sbb
dec
stosb
sbb
dec
wait
sub
sub
jnb
sbb
lahf
add
jge
cmp
mov
daa
cmp
outsd
add
and
aaa
sub
loope
add
xchg
mov
pusha
test
popa
xor
and
mov
retf
call
jg
dec
out
sub
push
mov
add
out
test
inc
mov
nop
test
popf
xlat
popf
retf
jbe
xor
jg
dec
xchg
scasb
setalc
mov
cmp
in
sbb
js
inc
dec
sub
lodsb
or
mov
push
loop
shr
std
mov
jp
and
pop
jg
push
jmp
mov
stosd
cmp
div
sub
dec
fstp
xor
inc
push
cmp
mov
popa
inc
cmp
pop
and
push
mov
out
cmp
jle
pop
xchg
mov
sbb
sub
jecxz
idiv
jge
mov
and
mov
pop
adc
ror
in
dec
loop
rep
push
cmc
or
mov
bsr
and
fisttp
inc
and
xor
in
mov
push
xchg
leave
out
sbb
push
jbe
mov
mov
xchg
xchg
sbb
loop
ja
or
sub
pop
lds
out
lahf
or
mov
mov
mov
wait
cmp
sahf
mov
les
pushf
push
fild
insb
insd
xchg
int
jl
repne
sti
mov
mov
pop
sub
stosd
sahf
and
mov
push
sbb
loope
dec
mov
rep
add
scasb
xor
cld
xchg
cmp
jmp
mov
sti
xchg
imul
mov
stosb
mov
imul
popf
pop
cmpsb
jnz
cmp
jmp
popf
and
retn
jz
inc
cli
sbb
cmpsd
dec
leave
out
dec
cmovb
int
jl
aas
test
out
jge
mov
punpckldq
into
push
sbb
ja
inc
mov
cmpsd
mov
adc
int
sbb
mov
inc
add
sbb
into
frstor
inc
lahf
and
adc
popf
or
rep
scasb
pop
or
stc
push
insd
add
leave
insd
cmpsb
push
or
out
out
xor
sbb
pop
out
rcl
arpl
push
xchg
pop
inc
mov
icebp
push
mov
in
xlat
test
mov
clc
hlt
and
js
pop
mov
xchg
retn
clc
jge
push
cdq
ror
vpunpckhbw
wait
retn
dec
cwde
hlt
push
retf
mov
ja
xor
add
shr
adc
sbb
fisttp
pop
push
loop
or
push
fbld
jge
dec
mov
sub
jno
add
shl
sahf
cmp
or
cmpsb
jno
xchg
mov
push
cmp
lodsb
cmpsb
scasd
insd
inc
sar
jg
pop
pop
push
mov
retn
pop
push
pusha
adc
repne
add
adc
push
scasd
pusha
inc
mov
rcr
mov
cld
xchg
push
stosd
dec
dec
rcr
add
jmp
xor
divps
sub
mov
inc
cmpsb
push
std
push
mov
push
pop
mov
fimul
fmul
rol
jno
cld
loope
jmp
cmc
and
test
xor
sub
scasd
pop
test
xor
retn
lea
std
xor
dec
setalc
retn
dec
add
mov
fidivr
xchg
mov
jmp
mov
test
dec
mov
test
jmp
insd
mov
push
push
pop
stc
and
mov
aaa
dec
sar
mov
adc
out
mov
movsb
jge
pop
jmp
push
mov
loope
sub
pop
adc
adc
scasb
inc
in
sub
push
xchg
pop
mov
out
mov
xlat
push
mov
mov
pop
xor
mov
iret
add
push
sub
aas
bound
and
loope
loopne
lea
jnb
cmp
mov
mov
cmc
imul
jnz
dec
and
mov
setalc
pop
leave
test
push
xchg
pop
sbb
sub
daa
ja
mov
pop
pusha
out
aad
cwde
mov
pusha
sub
pop
xchg
leave
push
jge
pop
movsb
jmp
xor
cmp
mov
jmp
pop
push
sbb
pop
inc
jo
lds
push
mov
and
sub
hlt
add
call
xchg
pusha
dec
push
add
mov
cmp
mov
icebp
mov
inc
xchg
mov
sbb
nop
adc
adc
retf
popf
lds
dec
clc
add
in
fmul
and
jns
jmp
jb
mov
cmpsd
push
fimul
push
aaa
mov
xchg
lds
and
xor
pop
scasd
mov
adc
imul
jbe
into
sbb
pushf
std
jmp
mov
xor
movsb
pop
pop
out
fcomp
out
mov
fidivr
aaa
xchg
adc
dec
outsd
test
and
cmpsd
iret
mov
cmpsd
daa
inc
dec
mov
push
xor
nop
retf
test
add
lodsd
or
adc
dec
cwde
jp
lea
cmp
jg
test
cmp
mov
outsd
push
mov
mov
push
fistp
imul
mov
fidiv
xor
rep
xor
icebp
mov
pusha
adc
mov
iret
adc
jnp
retn
jnb
mov
aas
sti
inc
aam
cwde
xchg
sub
cld
xor
mov
inc
ht
or
dec
dec
xchg
std
mov
aam
movsb
clc
cmp
pop
jge
nop
sub
inc
jnb
fmul
xchg
or
aas
xchg
and
scasd
iret
aas
rol
popa
imul
inc
xor
lodsb
hlt
ror
cmpsd
adc
loope
xor
mov
cmc
call
stos
or
leave
mov
push
pop
add
sub
cld
pop
dec
dec
push
into
dec
mov
loopne
retn
cmc
dec
movsb
cmc
mov
mov
sbb
lodsb
retn
push
xadd
sub
stosb
mov
popf
mov
cmc
add
xor
nop
add
mov
mov
jz
jnb
push
and
shr
loope
inc
mov
adc
sal
adc
add
mov
xor
pushf
sub
push
aam
sub
jecxz
pop
retn
sal
rep
out
pop
js
hlt
enter
repne
dec
mov
mov
popf
pop
pop
cmc
sbb
pop
sub
loopne
cwde
test
setalc
push
in
movsd
xor
sti
inc
aad
mov
iret
sbb
inc
int
stosd
adc
in
scasd
jno
fnstcw
imul
or
push
pop
adc
xchg
in
icebp
fnstcw
inc
add
wait
jg
mov
push
retf
aas
jmp
sahf
xor
ficomp
sahf
cmp
or
out
xor
rcr
sub
insb
mov
test
loop
clc
mov
inc
test
cld
test
push
das
enter
jnb
and
imul
xor
mov
out
rcl
push
push
test
pop
adc
aaa
iret
pop
loopne
xchg
add
mov
daa
lodsb
retn
mov
mov
add
inc
aad
add
and
mov
adc
lea
shr
out
lodsb
scasd
lodsb
dec
cmp
jp
out
jno
lock
sub
push
or
insd
xor
or
xchg
dec
mov
mov
outsd
mov
aaa
test
outsb
mov
out
add
jg
std
mov
jnz
sbb
mov
pusha
cdq
sbb
adc
dec
jge
out
xchg
pop
sub
into
call
outsb
daa
sub
aad
mov
dec
add
pop
fld
outsb
pop
push
sbb
and
leave
sbb
les
ja
and
mov
push
in
adc
sbb
pop
pop
xchg
cmp
cld
sar
dec
mov
fcom
retn
lea
jmp
cmpsd
loope
mov
cld
lea
out
scasb
jb
aas
lock
inc
out
setalc
mov
pop
repne
inc
mov
pop
test
in
js
mov
loopne
retf
mov
movsd
stc
imul
pop
inc
add
test
dec
retn
outsb
pop
xchg
fmul
inc
in
inc
xchg
push
xchg
mov
test
xlat
cmp
scasb
fsubr
add
pop
xchg
sbb
stosd
jle
test
jns
rep
mov
daa
div
and
jbe
jnp
rcl
jnb
insb
cmp
lahf
push
xor
mov
stosd
add
lock
push
mov
out
inc
jge
bound
sub
sub
icebp
fldenv
movsd
jo
jge
fnstenv
jmp
push
icebp
push
rol
lodsb
mov
mov
adc
mov
cmpsb
jmp
xchg
enter
bound
js
mov
sar
lahf
push
and
pop
mov
in
leave
xor
push
cmp
mov
fcom
jle
stosb
xor
outsd
mov
jge
js
out
xor
mov
sbb
pop
test
inc
mov
cmp
call
xchg
stc
pop
push
call
loopne
xor
cli
inc
mov
scasb
jns
or
pop
adc
mov
in
nop
xchg
sahf
add
xor
push
sub
dec
adc
sbb
jnz
out
push
or
push
jo
outsd
dec
cmpsd
stc
sbb
xchg
sub
cmpsb
loope
jno
push
jnp
div
in
cmp
dec
adc
xor
xchg
popf
pop
mov
xchg
jmp
add
mov
mov
mov
insb
mov
add
mov
dec
xchg
add
and
out
xchg
cmpsd
and
enter
pop
mov
movsb
pop
adc
pop
and
rcl
sbb
lahf
adc
adc
fbstp
cwde
inc
mov
jmp
or
pop
mov
and
movs
cmp
in
or
inc
pop
push
or
sti
sbb
push
mov
and
push
sub
jl
xor
jp
cld
and
adc
imul
enter
cmp
cmp
inc
cmp
or
out
mov
ror
xlat
ficomp
push
and
popa
scasd
adc
mov
or
mov
insb
sbb
call
scasb
les
das
out
int
stosb
in
repne
inc
test
in
xchg
les
push
mov
push
xor
test
scasd
sal
mov
fcmovnbe
sar
repne
or
add
clc
popa
int
mov
xchg
xor
push
ja
stc
jp
outsd
setalc
sub
popa
mov
jg
and
sahf
push
push
movsd
mov
cmpsd
adc
adc
pop
mov
test
retf
or
rol
mov
cwde
mov
sbb
in
or
mov
std
and
push
shl
pop
mov
jns
cmpsd
push
mov
fistp
rol
jz
jmp
add
rcr
jnb
iret
shl
xchg
cmc
js
mov
not
adc
sub
cli
push
mov
cmpsd
aad
rol
push
not
mov
pop
call
or
jb
inc
lodsb
out
push
adc
dec
xchg
pop
push
jge
jp
retn
sbb
arpl
and
jmp
mov
jnp
mov
cld
fst
adc
stosd
js
hlt
pop
stc
jmp
sub
repne
xchg
pop
and
retn
int
xchg
inc
pop
mov
pop
lock
push
dec
shl
adc
add
pop
pop
aam
shl
sar
leave
add
mov
push
jl
jns
jmp
mov
dec
les
retf
std
cmp
rol
push
inc
add
mov
in
aas
inc
dec
mov
fisubr
xlat
lahf
sets
pop
add
sbb
aaa
and
pop
retf
mov
and
sbb
call
wait
or
fdivr
hlt
inc
loopne
insd
mov
jo
sti
retn
or
add
push
retf
aas
icebp
pop
cdq
jg
jns
stosd
ficom
jno
loope
push
sub
mov
and
xor
into
jnz
rol
push
ja
mov
cmp
push
mov
wait
push
ficom
mov
or
retf
scasd
fmul
pop
push
xor
dec
dec
cmc
call
push
scasb
xor
jnb
pushf
loope
int
and
stc
fcmovb
in
sbb
int
dec
repne
inc
mov
iret
stc
mov
aad
dec
aad
pop
jmp
cmp
lahf
mov
push
rol
pop
push
mov
test
cmp
out
cmpsd
inc
popa
inc
lodsb
pop
loope
push
jge
push
pop
fdiv
inc
jb
xor
ror
sbb
sub
div
lodsd
cmp
out
dec
pop
mov
out
out
rol
movsd
and
adc
leave
mov
ficomp
stosd
test
retf
retn
xchg
pop
mov
jecxz
sub
mov
push
movsd
stosd
mov
mov
lodsb
mov
mov
bound
jns
pop
clc
push
fld
mov
test
sbb
add
out
jnz
cmpsb
retf
insd
mov
jmp
mov
push
sbb
sub
out
pop
setalc
outsb
cmp
xchg
sahf
jo
mov
sbb
xchg
retn
out
or
push
mov
test
mov
loope
xor
fistp
repne
into
jnz
ja
dec
pop
out
jmp
mov
outsb
push
sahf
call
lodsb
cmp
retf
adc
sub
add
dec
cmpsd
test
inc
push
jmp
leave
mov
adc
fdivr
enter
rep
inc
pop
retn
xchg
sub
cmpsb
loope
pop
mov
push
cmp
jecxz
cld
dec
xchg
jp
and
sub
sbb
les
scasb
imul
sub
test
inc
inc
shr
daa
scasd
shl
in
sar
adc
test
test
mov
push
in
xchg
hlt
rol
lock
xor
xor
cld
and
sbb
xor
in
adc
das
std
retn
and
pop
xchg
push
or
and
mov
lodsd
push
pushf
sbb
push
imul
cmp
fld
sbb
cwde
les
fisttp
in
jp
mov
cmpsb
pop
lodsd
xor
std
or
jo
sar
lahf
scasb
into
pop
inc
arpl
cmp
pop
aas
stosd
mov
jns
adc
retn
and
test
dec
cdq
pop
lock
xchg
inc
xchg
out
fdiv
pop
push
aaa
cmp
push
jle
mov
mov
sbb
nop
sar
jz
imul
inc
adc
js
imul
or
jno
test
call
mov
jge
sbb
adc
in
xchg
mov
aam
aas
mov
into
into
cli
jmp
jge
jmp
arpl
iret
mov
nop
and
sbb
and
jl
mov
popf
push
repne
push
adc
wait
and
stosb
push
test
push
lea
rep
wait
add
add
pop
nop
jle
mov
iret
jg
xor
aam
or
loop
mov
rep
push
inc
call
cdq
hlt
push
or
retn
mov
mov
pop
mov
add
and
cmp
lahf
mov
retn
test
mov
lodsd
sbb
popf
pusha
loope
sub
adc
loopne
lds
mov
add
call
dec
cmp
push
push
test
mov
jbe
jnz
stosd
pop
add
push
mov
sar
rcr
not
pushf
call
inc
icebp
add
pop
push
mov
scasb
sub
aaa
fcomp
cmp
inc
in
pusha
mov
idiv
adc
mov
jnz
adc
and
xchg
lodsd
dec
scasb
setalc
push
sbb
add
dec
shr
out
dec
or
pop
push
push
retf
or
xor
mov
xor
fisubr
dec
pop
inc
dec
jmp
xlat
clc
scasb
inc
push
mov
add
xchg
cli
jge
dec
fst
mov
and
mov
dec
jmp
out
iret
bswap
jp
push
loope
frstor
dec
xor
and
cmc
repne
cmp
pusha
inc
call
std
dec
hlt
sbb
dec
jp
add
out
sahf
mov
and
cmp
mov
mov
push
cmp
add
add
loop
setalc
cmp
push
clc
in
adc
dec
movsd
insd
xor
mov
pcmpgtw
cmp
dec
lock
sbb
mov
jmp
mov
loopne
sbb
pop
mov
and
inc
cmp
out
or
jnp
scasd
add
cmc
sti
xchg
retn
and
pusha
mov
in
sub
repe
sbb
mov
retn
mov
mov
scasd
cmp
sub
and
cmc
retn
mov
xchg
pop
sbb
sar
nop
jnz
mov
test
mov
stosd
jz
cmovnz
inc
mov
repne
push
sar
aam
xor
inc
adc
pop
push
add
cdq
mov
pop
pop
daa
push
jg
jz
pushf
sar
push
and
das
hlt
sbb
daa
inc
push
rol
sub
sbb
xor
cli
inc
push
mov
and
rep
inc
fstp
js
arpl
fist
test
pop
das
cmp
push
retn
or
or
sub
mov
add
retn
push
push
sub
pop
iret
test
jz
cmp
lock
in
mov
pop
push
adc
clc
and
pop
iret
inc
fdiv
retf
retf
mov
sbb
or
pop
mov
dec
cmp
pop
jns
or
push
outsd
lock
mov
out
leave
and
cmp
cmc
pop
lock
arpl
rcl
in
inc
add
push
bound
pop
xor
push
xchg
js
shr
sbb
imul
mov
sbb
loop
xor
fyl2xp1
dec
outsb
lodsd
popa
test
mov
sal
in
test
int
in
push
dec
jg
popf
icebp
sbb
jnz
jbe
pop
in
jecxz
jp
inc
and
popf
push
add
mov
pushf
stc
cli
adc
add
hlt
fild
dec
cmc
mov
jz
retn
xlat
jnb
inc
cmp
jl
inc
mov
sub
push
cmp
push
pop
or
stosd
fisub
ja
cli
lodsb
adc
js
pop
in
cmp
lodsb
pop
add
lds
cmc
call
dec
adc
int
xchg
xor
aam
div
adc
rol
jmp
fcom
int
adc
and
or
scasb
xchg
daa
and
aad
call
fstp
xlat
call
out
cdq
in
add
dec
mov
mov
cdq
retn
xchg
push
mov
pop
mov
rcr
std
add
sub
mov
or
das
stosb
div
cwde
adc
mov
in
xchg
inc
pop
push
push
inc
inc
mov
jmp
sal
and
adc
xchg
cli
and
dec
inc
lahf
mov
aas
lock
in
movsd
aaa
outsd
insd
daa
cmp
sub
sub
or
sti
sal
aas
mov
cmp
mov
push
out
xchg
sbb
inc
push
jnp
shr
sub
sbb
neg
push
sbb
xlat
pop
mov
push
pop
pop
arpl
pop
retn
aaa
pop
lodsd
inc
pop
xor
adc
mov
jz
mov
stc
xchg
das
dec
xchg
outsd
cmp
pop
xlat
std
sbb
xchg
dec
mov
cmp
cmp
pop
add
or
mov
loope
cli
and
inc
xor
mov
mov
test
push
dec
std
mov
fsub
scasb
and
xor
leave
arpl
push
xlat
lodsd
add
loopne
xor
sbb
or
sbb
stosd
mov
lock
inc
clc
mov
cmp
das
cmc
in
xor
mov
in
jnp
lodsd
lock
int
rep
sub
sbb
movsb
sbb
insb
push
loop
in
dec
les
loope
lodsd
mov
xchg
adc
call
adc
sub
and
in
add
inc
outsd
add
cmp
sub
outsd
mov
out
in
mov
mov
jge
mov
wait
add
jns
sub
xchg
sbb
mov
das
js
adc
mov
aam
jb
pause
adc
ja
loop
dec
pop
icebp
xor
into
out
pop
jmp
inc
outsd
mov
jo
cmpsb
xlat
sti
jp
dec
xchg
jmp
mov
inc
sub
and
xchg
jnb
xor
pushf
or
cld
or
mov
jbe
sub
ja
dec
pop
jl
adc
jbe
push
and
mov
xchg
mov
push
setalc
mov
cli
xchg
xor
cmc
enter
setalc
add
sbb
mov
xor
dec
push
push
js
mov
jo
sahf
add
xor
mov
xchg
test
adc
sub
setalc
adc
das
inc
ja
dec
sub
sub
shr
mov
stosb
add
mov
mov
jmp
rep
pushf
cld
mov
mov
idiv
or
sub
aaa
pop
loope
imul
cli
iret
adc
test
mov
pop
aas
sbb
dec
xchg
adc
cld
inc
out
cmpsd
js
xchg
dec
jge
xchg
cmpsb
xchg
dec
cmpsb
or
retn
pop
cwde
push
loopne
pop
insb
mov
or
cld
cdq
rol
retf
dec
cdq
pop
jns
aas
popf
rol
dec
retn
push
mul
mov
cdq
jnz
dec
push
sub
xor
enter
pop
adc
clc
xor
in
iret
and
retf
push
or
out
imul
movsb
mov
out
repne
shl
adc
ror
test
inc
adc
push
popf
mov
or
pop
mov
jb
mov
mov
cmc
and
stosd
sub
cwde
dec
xor
cmp
mov
wait
rcr
cmpsd
add
outsd
test
xor
cmp
fisttp
push
popf
std
xchg
xlat
arpl
cwde
stc
inc
or
add
retn
and
dec
jnp
mov
div
setalc
push
int
inc
pop
adc
xor
setalc
wait
sahf
push
sti
out
in
or
fst
cmc
mov
rol
xchg
jnz
movsb
add
inc
jp
dec
repne
dec
shl
xchg
or
out
mov
dec
xor
sbb
xchg
xchg
icebp
lock
out
aas
mov
jg
popf
pop
adc
retf
xchg
push
mov
movsb
outsd
repne
jge
mov
mov
xchg
out
wait
xchg
push
pop
xor
sbb
js
aas
jnb
out
rcr
retf
cmp
dec
hlt
icebp
xor
or
xor
or
mov
mov
push
rcl
and
jmp
lds
adc
rcr
out
mov
xchg
sub
retn
hlt
push
clc
sub
xchg
mov
inc
sbb
setbe
push
dec
jge
nop
mov
leave
xor
out
inc
or
sub
loop
and
jmp
dec
add
rep
xchg
std
xor
jmp
push
mov
mov
divps
add
ror
xchg
jl
imul
fld
call
cdq
sbb
adc
mov
jle
adc
loope
sub
movsd
adc
jecxz
mov
xchg
add
inc
and
mov
and
inc
dec
and
inc
loop
mov
dec
jno
mov
push
mov
jge
xor
xor
jnb
adc
push
sub
mov
cmp
pop
fild
lodsd
inc
dec
jnz
and
int
into
and
clc
xor
inc
mov
dec
pop
retn
sbb
stosb
mov
and
fist
xchg
fldcw
sub
sbb
imul
test
pop
aaa
movsb
mov
icebp
xchg
out
cld
fsubr
pop
pop
or
imul
mov
pop
jmp
fstp
out
loope
jmp
rep
add
stc
test
mov
pop
lea
js
inc
std
fucom
retf
jecxz
pop
cwde
dec
mov
xor
jb
icebp
std
retn
fld
aas
fisub
xchg
mov
push
inc
ja
jno
aad
mov
fnstenv
in
pop
push
jo
sub
and
imul
xor
adc
setalc
mov
in
push
dec
push
out
mov
loop
movsd
jb
lahf
idiv
dec
xor
push
sub
or
cmp
call
xchg
dec
pop
mov
pop
in
sub
inc
mov
push
aaa
push
jnb
cmpsd
sub
jz
mov
adc
retf
jl
call
dec
fld
fnstsw
cmp
dec
xor
push
mov
outsb
xchg
bound
pop
test
adc
repne
add
mov
out
out
mov
mov
aas
adc
xor
push
in
push
lodsb
inc
jnp
lahf
or
jb
loope
movsb
dec
mov
mov
iret
sqrtps
scasb
inc
in
push
lahf
loopne
ja
pusha
lea
push
and
or
aam
or
cmc
call
out
pop
mov
in
lock
aam
inc
mov
stc
jnb
popf
dec
loope
fcomp
jmp
mov
loope
lea
and
xor
sbb
add
imul
add
lodsd
aas
jg
cli
or
aaa
in
push
std
xchg
cmpsd
dec
mov
mov
mov
test
or
jge
xor
push
sub
xchg
js
scasb
xchg
mov
adc
rol
imul
mov
jmp
js
call
lock
sal
rep
cld
lds
inc
std
retn
test
test
hlt
xchg
push
pop
nop
lodsd
inc
pop
mov
out
mov
xor
inc
daa
mov
mov
jnz
das
fidivr
iret
aas
retf
dec
add
fnstsw
add
cmp
mov
cmc
jno
shl
rcr
rep
inc
mov
add
sub
pusha
pop
jo
or
rol
xor
fcomp
xor
loop
fstp
mov
int
test
fcomp
mov
inc
push
out
mov
popf
mov
in
test
inc
jno
out
xor
lodsd
pop
sub
pushf
outsd
test
popf
mov
pop
cmp
enter
sub
jg
sub
wait
into
retn
mov
cld
mov
imul
ror
call
dec
pop
insb
sbb
lahf
jp
push
sbb
pop
xlat
cmp
mov
dec
movsd
xchg
xor
fbld
cdq
cdq
loope
movsb
adc
jb
fcomip
and
out
nop
jo
outsd
sub
pop
xchg
xor
jl
cli
or
test
ror
insd
fcmovnbe
retn
push
xchg
adc
or
pop
retf
xor
cmp
cmp
mov
pop
loop
mov
or
inc
pop
lodsd
lock
inc
clc
aad
and
fcom
jnp
lds
jns
sti
xchg
retn
std
adc
pop
scasb
adc
jns
fcom
leave
test
xchg
cld
das
mov
pop
cmp
js
out
dec
xchg
push
jno
inc
push
setalc
xchg
call
push
sbb
sub
jbe
mov
pop
jz
imul
mov
pop
xlat
retn
push
pop
mov
mov
xchg
mov
push
mov
sbb
pop
or
jnz
cmpsd
or
in
or
pop
xlat
cmp
xchg
out
loopne
dec
sbb
lock
ja
movsb
mov
fcomp
mov
in
loopne
in
stc
rcl
in
aad
sbb
sbb
inc
mov
icebp
jl
loopne
stosb
xor
icebp
jo
pop
adc
in
push
inc
pop
retf
enter
pop
cmp
fisttp
inc
cmp
mov
or
scasd
jnp
push
mov
shr
ror
mov
adc
out
push
cmp
hlt
or
pushf
push
in
mov
rol
outsd
dec
les
lodsd
mov
jz
pop
xor
cld
xchg
jz
rol
shr
dec
in
xchg
mov
iret
mov
into
aaa
push
jmp
setalc
int
mov
retf
aam
retf
fmulp
int
cdq
test
adc
les
jmp
jmp
aam
retf
retf
mov
retn
retf
mov
cmpsd
mov
retf
mov
rol
rol
rol
retn
retf
mov
rol
rol
rol
retn
retf
pusha
call
jmp
pop
inc
push
retn
call
pop
mov
add
sub
cmp
jnz
mov
cmp
mov
jnz
lea
push
push
push
lea
push
jmp
mov
push
push
add
pop
test
jz
jmp
cmp
jz
xor
push
push
push
push
call
pop
cmp
jnz
xor
mov
test
jz
push
push
push
call
mov
test
jz
push
push
push
call
pop
or
popa
jnz
push
pop
retn
xor
neg
sbb
inc
retn
jb
mov
call
retn
pop
mov
add
mov
mov
mov
push
jno
sbb
pop
push
adc
pop
add
mov
add
sub
push
call
cmp
sub
xor
pop
pop
mov
call
iret
and
pop
sub
push
mov
pop
sub
jnz
call
shl
std
repne
sar
lahf
in
mov
mov
pop
jmp
push
jnz
jns
pop
jmp
in
xchg
test
add
push
insb
push
aas
pusha
sbb
mov
add
mov
dec
add
std
mov
sbb
or
xchg
sub
mov
mov
inc
and
scasb
push
and
dec
bound
jle
cli
ror
aad
jb
jz
scasd
sub
or
and
adc
jnz
xchg
insb
xchg
or
mov
sbb
pop
int
xchg
insd
pop
push
adc
xchg
test
add
add
aad
fist
jmp
cmp
mov
xor
movsb
dec
cmovp
enter
movsb
imul
sub
mov
mov
call
dec
xchg
xchg
mov
sahf
cmc
jecxz
test
aas
mov
mov
