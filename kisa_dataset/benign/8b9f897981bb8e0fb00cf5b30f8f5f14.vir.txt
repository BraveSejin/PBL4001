push
call
retn
retn
retf
inc
adc
mov
add
or
jmp
rol
out
pop
int
shl
sub
and
stc
mov
setalc
lodsb
cmp
iret
mov
mov
dec
pop
or
pop
fst
xor
cld
loop
cmp
pop
stc
push
pop
test
mov
in
pushf
aas
in
dec
xor
jb
mov
and
push
inc
inc
adc
cli
or
jno
lodsd
insd
jecxz
jo
call
bound
cmp
in
adc
imul
mov
cmc
add
loope
xchg
lea
sub
jbe
retf
xor
pop
retf
leave
or
stosd
inc
push
dec
inc
xor
std
xchg
xchg
mov
mov
lodsb
xchg
xor
inc
xchg
in
and
sar
sub
fiadd
imul
adc
lodsd
mov
call
push
out
pop
or
jno
and
mov
mov
and
adc
in
outs
cmpsb
out
pop
jnb
test
xchg
popf
mov
loope
stosd
fcomp
pop
sbb
clc
mov
mov
jbe
xor
xchg
test
pop
sub
add
jge
inc
rcl
dec
cmpsd
retn
sub
loopne
test
adc
rep
xor
xchg
cmp
mov
adc
pop
rcr
sbb
inc
test
mov
pop
or
pop
pop
sal
arpl
jmp
sahf
inc
and
and
inc
push
cmp
add
sahf
mov
or
mov
test
outsd
cmp
aas
xor
push
lock
in
push
jmp
wait
bound
fild
adc
das
mov
mov
sbb
mov
fadd
mov
dec
sub
pop
fiadd
stosd
pop
mov
in
add
jo
adc
and
pop
repne
outsd
insb
and
adc
dec
in
in
sub
jo
jb
scasb
dec
cmpsb
sbb
jg
adc
or
jns
int
jecxz
fldcw
and
cmp
in
in
jecxz
and
inc
cmc
or
or
xchg
mov
dec
adc
sub
retn
pop
jo
sbb
sub
test
and
inc
mov
mov
sbb
add
retf
fldcw
sub
mov
wait
retn
xchg
sbb
jno
push
xchg
pop
lds
xchg
rep
and
loope
cmc
retn
push
cld
cmp
xor
push
mov
mov
mov
dec
jp
inc
jmp
test
aas
jnz
push
jmp
pop
push
xchg
push
sub
mov
dec
int
add
lodsb
pop
push
push
rcl
call
retf
inc
push
mov
imul
push
scasd
test
int
push
mov
nop
adc
lodsb
call
ficom
dec
sub
dec
cmp
jl
loop
jmp
jo
xor
stc
jg
cmp
add
mov
jl
add
movsb
push
retf
jl
xor
lodsb
stc
add
adc
mov
xchg
adc
sub
pop
push
imul
xchg
jmp
add
jnp
jo
outsd
mov
mov
retf
xchg
hlt
scasb
test
sbb
xor
mov
mov
sbb
mov
jg
add
arpl
dec
mov
sti
pop
sub
int
and
sbb
mov
inc
fdivr
cmc
cmp
cmp
cmpsb
inc
pop
pop
push
imul
mov
clc
push
packsswb
adc
dec
lahf
pop
in
and
retn
cmp
int
adc
adc
xor
sti
xchg
pop
sub
xchg
mov
adc
mov
inc
in
sbb
rol
jbe
mov
pop
xor
adc
pop
popa
jl
push
xchg
test
add
jnb
mov
pop
sbb
adc
loopne
scasd
vdivps
sub
sbb
sub
and
adc
fidivr
inc
cmpsb
cmp
xchg
add
mov
inc
in
or
in
push
add
sbb
or
scasb
dec
dec
sub
in
psadbw
mov
sbb
mov
test
push
jge
cmp
mov
jmp
mov
icebp
push
or
sub
dec
lahf
lodsd
dec
xchg
lds
mov
cmp
ja
cdq
inc
fdiv
jnb
arpl
jle
jnb
rol
movsb
icebp
add
test
pusha
loop
xor
popf
sub
mov
xor
mov
pop
push
or
ja
mov
push
cmp
outsd
imul
inc
pop
daa
push
or
mov
push
xor
mov
jmp
add
cli
aam
jno
sub
mov
pop
daa
xchg
dec
movsb
loop
jbe
aam
scasb
inc
daa
dec
and
xchg
adc
mov
les
mov
inc
in
mov
scasb
cmc
dec
inc
mov
pop
mov
jo
out
adc
rcr
bnd
inc
cdq
jz
and
loope
mov
or
jp
xchg
fxch
fadd
int
jmp
cmpsb
cli
sbb
call
sbb
jb
pop
dec
fisub
scasb
test
sub
pop
adc
or
mov
frstor
bound
ror
mov
jecxz
sub
scasb
sbb
mov
jp
xchg
push
pop
add
cmp
insd
pop
dec
scasd
cmp
lodsb
call
jb
sub
sbb
jmp
add
mov
lds
or
inc
xchg
sub
mov
call
loopne
xchg
dec
xchg
push
lodsb
fbld
jnp
push
jo
xchg
inc
das
imul
fbstp
dec
leave
js
cmp
jnz
int
ja
xchg
inc
loop
or
inc
and
pop
mov
icebp
fcom
adc
push
mov
mov
clc
mov
inc
mov
xchg
out
pusha
popf
sub
out
cmpsd
in
test
xor
add
push
xchg
ja
push
sub
jg
xchg
lodsb
into
call
pop
mov
fdivr
jnz
sub
jp
jp
and
dec
and
push
jb
push
sar
sahf
fcomp
fdiv
xor
stosd
jmp
pusha
pop
add
in
outsd
test
mov
mov
cmp
aas
jno
mov
mov
jnb
inc
push
nop
mov
xchg
and
add
cmp
imul
mov
dec
sub
adc
ror
or
push
test
mov
les
push
xlat
cmp
enter
and
mov
mov
mov
nop
sub
wait
add
fcomp
iret
xlat
pusha
inc
leave
mov
jmp
leave
or
in
mul
push
or
xor
jnp
push
push
imul
mov
dec
sbb
insd
fimul
sbb
fdiv
aad
lock
test
lock
sub
retn
pop
adc
test
and
fcomp
or
adc
cmp
or
mov
das
outsb
mov
jl
rcr
mov
xor
outsb
aaa
or
xchg
mov
imul
xor
scasb
mov
cmc
push
sbb
pushf
imul
or
iret
push
js
bound
push
cmp
out
cdq
jg
mov
popa
popf
push
cld
sbb
cli
mov
mov
xor
rol
call
dec
sub
sal
cmp
mov
cmp
mov
pop
sbb
loopne
pop
out
test
mov
xchg
mov
mov
retf
imul
jz
xor
xor
mov
jns
or
xchg
sbb
mov
wait
push
dec
xor
bound
movsd
or
dec
cdq
int
lahf
in
mov
mov
call
cmp
inc
outsb
pop
pop
jo
test
stosd
xchg
cmp
cmpsb
adc
test
imul
dec
loope
xchg
jecxz
mov
push
mov
push
mov
xchg
bound
mov
cli
int
fstp
cmpsb
mov
daa
test
pop
jb
inc
dec
enter
or
rcl
and
sbb
adc
adc
sbb
sbb
neg
add
insd
xchg
jnb
pop
stosb
rcl
and
cmp
dec
push
mov
xor
push
sahf
lea
xor
mov
retf
push
daa
retf
nop
daa
rep
sub
mov
retf
sbb
out
aaa
cmp
push
mov
cmp
inc
out
mov
jbe
jmp
fisttp
mov
cmp
aas
sti
push
push
outsd
movsb
cmc
jecxz
out
jnz
xor
call
sub
jbe
int
sub
push
aad
push
dec
nop
cld
xchg
xchg
popa
dec
mov
pop
pusha
not
rol
enter
mov
cmp
push
sub
sub
sub
mov
jmp
and
daa
mov
inc
pop
ja
lock
repne
jmp
fbstp
mov
mov
popa
adc
and
pusha
out
inc
push
pop
shr
xchg
aam
fistp
fucomip
and
pop
call
mov
sub
pop
loope
test
xchg
leave
or
lahf
cmp
pop
mov
mov
pop
sbb
jns
add
ja
push
xlat
mov
test
test
push
ja
sar
push
pop
xchg
pop
cmp
add
xor
adc
lods
xlat
fisub
adc
xor
xchg
push
mov
stosb
mov
dec
push
shl
jmp
jg
push
fcomi
mov
pop
test
add
or
pushf
sahf
sar
adc
mov
popf
stc
mov
mov
inc
mov
dec
icebp
lodsd
xor
inc
popf
cmp
jnp
mov
nop
sar
lahf
popa
cwde
mov
mov
jb
pop
call
outsd
test
cli
dec
mov
dec
xchg
xor
and
clc
clc
push
in
fistp
inc
sub
cmp
test
mov
push
lds
mov
jmp
xor
or
stosd
imul
pushf
mov
xchg
sbb
lahf
xchg
test
retn
jmp
add
das
adc
mov
dec
cmp
imul
pop
ror
test
mov
or
pop
cmp
mov
test
or
stc
xor
add
js
js
fcomp
loope
adc
sub
mov
pop
test
aaa
retn
mov
pop
cmp
xchg
cld
push
or
adc
push
cwde
inc
pop
sbb
sub
xchg
cmp
stc
nop
xor
bound
in
sbb
ja
fdiv
and
test
ror
sub
ja
add
retn
jle
xor
rcl
dec
int
inc
pusha
mov
mov
mov
push
pop
or
push
cmp
rcl
and
inc
jz
imul
or
rcr
dec
sub
xor
mov
adc
xchg
mov
mov
mov
nop
out
mov
pop
dec
mov
push
mov
mov
arpl
sbb
jge
in
outs
add
int
sbb
retf
or
call
enter
retn
inc
in
fdiv
mov
retn
mov
sub
fidivr
xchg
jnp
push
test
out
jmp
adc
aad
push
fldcw
push
out
pop
rcr
adc
mov
lahf
insb
dec
mov
sbb
mov
cmp
add
xchg
mul
adc
icebp
mov
lodsd
pop
jp
pop
test
jge
adc
cld
mul
mov
rol
mov
xchg
pop
aas
das
and
inc
mov
or
inc
sub
sar
nop
sub
sbb
add
dec
mov
sal
mov
or
xchg
aad
mov
call
dec
dec
test
dec
sub
mov
cmp
jge
test
clc
jecxz
vmovdqu
xchg
jnz
mov
push
arpl
add
xor
iret
adc
add
push
or
dec
lock
xchg
movsb
lahf
jmp
outsd
sbb
in
xor
push
mov
pop
scasd
mov
xor
inc
adc
pusha
sub
lock
push
mov
adc
rep
push
cli
mov
stc
mov
push
enter
sbb
xchg
push
stc
xor
xor
loop
xchg
sti
mov
mov
nop
xchg
arpl
cmp
or
or
push
insd
cmp
das
pusha
js
dec
cli
sbb
test
adc
cmp
push
call
cmp
frstor
push
push
xlat
dec
aam
int
cmp
sbb
idiv
out
ficom
mov
cmp
aaa
jnp
push
push
adc
sub
wait
inc
cmp
retn
sbb
call
jno
icebp
adc
setalc
inc
test
arpl
cmpsd
call
rcl
cmp
les
in
sar
js
add
fiadd
inc
jecxz
pusha
stosd
inc
shl
mov
jb
insb
sar
pop
dec
retf
xchg
inc
shr
mov
out
aaa
pop
jle
sbb
pop
xchg
jge
mov
fist
jbe
push
sbb
daa
dec
cmp
or
cmpsd
cdq
xchg
nop
test
stosd
xchg
jbe
push
push
sub
adc
sbb
cli
cmc
sub
les
cld
sbb
mov
dec
add
sub
pop
dec
loopne
xchg
lahf
shl
mov
jnp
jno
push
out
push
outsd
pop
sub
xchg
push
sti
bound
add
jle
sbb
out
inc
in
sub
jnp
shl
mov
mov
push
call
pop
dec
add
inc
mov
scasb
test
push
xor
mov
mov
push
mov
mov
test
push
lahf
aam
sar
push
cmp
cmp
ja
fsub
mov
xchg
jmp
wait
cmp
iret
jmp
cdq
popf
mov
lahf
jecxz
inc
aas
inc
sahf
fbld
cmpsd
sub
scasd
stc
fbstp
xchg
js
cmp
push
ficomp
cdq
sbb
fcom
or
out
lahf
retn
xlat
dec
cmp
xchg
retf
out
ja
cdq
push
push
nop
jz
or
fmul
sub
lodsd
push
loop
xor
cmpsb
push
pop
inc
xor
sub
push
mov
mov
mov
retn
sahf
inc
or
xchg
mov
push
add
mov
scasb
pop
adc
dec
mov
xlat
xchg
mov
int
in
call
pop
push
scasd
aaa
leave
xchg
mov
xor
jecxz
cld
mov
jle
mov
in
pop
xchg
xor
and
push
or
sbb
insb
call
pop
test
xlat
inc
sub
jns
dec
aam
and
js
fnstcw
xchg
das
mov
inc
retn
in
into
scasb
std
ffreep
cmp
sub
xchg
popf
fcomp5
ror
test
and
pop
sti
or
pop
jg
jz
sub
fcom
imul
rep
shl
aaa
jge
dec
int
sti
xor
inc
in
fldenv
jle
mov
adc
pop
or
xlat
js
das
jmp
push
test
js
int
jbe
wait
ficomp
push
in
rol
insb
push
add
adc
push
mov
insb
scasd
fbstp
adc
xchg
setalc
dec
inc
imul
setalc
jecxz
repne
fnclex
shl
mov
shr
int
mov
pop
dec
ins
mov
xchg
call
pop
adc
add
in
add
pop
add
clc
retf
in
mov
cmp
xor
mov
cmpsb
wait
imul
scasb
adc
dec
mov
sbb
or
cmp
loop
and
fst
inc
enter
pop
rol
call
or
aaa
scasb
mov
jmp
not
inc
fisubr
in
push
add
jge
inc
cmp
push
fld
lodsb
fdiv
out
jnp
test
pop
xlat
fsub
xchg
inc
add
neg
add
stc
out
clc
add
mov
popa
jns
sub
and
daa
out
push
movzx
shr
and
jecxz
aad
inc
inc
pop
dec
in
inc
add
sbb
jmp
inc
dec
lodsd
push
sahf
inc
mov
pop
pop
vmovapd
xor
push
inc
xchg
das
pop
popf
inc
xor
scasb
mov
scasb
and
in
jb
jle
icebp
jmp
pop
adc
mov
push
jno
popf
mov
xor
fcom
lodsb
sal
jle
jbe
dec
js
in
pand
setalc
das
jmp
sbb
push
lea
jz
mov
cmp
xchg
push
push
sub
adc
and
mov
rol
pusha
add
pop
aaa
sbb
jo
repne
outsb
jns
mov
aam
sahf
wait
add
sbb
inc
xchg
cmp
mov
mov
add
sbb
outsd
sub
sbb
sub
xlat
jb
pop
pop
xchg
pop
and
sub
mov
insb
pop
setalc
pop
dec
or
cmc
pop
retf
lodsb
in
add
mov
setalc
jmp
rcr
out
loope
fnstsw
pusha
outsb
push
in
loop
push
dec
jmp
add
or
jg
inc
jle
inc
lock
add
scasd
fsubp
xlat
sar
fisub
pop
xchg
push
aad
xchg
sti
sub
mov
push
jno
inc
rol
icebp
test
test
jmp
daa
push
or
cli
mov
setalc
mov
mov
adc
nop
push
mov
jb
out
sar
mov
sbb
call
mov
sal
retn
inc
sub
wait
inc
mov
mov
sbb
adc
pushf
push
dec
mov
popf
loop
in
sbb
div
adc
and
insb
pop
lea
retn
sbb
xor
sub
push
inc
retn
test
mov
sbb
mov
xchg
das
or
pop
xchg
mov
add
stosb
mov
stc
out
loopne
iret
setalc
cmpsb
mov
pop
icebp
and
sti
das
lsl
mov
push
int
shr
mov
mov
loopne
loope
lahf
mov
outsb
pop
cmpsd
cmp
inc
sbb
aas
retf
jecxz
cmp
fisub
jge
dec
imul
retf
push
xchg
hlt
pop
retf
aaa
push
sar
mov
add
jnp
pop
retn
icebp
ja
ficomp
stosb
fsubr
push
inc
xchg
inc
jbe
xchg
pushf
scasb
stosd
lodsb
test
adc
xchg
pop
xchg
xchg
rol
inc
shr
ja
jnz
mov
mov
sbb
mov
icebp
sub
adc
mov
out
cmpsb
adc
mov
jnb
push
cmpsd
and
sti
rep
xor
hlt
sub
add
into
lodsb
sbb
xor
imul
lodsb
retf
cwde
mov
dec
pop
pop
add
cmp
mov
push
sbb
call
test
mov
pop
jmp
outsd
lock
aaa
add
inc
mov
mov
inc
add
mov
jecxz
inc
pop
xor
js
mov
out
inc
fdivp
mov
shr
pop
jo
cwde
fdivr
movsb
outsd
icebp
jno
jl
sub
loope
adc
mov
xchg
out
lodsd
jnz
dec
mov
adc
stosd
cmpsb
pop
or
fsub
test
adc
add
inc
stosd
or
in
enter
and
mov
jns
movsd
xor
cmp
call
pop
dec
or
test
xor
jnb
and
push
cwde
pop
out
mov
out
inc
jns
in
test
mov
jg
out
cmpsb
jnb
retn
sbb
call
clc
retn
test
xlat
or
add
xchg
sub
mov
sub
xor
clc
jnz
cmp
aam
add
cmp
dec
fidiv
cmp
push
cmp
mov
and
mov
and
retn
pop
xchg
push
pop
rcl
in
jmp
pop
mov
pushf
test
jp
xor
sbb
mov
in
push
xor
inc
inc
loopne
add
adc
lahf
pop
sal
std
mov
ja
retf
xchg
clc
or
dec
push
leave
add
xor
dec
jl
movsb
add
pusha
or
imul
rep
pop
movsd
test
test
jnp
xchg
dec
cmpsb
test
adc
popa
xchg
test
arpl
xchg
retn
rol
fdiv
in
stc
and
call
mov
inc
xchg
lodsd
pop
and
jecxz
mov
bound
mov
jp
setalc
clc
call
lodsb
jl
mov
cmp
adc
or
and
adc
cli
rcr
or
push
mov
mov
pusha
mov
fdiv
mov
jb
sahf
in
out
or
or
mov
add
bound
fcomi
push
jz
cli
ja
icebp
jmp
inc
add
lds
push
test
insb
jmp
xchg
inc
add
xchg
mov
rep
jmp
aam
popf
svts
add
cmp
sub
dec
dec
dec
xor
dec
sub
push
sbb
ud2
enter
mov
enter
mov
enter
mov
retf
cli
leave
mov
lea
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
lahf
xchg
test
cld
jmp
retn
retf
pusha
call
pop
inc
push
retn
